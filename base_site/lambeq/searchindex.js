Search.setIndex({"alltitles": {"0.1.0": [[52, "rel-0-1-0"]], "0.1.1": [[52, "rel-0-1-1"]], "0.1.2": [[52, "rel-0-1-2"]], "0.2.0": [[52, "rel-0-2-0"]], "0.2.1": [[52, "rel-0-2-1"]], "0.2.2": [[52, "rel-0-2-2"]], "0.2.3": [[52, "rel-0-2-3"]], "0.2.4": [[52, "rel-0-2-4"]], "0.2.5": [[52, "rel-0-2-5"]], "0.2.6": [[52, "rel-0-2-6"]], "0.2.7": [[52, "rel-0-2-7"]], "0.2.8": [[52, "rel-0-2-8"]], "0.3.0": [[52, "rel-0-3-0"]], "0.3.1": [[52, "rel-0-3-1"]], "0.3.2": [[52, "rel-0-3-2"]], "0.3.3": [[52, "rel-0-3-3"]], "0.4.0": [[52, "rel-0-4-0"]], "0.4.1": [[52, "rel-0-4-1"]], "0.4.2": [[52, "rel-0-4-2"]], "0.4.3": [[52, "rel-0-4-3"]], "A complete use case": [[67, null]], "Adding custom layers to the model": [[63, "adding-custom-layers-to-the-model"]], "Advanced: Extending lambeq": [[58, null]], "Advanced: Manual training": [[40, null]], "Advanced: low-level lambeq": [[12, null]], "Adverb rules": [[22, "adverb-rules"]], "Analysing the internal representations of the model": [[64, "analysing-the-internal-representations-of-the-model"]], "Ans\u00e4tze": [[14, "ans\u00e4tze"]], "Auxiliary rule": [[22, "auxiliary-rule"]], "Available Options": [[53, "id4"]], "Backend configurations for different use cases.": [[41, "id1"]], "Bag-of-words: Spiders reader": [[62, "bag-of-words-spiders-reader"]], "Basic usage": [[14, "basic-usage"]], "Bibliography": [[13, null]], "Binary vs multi-class classification": [[42, "binary-vs-multi-class-classification"]], "Box-level rewrite rules": [[61, "box-level-rewrite-rules"]], "Categories": [[59, "categories"]], "Choosing a model": [[41, null]], "Circuit": [[15, null]], "Circuit symbols": [[66, "circuit-symbols"]], "CircuitAnsatz example: \u201cReal-valued\u201d ansatz": [[58, "circuitansatz-example-real-valued-ansatz"]], "Class diagrams": [[68, null]], "Classical DisCoCat: Tensor networks": [[57, "classical-discocat-tensor-networks"]], "Classical case": [[60, "classical-case"]], "Classical pipeline": [[16, null]], "Code of conduct": [[0, "code-of-conduct"]], "Command-line interface": [[14, null]], "Common training use cases.": [[69, "id4"]], "Configuration": [[14, "configuration"]], "Connector rule": [[22, "connector-rule"]], "Contributing to lambeq": [[0, null]], "Contributions": [[58, "contributions"]], "Coordination": [[22, "coordination"]], "Create (pure quantum) model and initialise parameters": [[18, "create-pure-quantum-model-and-initialise-parameters"]], "Create circuits": [[16, "create-circuits"], [18, "create-circuits"], [19, "create-circuits"], [20, "create-circuits"], [23, "create-circuits"], [64, "create-circuits"], [65, "create-circuits"]], "Create datasets": [[63, "create-datasets"], [64, "create-datasets"], [65, "create-datasets"]], "Create diagram": [[23, "create-diagram"]], "Create diagrams": [[16, "create-diagrams"], [19, "create-diagrams"], [20, "create-diagrams"]], "Creating PNG files": [[51, null]], "Creating a hybrid model": [[18, "creating-a-hybrid-model"]], "Creating a vocabulary": [[67, "creating-a-vocabulary"]], "Creating and parameterising diagrams": [[63, "creating-and-parameterising-diagrams"], [64, "creating-and-parameterising-diagrams"], [65, "creating-and-parameterising-diagrams"], [67, "creating-and-parameterising-diagrams"]], "Creating ans\u00e4tze": [[58, "creating-ansatze"]], "Creating readers": [[58, "creating-readers"]], "Creating rewrite rules": [[58, "creating-rewrite-rules"]], "Cross-validation": [[45, "cross-validation"]], "Curry functor": [[22, "curry-functor"]], "Datasets and corpora": [[43, "datasets-and-corpora"]], "Define Evaluation Metric": [[16, "define-evaluation-metric"]], "Define evaluation metric": [[19, "define-evaluation-metric"], [20, "define-evaluation-metric"], [23, "define-evaluation-metric"], [63, "define-evaluation-metric"]], "Define loss and evaluation metric": [[64, "define-loss-and-evaluation-metric"], [65, "define-loss-and-evaluation-metric"]], "Define loss function": [[67, "define-loss-function"]], "DepCCG support": [[31, "depccg-support"]], "Detailed options": [[14, "detailed-options"]], "Determine test accuracy": [[18, "determine-test-accuracy"]], "Determine the test accuracy": [[18, "determine-the-test-accuracy"]], "Determiner rule": [[22, "determiner-rule"]], "Diagram-level rewriters": [[61, "diagram-level-rewriters"]], "DisCoCat in lambeq": [[57, null]], "Evaluate": [[67, "evaluate"]], "Evaluate test accuracy": [[64, "evaluate-test-accuracy"]], "Evaluation metrics": [[42, "evaluation-metrics"]], "Evaluation of classical tensor-based models": [[69, "evaluation-of-classical-tensor-based-models"]], "Evaluation of quantum circuits on a quantum computer": [[69, "evaluation-of-quantum-circuits-on-a-quantum-computer"]], "Exact (non shot-based) simulation of quantum circuits on classical hardware": [[69, "exact-non-shot-based-simulation-of-quantum-circuits-on-classical-hardware"]], "Example 1: \u201cVery\u201d functor": [[57, "example-1-very-functor"]], "Example 2: Twist functor": [[57, "example-2-twist-functor"]], "Examples": [[47, null]], "External links": [[30, null]], "Filter and simplify diagrams": [[65, "filter-and-simplify-diagrams"]], "Final output": [[23, "final-output"]], "From symbols to tensors": [[66, "from-symbols-to-tensors"]], "Functors": [[57, "functors"]], "Getting started": [[30, null]], "Glossary": [[29, null]], "Grammar category": [[34, "grammar-category"]], "Handling unknown words": [[27, null], [43, "handling-unknown-words"]], "Handling unknown words in syntax-based models": [[27, "handling-unknown-words-in-syntax-based-models"]], "Handling unknown words in syntax-free models": [[27, "handling-unknown-words-in-syntax-free-models"]], "How to cite": [[32, "how-to-cite"]], "Hybrid classical/quantum simulations on classical hardware": [[69, "hybrid-classical-quantum-simulations-on-classical-hardware"]], "Hybrid models": [[64, "hybrid-models"]], "Index": [[28, null]], "Initialise model": [[64, "initialise-model"]], "Initialise the model": [[18, "initialise-the-model"]], "Initialise trainer": [[63, "initialise-trainer"], [64, "initialise-trainer"], [65, "initialise-trainer"]], "Initialize Trainer": [[16, "initialize-trainer"]], "Initialize trainer": [[19, "initialize-trainer"], [20, "initialize-trainer"], [23, "initialize-trainer"]], "Input data": [[16, "input-data"], [63, "input-data"], [64, "input-data"], [65, "input-data"], [67, "input-data"]], "Installation": [[31, null]], "Instantiate model": [[63, "instantiate-model"], [64, "instantiate-model"]], "Instantiate the model": [[65, "instantiate-the-model"]], "Interface with discopy": [[34, "interface-with-discopy"]], "Interface with tket": [[34, "interface-with-tket"]], "Introduction": [[44, null]], "Introduction to symbols": [[66, null]], "Licence": [[32, "licence"]], "Loss functions": [[42, "loss-functions"]], "Machine learning best practices": [[45, null]], "Make paired dataset": [[18, "make-paired-dataset"], [64, "make-paired-dataset"]], "Matrix product states": [[60, "matrix-product-states"]], "Monoidal categories": [[59, "monoidal-categories"]], "Monoidal categories in lambeq": [[59, null]], "Motivation and connection to tensor networks": [[54, "motivation-and-connection-to-tensor-networks"]], "NLP, QNLP and Computational Lingustics": [[44, "nlp-qnlp-and-computational-lingustics"]], "NLP-101": [[30, null]], "NaN and Inf errors during training": [[56, "nan-and-inf-errors-during-training"]], "Named Arguments": [[14, "named-arguments"]], "Notes": [[34, "notes"], [34, "id365"]], "Numerical Backend": [[34, "numerical-backend"]], "NumpyModel": [[41, "numpymodel"]], "Online courses": [[46, "online-courses"]], "Opening a pull request": [[0, "opening-a-pull-request"]], "Opening an issue": [[0, "opening-an-issue"]], "Organisations": [[46, "organisations"]], "Other options": [[14, "other-options"]], "Output": [[14, "output"]], "Parameterise": [[16, "parameterise"], [19, "parameterise"], [20, "parameterise"], [23, "parameterise"]], "Parser": [[14, "parser"], [17, null]], "PennyLane interface": [[34, "pennylane-interface"]], "PennyLaneModel": [[41, "pennylanemodel"]], "Pipeline": [[50, null]], "Positional Arguments": [[14, "positional-arguments"]], "Pre-processing and tokenisation": [[62, "pre-processing-and-tokenisation"]], "Pregroup grammars": [[54, "pregroup-grammars"], [57, "pregroup-grammars"]], "Preparation": [[63, "preparation"], [64, "preparation"], [65, "preparation"], [67, "preparation"]], "Prepare train dataset": [[18, "prepare-train-dataset"]], "Prepositional phrase rule": [[22, "prepositional-phrase-rule"]], "PytorchModel": [[41, "pytorchmodel"]], "Quantum DisCoCat: Quantum circuits": [[57, "quantum-discocat-quantum-circuits"]], "Quantum case": [[60, "quantum-case"]], "Quantum category": [[34, "quantum-category"]], "Quantum pipeline using JAX backend": [[20, null]], "Quantum pipeline using the Quantum Trainer": [[19, null]], "Quantum platforms.": [[69, "id5"]], "Read in the data and create diagrams": [[18, "read-in-the-data-and-create-diagrams"], [19, "read-in-the-data-and-create-diagrams"], [20, "read-in-the-data-and-create-diagrams"]], "Reader": [[21, null]], "Reader example: \u201cComb\u201d reader": [[58, "reader-example-comb-reader"]], "Reading": [[46, "reading"]], "Reading CCGBank": [[49, "reading-ccgbank"]], "Reference": [[30, null]], "References for further study": [[46, null]], "Relative Pronoun rules": [[22, "relative-pronoun-rules"]], "Release notes": [[52, null]], "Remove cups": [[18, "remove-cups"], [22, "remove-cups"]], "Remove the cups": [[19, "remove-the-cups"], [20, "remove-the-cups"]], "Results": [[63, "results"], [64, "results"], [65, "results"]], "Rewrite": [[22, null]], "Rewrite rules and ans\u00e4tze": [[14, "rewrite-rules-and-ansatze"]], "RewriteRule example: \u201cPast\u201d functor": [[58, "rewriterule-example-past-functor"]], "Rewriter": [[14, "rewriter"]], "Rigid monoidal categories": [[59, "rigid-monoidal-categories"]], "Rotosolve optimizer": [[23, null]], "Running on a real quantum computer": [[64, "running-on-a-real-quantum-computer"]], "SSL error [Windows]": [[56, "ssl-error-windows"]], "Shot-based simulation of quantum circuits on classical hardware": [[69, "shot-based-simulation-of-quantum-circuits-on-classical-hardware"]], "Show results": [[16, "show-results"], [19, "show-results"], [20, "show-results"], [23, "show-results"]], "SimpleRewriteRule example: Negation functor": [[58, "simplerewriterule-example-negation-functor"]], "Simplify diagrams": [[64, "simplify-diagrams"]], "Snake removal": [[34, "snake-removal"]], "Software tools": [[46, "software-tools"]], "Splitting a document into sentences": [[25, "splitting-a-document-into-sentences"]], "Step 1. Sentence input": [[62, null]], "Step 2. Diagram rewriting": [[61, null]], "Step 3. Parameterisation": [[60, null]], "Step 4: Training": [[55, null]], "Strict pregroups mode": [[14, "strict-pregroups-mode"]], "String diagrams": [[54, null]], "Subpackages": [[48, null]], "Syntactic parsing": [[49, null]], "Syntax-based model: DisCoCat": [[62, "syntax-based-model-discocat"]], "Tasks and applications": [[44, "tasks-and-applications"]], "Tensor": [[24, null]], "Tensor category": [[34, "tensor-category"]], "TensorAnsatz example: \u201cPositive\u201d ansatz": [[58, "tensoransatz-example-positive-ansatz"]], "Text classification": [[42, null]], "Text pre-processing": [[43, "text-pre-processing"]], "TketModel": [[41, "tketmodel"]], "Tokenisation": [[25, null]], "Tokenization": [[43, "tokenization"]], "Toolkit": [[30, null]], "Train": [[16, "train"], [19, "train"], [20, "train"], [63, "train"], [64, "train"], [65, "train"], [67, "train"]], "Train and log accuracies": [[64, "train-and-log-accuracies"]], "Train the model and log accuracies": [[18, "train-the-model-and-log-accuracies"]], "Training": [[18, "training"], [63, "training"], [64, "training"], [65, "training"], [67, "training"]], "Training hybrid models using the Pennylane backend": [[18, null]], "Training: Classical case": [[63, null]], "Training: Hybrid case": [[64, null]], "Training: Quantum case": [[65, null]], "Tree reader": [[26, null]], "Tree readers": [[62, "tree-readers"]], "Trivial contributions": [[0, "trivial-contributions"]], "Troubleshooting": [[56, null]], "Tutorials": [[30, null]], "Typical NLP workflow": [[44, "typical-nlp-workflow"]], "User guide": [[30, null]], "User support": [[32, "user-support"]], "Using PytorchTrainer": [[18, "using-pytorchtrainer"]], "Using a reader": [[14, "using-a-reader"]], "Using standard PyTorch": [[18, "using-standard-pytorch"], [64, "using-standard-pytorch"]], "What is lambeq?": [[32, null]], "Where to start": [[0, "where-to-start"]], "Word tokenisation": [[25, "word-tokenisation"]], "Word-sequence models: Cups and stairs readers": [[62, "word-sequence-models-cups-and-stairs-readers"]], "Working with quantum circuits": [[67, "working-with-quantum-circuits"]], "Working with text data": [[43, null]], "lambeq package": [[53, null]], "lambeq use cases": [[69, null]], "lambeq.ansatz": [[33, null], [48, "lambeq-ansatz"], [68, "lambeq-ansatz"]], "lambeq.backend": [[34, null], [48, "lambeq-backend"], [68, "lambeq-backend"]], "lambeq.backend.converters.discopy": [[34, "module-lambeq.backend.converters.discopy"]], "lambeq.backend.converters.tk": [[34, "lambeq-backend-converters-tk"]], "lambeq.backend.drawing": [[34, "module-lambeq.backend.drawing"]], "lambeq.backend.grammar": [[34, "module-lambeq.backend.grammar"]], "lambeq.backend.numerical_backend": [[34, "module-lambeq.backend.numerical_backend"]], "lambeq.backend.pennylane": [[34, "module-lambeq.backend.pennylane"]], "lambeq.backend.quantum": [[34, "module-lambeq.backend.quantum"]], "lambeq.backend.snake_removal": [[34, "module-lambeq.backend.snake_removal"]], "lambeq.backend.tensor": [[34, "module-lambeq.backend.tensor"]], "lambeq.bobcat": [[35, null], [48, "lambeq-bobcat"], [68, "lambeq-bobcat"]], "lambeq.rewrite": [[36, null], [48, "lambeq-rewrite"], [68, "lambeq-rewrite"]], "lambeq.text2diagram": [[37, null], [48, "lambeq-text2diagram"], [68, "lambeq-text2diagram"]], "lambeq.tokeniser": [[38, null], [48, "lambeq-tokeniser"], [68, "lambeq-tokeniser"]], "lambeq.training": [[39, null], [48, "lambeq-training"], [68, "lambeq-training"]]}, "docnames": ["CONTRIBUTING", "_code/discocat", "_code/extend-lambeq", "_code/monoidal", "_code/parameterise", "_code/rewrite", "_code/sentence-input", "_code/trainer-classical", "_code/trainer-hybrid", "_code/trainer-quantum", "_code/training-symbols", "_code/training-usecase", "advanced", "bibliography", "cli", "examples/circuit", "examples/classical-pipeline", "examples/parser", "examples/pennylane", "examples/quantum-pipeline", "examples/quantum-pipeline-jax", "examples/reader", "examples/rewrite", "examples/rotosolve-optimizer", "examples/tensor", "examples/tokenisation", "examples/tree-reader", "examples/unk-words", "genindex", "glossary", "index", "installation", "intro", "lambeq.ansatz", "lambeq.backend", "lambeq.bobcat", "lambeq.rewrite", "lambeq.text2diagram", "lambeq.tokeniser", "lambeq.training", "manual-training", "models", "nlp-class", "nlp-data", "nlp-intro", "nlp-ml", "nlp-refs", "notebooks", "package-api", "parsing", "pipeline", "puml/README", "release-notes", "root-api", "string-diagrams", "training", "troubleshooting", "tutorials/discocat", "tutorials/extend-lambeq", "tutorials/monoidal", "tutorials/parameterise", "tutorials/rewrite", "tutorials/sentence-input", "tutorials/trainer-classical", "tutorials/trainer-hybrid", "tutorials/trainer-quantum", "tutorials/training-symbols", "tutorials/training-usecase", "uml-diagrams", "use-cases"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["CONTRIBUTING.rst", "_code/discocat.ipynb", "_code/extend-lambeq.ipynb", "_code/monoidal.ipynb", "_code/parameterise.ipynb", "_code/rewrite.ipynb", "_code/sentence-input.ipynb", "_code/trainer-classical.ipynb", "_code/trainer-hybrid.ipynb", "_code/trainer-quantum.ipynb", "_code/training-symbols.ipynb", "_code/training-usecase.ipynb", "advanced.rst", "bibliography.rst", "cli.rst", "examples/circuit.ipynb", "examples/classical-pipeline.ipynb", "examples/parser.ipynb", "examples/pennylane.ipynb", "examples/quantum-pipeline.ipynb", "examples/quantum-pipeline-jax.ipynb", "examples/reader.ipynb", "examples/rewrite.ipynb", "examples/rotosolve-optimizer.ipynb", "examples/tensor.ipynb", "examples/tokenisation.ipynb", "examples/tree-reader.ipynb", "examples/unk-words.ipynb", "genindex.rst", "glossary.rst", "index.rst", "installation.rst", "intro.rst", "lambeq.ansatz.rst", "lambeq.backend.rst", "lambeq.bobcat.rst", "lambeq.rewrite.rst", "lambeq.text2diagram.rst", "lambeq.tokeniser.rst", "lambeq.training.rst", "manual-training.rst", "models.rst", "nlp-class.rst", "nlp-data.rst", "nlp-intro.rst", "nlp-ml.rst", "nlp-refs.rst", "notebooks.rst", "package-api.rst", "parsing.rst", "pipeline.rst", "puml/README.md", "release-notes.rst", "root-api.rst", "string-diagrams.rst", "training.rst", "troubleshooting.rst", "tutorials/discocat.ipynb", "tutorials/extend-lambeq.ipynb", "tutorials/monoidal.ipynb", "tutorials/parameterise.ipynb", "tutorials/rewrite.ipynb", "tutorials/sentence-input.ipynb", "tutorials/trainer-classical.ipynb", "tutorials/trainer-hybrid.ipynb", "tutorials/trainer-quantum.ipynb", "tutorials/training-symbols.ipynb", "tutorials/training-usecase.ipynb", "uml-diagrams.rst", "use-cases.rst"], "indexentries": {"__call__() (lambeq.ansatz.baseansatz method)": [[33, "lambeq.ansatz.BaseAnsatz.__call__", false]], "__call__() (lambeq.ansatz.circuitansatz method)": [[33, "lambeq.ansatz.CircuitAnsatz.__call__", false]], "__call__() (lambeq.ansatz.mpsansatz method)": [[33, "lambeq.ansatz.MPSAnsatz.__call__", false]], "__call__() (lambeq.ansatz.spideransatz method)": [[33, "lambeq.ansatz.SpiderAnsatz.__call__", false]], "__call__() (lambeq.ansatz.tensoransatz method)": [[33, "lambeq.ansatz.TensorAnsatz.__call__", false]], "__call__() (lambeq.backend.grammar.category method)": [[34, "lambeq.backend.grammar.Category.__call__", false]], "__call__() (lambeq.backend.grammar.functor method)": [[34, "lambeq.backend.grammar.Functor.__call__", false]], "__call__() (lambeq.baseansatz method)": [[53, "lambeq.BaseAnsatz.__call__", false]], "__call__() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.__call__", false]], "__call__() (lambeq.bobcat.chartparser method)": [[35, "lambeq.bobcat.ChartParser.__call__", false]], "__call__() (lambeq.bobcat.tagger method)": [[35, "lambeq.bobcat.Tagger.__call__", false]], "__call__() (lambeq.ccgrule method)": [[53, "lambeq.CCGRule.__call__", false]], "__call__() (lambeq.circuitansatz method)": [[53, "lambeq.CircuitAnsatz.__call__", false]], "__call__() (lambeq.diagramrewriter method)": [[53, "lambeq.DiagramRewriter.__call__", false]], "__call__() (lambeq.lossfunction method)": [[53, "lambeq.LossFunction.__call__", false]], "__call__() (lambeq.model method)": [[53, "lambeq.Model.__call__", false]], "__call__() (lambeq.mpsansatz method)": [[53, "lambeq.MPSAnsatz.__call__", false]], "__call__() (lambeq.quantummodel method)": [[53, "lambeq.QuantumModel.__call__", false]], "__call__() (lambeq.rewrite.coordinationrewriterule method)": [[36, "lambeq.rewrite.CoordinationRewriteRule.__call__", false]], "__call__() (lambeq.rewrite.curryrewriterule method)": [[36, "lambeq.rewrite.CurryRewriteRule.__call__", false]], "__call__() (lambeq.rewrite.diagramrewriter method)": [[36, "lambeq.rewrite.DiagramRewriter.__call__", false]], "__call__() (lambeq.rewrite.removecupsrewriter method)": [[36, "lambeq.rewrite.RemoveCupsRewriter.__call__", false]], "__call__() (lambeq.rewrite.removeswapsrewriter method)": [[36, "lambeq.rewrite.RemoveSwapsRewriter.__call__", false]], "__call__() (lambeq.rewrite.rewriter method)": [[36, "lambeq.rewrite.Rewriter.__call__", false]], "__call__() (lambeq.rewrite.rewriterule method)": [[36, "lambeq.rewrite.RewriteRule.__call__", false]], "__call__() (lambeq.rewrite.simplerewriterule method)": [[36, "lambeq.rewrite.SimpleRewriteRule.__call__", false]], "__call__() (lambeq.rewrite.unifycodomainrewriter method)": [[36, "lambeq.rewrite.UnifyCodomainRewriter.__call__", false]], "__call__() (lambeq.rewrite.unknownwordsrewriterule method)": [[36, "lambeq.rewrite.UnknownWordsRewriteRule.__call__", false]], "__call__() (lambeq.rewriter method)": [[53, "lambeq.Rewriter.__call__", false]], "__call__() (lambeq.rewriterule method)": [[53, "lambeq.RewriteRule.__call__", false]], "__call__() (lambeq.spideransatz method)": [[53, "lambeq.SpiderAnsatz.__call__", false]], "__call__() (lambeq.tensoransatz method)": [[53, "lambeq.TensorAnsatz.__call__", false]], "__call__() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.__call__", false]], "__call__() (lambeq.training.binarycrossentropyloss method)": [[39, "lambeq.training.BinaryCrossEntropyLoss.__call__", false]], "__call__() (lambeq.training.crossentropyloss method)": [[39, "lambeq.training.CrossEntropyLoss.__call__", false]], "__call__() (lambeq.training.lossfunction method)": [[39, "lambeq.training.LossFunction.__call__", false]], "__call__() (lambeq.training.model method)": [[39, "lambeq.training.Model.__call__", false]], "__call__() (lambeq.training.mseloss method)": [[39, "lambeq.training.MSELoss.__call__", false]], "__call__() (lambeq.training.numpymodel method)": [[39, "lambeq.training.NumpyModel.__call__", false]], "__call__() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.__call__", false]], "__call__() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.__call__", false]], "__call__() (lambeq.training.quantummodel method)": [[39, "lambeq.training.QuantumModel.__call__", false]], "__call__() (lambeq.training.tketmodel method)": [[39, "lambeq.training.TketModel.__call__", false]], "__init__() (lambeq.ansatz.baseansatz method)": [[33, "lambeq.ansatz.BaseAnsatz.__init__", false]], "__init__() (lambeq.ansatz.circuitansatz method)": [[33, "lambeq.ansatz.CircuitAnsatz.__init__", false]], "__init__() (lambeq.ansatz.iqpansatz method)": [[33, "lambeq.ansatz.IQPAnsatz.__init__", false]], "__init__() (lambeq.ansatz.mpsansatz method)": [[33, "lambeq.ansatz.MPSAnsatz.__init__", false]], "__init__() (lambeq.ansatz.sim14ansatz method)": [[33, "lambeq.ansatz.Sim14Ansatz.__init__", false]], "__init__() (lambeq.ansatz.sim15ansatz method)": [[33, "lambeq.ansatz.Sim15Ansatz.__init__", false]], "__init__() (lambeq.ansatz.sim4ansatz method)": [[33, "lambeq.ansatz.Sim4Ansatz.__init__", false]], "__init__() (lambeq.ansatz.spideransatz method)": [[33, "lambeq.ansatz.SpiderAnsatz.__init__", false]], "__init__() (lambeq.ansatz.stronglyentanglingansatz method)": [[33, "lambeq.ansatz.StronglyEntanglingAnsatz.__init__", false]], "__init__() (lambeq.ansatz.tensoransatz method)": [[33, "lambeq.ansatz.TensorAnsatz.__init__", false]], "__init__() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.__init__", false]], "__init__() (lambeq.backend.drawing.drawablediagram method)": [[34, "lambeq.backend.drawing.DrawableDiagram.__init__", false]], "__init__() (lambeq.backend.grammar.box method)": [[34, "lambeq.backend.grammar.Box.__init__", false]], "__init__() (lambeq.backend.grammar.cap method)": [[34, "lambeq.backend.grammar.Cap.__init__", false]], "__init__() (lambeq.backend.grammar.category method)": [[34, "lambeq.backend.grammar.Category.__init__", false]], "__init__() (lambeq.backend.grammar.cup method)": [[34, "lambeq.backend.grammar.Cup.__init__", false]], "__init__() (lambeq.backend.grammar.daggered method)": [[34, "lambeq.backend.grammar.Daggered.__init__", false]], "__init__() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.__init__", false]], "__init__() (lambeq.backend.grammar.diagrammable method)": [[34, "lambeq.backend.grammar.Diagrammable.__init__", false]], "__init__() (lambeq.backend.grammar.entity method)": [[34, "lambeq.backend.grammar.Entity.__init__", false]], "__init__() (lambeq.backend.grammar.functor method)": [[34, "lambeq.backend.grammar.Functor.__init__", false]], "__init__() (lambeq.backend.grammar.layer method)": [[34, "lambeq.backend.grammar.Layer.__init__", false]], "__init__() (lambeq.backend.grammar.spider method)": [[34, "lambeq.backend.grammar.Spider.__init__", false]], "__init__() (lambeq.backend.grammar.swap method)": [[34, "lambeq.backend.grammar.Swap.__init__", false]], "__init__() (lambeq.backend.grammar.ty method)": [[34, "lambeq.backend.grammar.Ty.__init__", false]], "__init__() (lambeq.backend.grammar.word method)": [[34, "lambeq.backend.grammar.Word.__init__", false]], "__init__() (lambeq.backend.numerical_backend.backend method)": [[34, "lambeq.backend.numerical_backend.Backend.__init__", false]], "__init__() (lambeq.backend.numerical_backend.jax method)": [[34, "lambeq.backend.numerical_backend.JAX.__init__", false]], "__init__() (lambeq.backend.numerical_backend.numpy method)": [[34, "lambeq.backend.numerical_backend.NumPy.__init__", false]], "__init__() (lambeq.backend.numerical_backend.pytorch method)": [[34, "lambeq.backend.numerical_backend.PyTorch.__init__", false]], "__init__() (lambeq.backend.numerical_backend.tensorflow method)": [[34, "lambeq.backend.numerical_backend.TensorFlow.__init__", false]], "__init__() (lambeq.backend.pennylane.pennylanecircuit method)": [[34, "lambeq.backend.pennylane.PennyLaneCircuit.__init__", false]], "__init__() (lambeq.backend.quantum.anticonjugate method)": [[34, "lambeq.backend.quantum.AntiConjugate.__init__", false]], "__init__() (lambeq.backend.quantum.bit method)": [[34, "lambeq.backend.quantum.Bit.__init__", false]], "__init__() (lambeq.backend.quantum.box method)": [[34, "lambeq.backend.quantum.Box.__init__", false]], "__init__() (lambeq.backend.quantum.bra method)": [[34, "lambeq.backend.quantum.Bra.__init__", false]], "__init__() (lambeq.backend.quantum.controlled method)": [[34, "lambeq.backend.quantum.Controlled.__init__", false]], "__init__() (lambeq.backend.quantum.daggered method)": [[34, "lambeq.backend.quantum.Daggered.__init__", false]], "__init__() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.__init__", false]], "__init__() (lambeq.backend.quantum.discard method)": [[34, "lambeq.backend.quantum.Discard.__init__", false]], "__init__() (lambeq.backend.quantum.encode method)": [[34, "lambeq.backend.quantum.Encode.__init__", false]], "__init__() (lambeq.backend.quantum.ket method)": [[34, "lambeq.backend.quantum.Ket.__init__", false]], "__init__() (lambeq.backend.quantum.layer method)": [[34, "lambeq.backend.quantum.Layer.__init__", false]], "__init__() (lambeq.backend.quantum.measure method)": [[34, "lambeq.backend.quantum.Measure.__init__", false]], "__init__() (lambeq.backend.quantum.mixedstate method)": [[34, "lambeq.backend.quantum.MixedState.__init__", false]], "__init__() (lambeq.backend.quantum.parametrized method)": [[34, "lambeq.backend.quantum.Parametrized.__init__", false]], "__init__() (lambeq.backend.quantum.rotation method)": [[34, "lambeq.backend.quantum.Rotation.__init__", false]], "__init__() (lambeq.backend.quantum.rx method)": [[34, "lambeq.backend.quantum.Rx.__init__", false]], "__init__() (lambeq.backend.quantum.ry method)": [[34, "lambeq.backend.quantum.Ry.__init__", false]], "__init__() (lambeq.backend.quantum.rz method)": [[34, "lambeq.backend.quantum.Rz.__init__", false]], "__init__() (lambeq.backend.quantum.scalar method)": [[34, "lambeq.backend.quantum.Scalar.__init__", false]], "__init__() (lambeq.backend.quantum.selfconjugate method)": [[34, "lambeq.backend.quantum.SelfConjugate.__init__", false]], "__init__() (lambeq.backend.quantum.sqrt method)": [[34, "lambeq.backend.quantum.Sqrt.__init__", false]], "__init__() (lambeq.backend.quantum.swap method)": [[34, "lambeq.backend.quantum.Swap.__init__", false]], "__init__() (lambeq.backend.quantum.ty method)": [[34, "lambeq.backend.quantum.Ty.__init__", false]], "__init__() (lambeq.backend.snake_removal.interchangererror method)": [[34, "lambeq.backend.snake_removal.InterchangerError.__init__", false]], "__init__() (lambeq.backend.tensor.box method)": [[34, "lambeq.backend.tensor.Box.__init__", false]], "__init__() (lambeq.backend.tensor.cap method)": [[34, "lambeq.backend.tensor.Cap.__init__", false]], "__init__() (lambeq.backend.tensor.cup method)": [[34, "lambeq.backend.tensor.Cup.__init__", false]], "__init__() (lambeq.backend.tensor.daggered method)": [[34, "lambeq.backend.tensor.Daggered.__init__", false]], "__init__() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.__init__", false]], "__init__() (lambeq.backend.tensor.dim method)": [[34, "lambeq.backend.tensor.Dim.__init__", false]], "__init__() (lambeq.backend.tensor.layer method)": [[34, "lambeq.backend.tensor.Layer.__init__", false]], "__init__() (lambeq.backend.tensor.spider method)": [[34, "lambeq.backend.tensor.Spider.__init__", false]], "__init__() (lambeq.backend.tensor.swap method)": [[34, "lambeq.backend.tensor.Swap.__init__", false]], "__init__() (lambeq.baseansatz method)": [[53, "lambeq.BaseAnsatz.__init__", false]], "__init__() (lambeq.binarycrossentropyloss method)": [[53, "lambeq.BinaryCrossEntropyLoss.__init__", false]], "__init__() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.__init__", false]], "__init__() (lambeq.bobcat.category method)": [[35, "lambeq.bobcat.Category.__init__", false]], "__init__() (lambeq.bobcat.chartparser method)": [[35, "lambeq.bobcat.ChartParser.__init__", false]], "__init__() (lambeq.bobcat.grammar method)": [[35, "lambeq.bobcat.Grammar.__init__", false]], "__init__() (lambeq.bobcat.parsetree method)": [[35, "lambeq.bobcat.ParseTree.__init__", false]], "__init__() (lambeq.bobcat.sentence method)": [[35, "lambeq.bobcat.Sentence.__init__", false]], "__init__() (lambeq.bobcat.supertag method)": [[35, "lambeq.bobcat.Supertag.__init__", false]], "__init__() (lambeq.bobcat.tagger method)": [[35, "lambeq.bobcat.Tagger.__init__", false]], "__init__() (lambeq.bobcatparseerror method)": [[53, "lambeq.BobcatParseError.__init__", false]], "__init__() (lambeq.bobcatparser method)": [[53, "lambeq.BobcatParser.__init__", false]], "__init__() (lambeq.ccgbankparseerror method)": [[53, "lambeq.CCGBankParseError.__init__", false]], "__init__() (lambeq.ccgbankparser method)": [[53, "lambeq.CCGBankParser.__init__", false]], "__init__() (lambeq.ccgparser method)": [[53, "lambeq.CCGParser.__init__", false]], "__init__() (lambeq.ccgruleuseerror method)": [[53, "lambeq.CCGRuleUseError.__init__", false]], "__init__() (lambeq.ccgtree method)": [[53, "lambeq.CCGTree.__init__", false]], "__init__() (lambeq.ccgtype method)": [[53, "lambeq.CCGType.__init__", false]], "__init__() (lambeq.checkpoint method)": [[53, "lambeq.Checkpoint.__init__", false]], "__init__() (lambeq.circuitansatz method)": [[53, "lambeq.CircuitAnsatz.__init__", false]], "__init__() (lambeq.coordinationrewriterule method)": [[53, "lambeq.CoordinationRewriteRule.__init__", false]], "__init__() (lambeq.crossentropyloss method)": [[53, "lambeq.CrossEntropyLoss.__init__", false]], "__init__() (lambeq.curryrewriterule method)": [[53, "lambeq.CurryRewriteRule.__init__", false]], "__init__() (lambeq.dataset method)": [[53, "lambeq.Dataset.__init__", false]], "__init__() (lambeq.depccgparseerror method)": [[53, "lambeq.DepCCGParseError.__init__", false]], "__init__() (lambeq.depccgparser method)": [[53, "lambeq.DepCCGParser.__init__", false]], "__init__() (lambeq.iqpansatz method)": [[53, "lambeq.IQPAnsatz.__init__", false]], "__init__() (lambeq.linearreader method)": [[53, "lambeq.LinearReader.__init__", false]], "__init__() (lambeq.lossfunction method)": [[53, "lambeq.LossFunction.__init__", false]], "__init__() (lambeq.model method)": [[53, "lambeq.Model.__init__", false]], "__init__() (lambeq.mpsansatz method)": [[53, "lambeq.MPSAnsatz.__init__", false]], "__init__() (lambeq.neldermeadoptimizer method)": [[53, "lambeq.NelderMeadOptimizer.__init__", false]], "__init__() (lambeq.numpymodel method)": [[53, "lambeq.NumpyModel.__init__", false]], "__init__() (lambeq.optimizer method)": [[53, "lambeq.Optimizer.__init__", false]], "__init__() (lambeq.pennylanemodel method)": [[53, "lambeq.PennyLaneModel.__init__", false]], "__init__() (lambeq.pytorchmodel method)": [[53, "lambeq.PytorchModel.__init__", false]], "__init__() (lambeq.pytorchtrainer method)": [[53, "lambeq.PytorchTrainer.__init__", false]], "__init__() (lambeq.quantummodel method)": [[53, "lambeq.QuantumModel.__init__", false]], "__init__() (lambeq.quantumtrainer method)": [[53, "lambeq.QuantumTrainer.__init__", false]], "__init__() (lambeq.rewrite.coordinationrewriterule method)": [[36, "lambeq.rewrite.CoordinationRewriteRule.__init__", false]], "__init__() (lambeq.rewrite.curryrewriterule method)": [[36, "lambeq.rewrite.CurryRewriteRule.__init__", false]], "__init__() (lambeq.rewrite.rewriter method)": [[36, "lambeq.rewrite.Rewriter.__init__", false]], "__init__() (lambeq.rewrite.simplerewriterule method)": [[36, "lambeq.rewrite.SimpleRewriteRule.__init__", false]], "__init__() (lambeq.rewrite.unifycodomainrewriter method)": [[36, "lambeq.rewrite.UnifyCodomainRewriter.__init__", false]], "__init__() (lambeq.rewrite.unknownwordsrewriterule method)": [[36, "lambeq.rewrite.UnknownWordsRewriteRule.__init__", false]], "__init__() (lambeq.rewriter method)": [[53, "lambeq.Rewriter.__init__", false]], "__init__() (lambeq.rotosolveoptimizer method)": [[53, "lambeq.RotosolveOptimizer.__init__", false]], "__init__() (lambeq.sim14ansatz method)": [[53, "lambeq.Sim14Ansatz.__init__", false]], "__init__() (lambeq.sim15ansatz method)": [[53, "lambeq.Sim15Ansatz.__init__", false]], "__init__() (lambeq.sim4ansatz method)": [[53, "lambeq.Sim4Ansatz.__init__", false]], "__init__() (lambeq.simplerewriterule method)": [[53, "lambeq.SimpleRewriteRule.__init__", false]], "__init__() (lambeq.spacytokeniser method)": [[53, "lambeq.SpacyTokeniser.__init__", false]], "__init__() (lambeq.spideransatz method)": [[53, "lambeq.SpiderAnsatz.__init__", false]], "__init__() (lambeq.spsaoptimizer method)": [[53, "lambeq.SPSAOptimizer.__init__", false]], "__init__() (lambeq.stronglyentanglingansatz method)": [[53, "lambeq.StronglyEntanglingAnsatz.__init__", false]], "__init__() (lambeq.tensoransatz method)": [[53, "lambeq.TensorAnsatz.__init__", false]], "__init__() (lambeq.text2diagram.bobcatparseerror method)": [[37, "lambeq.text2diagram.BobcatParseError.__init__", false]], "__init__() (lambeq.text2diagram.bobcatparser method)": [[37, "lambeq.text2diagram.BobcatParser.__init__", false]], "__init__() (lambeq.text2diagram.ccgbankparseerror method)": [[37, "lambeq.text2diagram.CCGBankParseError.__init__", false]], "__init__() (lambeq.text2diagram.ccgbankparser method)": [[37, "lambeq.text2diagram.CCGBankParser.__init__", false]], "__init__() (lambeq.text2diagram.ccgparser method)": [[37, "lambeq.text2diagram.CCGParser.__init__", false]], "__init__() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.__init__", false]], "__init__() (lambeq.text2diagram.ccgruleuseerror method)": [[37, "lambeq.text2diagram.CCGRuleUseError.__init__", false]], "__init__() (lambeq.text2diagram.ccgtree method)": [[37, "lambeq.text2diagram.CCGTree.__init__", false]], "__init__() (lambeq.text2diagram.ccgtype method)": [[37, "lambeq.text2diagram.CCGType.__init__", false]], "__init__() (lambeq.text2diagram.depccgparseerror method)": [[37, "lambeq.text2diagram.DepCCGParseError.__init__", false]], "__init__() (lambeq.text2diagram.depccgparser method)": [[37, "lambeq.text2diagram.DepCCGParser.__init__", false]], "__init__() (lambeq.text2diagram.linearreader method)": [[37, "lambeq.text2diagram.LinearReader.__init__", false]], "__init__() (lambeq.text2diagram.treereader method)": [[37, "lambeq.text2diagram.TreeReader.__init__", false]], "__init__() (lambeq.text2diagram.webparseerror method)": [[37, "lambeq.text2diagram.WebParseError.__init__", false]], "__init__() (lambeq.text2diagram.webparser method)": [[37, "lambeq.text2diagram.WebParser.__init__", false]], "__init__() (lambeq.tketmodel method)": [[53, "lambeq.TketModel.__init__", false]], "__init__() (lambeq.tokeniser.spacytokeniser method)": [[38, "lambeq.tokeniser.SpacyTokeniser.__init__", false]], "__init__() (lambeq.trainer method)": [[53, "lambeq.Trainer.__init__", false]], "__init__() (lambeq.training.binarycrossentropyloss method)": [[39, "lambeq.training.BinaryCrossEntropyLoss.__init__", false]], "__init__() (lambeq.training.checkpoint method)": [[39, "lambeq.training.Checkpoint.__init__", false]], "__init__() (lambeq.training.crossentropyloss method)": [[39, "lambeq.training.CrossEntropyLoss.__init__", false]], "__init__() (lambeq.training.dataset method)": [[39, "lambeq.training.Dataset.__init__", false]], "__init__() (lambeq.training.lossfunction method)": [[39, "lambeq.training.LossFunction.__init__", false]], "__init__() (lambeq.training.model method)": [[39, "lambeq.training.Model.__init__", false]], "__init__() (lambeq.training.mseloss method)": [[39, "lambeq.training.MSELoss.__init__", false]], "__init__() (lambeq.training.neldermeadoptimizer method)": [[39, "lambeq.training.NelderMeadOptimizer.__init__", false]], "__init__() (lambeq.training.numpymodel method)": [[39, "lambeq.training.NumpyModel.__init__", false]], "__init__() (lambeq.training.optimizer method)": [[39, "lambeq.training.Optimizer.__init__", false]], "__init__() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.__init__", false]], "__init__() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.__init__", false]], "__init__() (lambeq.training.pytorchtrainer method)": [[39, "lambeq.training.PytorchTrainer.__init__", false]], "__init__() (lambeq.training.quantummodel method)": [[39, "lambeq.training.QuantumModel.__init__", false]], "__init__() (lambeq.training.quantumtrainer method)": [[39, "lambeq.training.QuantumTrainer.__init__", false]], "__init__() (lambeq.training.rotosolveoptimizer method)": [[39, "lambeq.training.RotosolveOptimizer.__init__", false]], "__init__() (lambeq.training.spsaoptimizer method)": [[39, "lambeq.training.SPSAOptimizer.__init__", false]], "__init__() (lambeq.training.tketmodel method)": [[39, "lambeq.training.TketModel.__init__", false]], "__init__() (lambeq.training.trainer method)": [[39, "lambeq.training.Trainer.__init__", false]], "__init__() (lambeq.treereader method)": [[53, "lambeq.TreeReader.__init__", false]], "__init__() (lambeq.unifycodomainrewriter method)": [[53, "lambeq.UnifyCodomainRewriter.__init__", false]], "__init__() (lambeq.unknownwordsrewriterule method)": [[53, "lambeq.UnknownWordsRewriteRule.__init__", false]], "__init__() (lambeq.webparseerror method)": [[53, "lambeq.WebParseError.__init__", false]], "__init__() (lambeq.webparser method)": [[53, "lambeq.WebParser.__init__", false]], "aams() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.AAMS", false]], "active_adapter() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.active_adapter", false]], "active_adapters() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.active_adapters", false]], "add_adapter() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.add_adapter", false]], "add_assertion() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_assertion", false]], "add_barrier() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_barrier", false]], "add_bit() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_bit", false]], "add_blank_wires() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_blank_wires", false]], "add_c_and() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_and", false]], "add_c_and_to_registers() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_and_to_registers", false]], "add_c_copybits() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_copybits", false]], "add_c_copyreg() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_copyreg", false]], "add_c_modifier() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_modifier", false]], "add_c_not() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_not", false]], "add_c_not_to_registers() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_not_to_registers", false]], "add_c_or() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_or", false]], "add_c_or_to_registers() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_or_to_registers", false]], "add_c_predicate() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_predicate", false]], "add_c_range_predicate() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_range_predicate", false]], "add_c_register() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_register", false]], "add_c_setbits() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_setbits", false]], "add_c_setreg() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_setreg", false]], "add_c_transform() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_transform", false]], "add_c_xor() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_xor", false]], "add_c_xor_to_registers() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_c_xor_to_registers", false]], "add_circbox() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_circbox", false]], "add_circbox_regwise() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_circbox_regwise", false]], "add_circbox_with_regmap() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_circbox_with_regmap", false]], "add_circuit() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_circuit", false]], "add_classicalexpbox_bit() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_classicalexpbox_bit", false]], "add_classicalexpbox_register() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_classicalexpbox_register", false]], "add_conditional_barrier() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_conditional_barrier", false]], "add_conjugation_box() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_conjugation_box", false]], "add_custom_gate() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_custom_gate", false]], "add_diagonal_box() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_diagonal_box", false]], "add_dummybox() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_dummybox", false]], "add_expbox() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_expbox", false]], "add_gate() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_gate", false]], "add_many() (lambeq.checkpoint method)": [[53, "lambeq.Checkpoint.add_many", false]], "add_many() (lambeq.training.checkpoint method)": [[39, "lambeq.training.Checkpoint.add_many", false]], "add_memory_hooks() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.add_memory_hooks", false]], "add_model_tags() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.add_model_tags", false]], "add_module() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.add_module", false]], "add_module() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.add_module", false]], "add_module() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.add_module", false]], "add_multiplexed_tensored_u2() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_multiplexed_tensored_u2", false]], "add_multiplexedrotation() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_multiplexedrotation", false]], "add_multiplexedu2() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_multiplexedu2", false]], "add_multiplexor() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_multiplexor", false]], "add_note() (lambeq.backend.snake_removal.interchangererror method)": [[34, "lambeq.backend.snake_removal.InterchangerError.add_note", false]], "add_note() (lambeq.text2diagram.bobcatparseerror method)": [[37, "lambeq.text2diagram.BobcatParseError.add_note", false]], "add_note() (lambeq.text2diagram.ccgbankparseerror method)": [[37, "lambeq.text2diagram.CCGBankParseError.add_note", false]], "add_note() (lambeq.text2diagram.ccgruleuseerror method)": [[37, "lambeq.text2diagram.CCGRuleUseError.add_note", false]], "add_note() (lambeq.text2diagram.depccgparseerror method)": [[37, "lambeq.text2diagram.DepCCGParseError.add_note", false]], "add_note() (lambeq.text2diagram.webparseerror method)": [[37, "lambeq.text2diagram.WebParseError.add_note", false]], "add_pauliexpbox() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_pauliexpbox", false]], "add_pauliexpcommutingsetbox() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_pauliexpcommutingsetbox", false]], "add_pauliexppairbox() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_pauliexppairbox", false]], "add_phase() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_phase", false]], "add_phasepolybox() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_phasepolybox", false]], "add_q_register() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_q_register", false]], "add_qcontrolbox() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_qcontrolbox", false]], "add_qubit() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_qubit", false]], "add_rules() (lambeq.rewrite.rewriter method)": [[36, "lambeq.rewrite.Rewriter.add_rules", false]], "add_rules() (lambeq.rewriter method)": [[53, "lambeq.Rewriter.add_rules", false]], "add_state_preparation_box() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_state_preparation_box", false]], "add_termsequencebox() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_termsequencebox", false]], "add_toffolibox() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_toffolibox", false]], "add_unitary1qbox() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_unitary1qbox", false]], "add_unitary2qbox() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_unitary2qbox", false]], "add_unitary3qbox() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_unitary3qbox", false]], "add_wasm() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_wasm", false]], "add_wasm_to_reg() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.add_wasm_to_reg", false]], "adjoint": [[29, "term-adjoint", true]], "ansatz (plural: ans\u00e4tze)": [[29, "term-ansatz-plural-ansatze", true]], "anticonjugate (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.AntiConjugate", false]], "append() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.append", false]], "apply() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.apply", false]], "apply() (lambeq.ccgrule method)": [[53, "lambeq.CCGRule.apply", false]], "apply() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.apply", false]], "apply() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.apply", false]], "apply() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.apply", false]], "apply_functor() (lambeq.backend.grammar.box method)": [[34, "lambeq.backend.grammar.Box.apply_functor", false]], "apply_functor() (lambeq.backend.grammar.cap method)": [[34, "lambeq.backend.grammar.Cap.apply_functor", false]], "apply_functor() (lambeq.backend.grammar.cup method)": [[34, "lambeq.backend.grammar.Cup.apply_functor", false]], "apply_functor() (lambeq.backend.grammar.daggered method)": [[34, "lambeq.backend.grammar.Daggered.apply_functor", false]], "apply_functor() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.apply_functor", false]], "apply_functor() (lambeq.backend.grammar.diagrammable method)": [[34, "lambeq.backend.grammar.Diagrammable.apply_functor", false]], "apply_functor() (lambeq.backend.grammar.spider method)": [[34, "lambeq.backend.grammar.Spider.apply_functor", false]], "apply_functor() (lambeq.backend.grammar.swap method)": [[34, "lambeq.backend.grammar.Swap.apply_functor", false]], "apply_functor() (lambeq.backend.grammar.ty method)": [[34, "lambeq.backend.grammar.Ty.apply_functor", false]], "apply_functor() (lambeq.backend.grammar.word method)": [[34, "lambeq.backend.grammar.Word.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.anticonjugate method)": [[34, "lambeq.backend.quantum.AntiConjugate.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.bit method)": [[34, "lambeq.backend.quantum.Bit.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.box method)": [[34, "lambeq.backend.quantum.Box.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.bra method)": [[34, "lambeq.backend.quantum.Bra.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.controlled method)": [[34, "lambeq.backend.quantum.Controlled.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.daggered method)": [[34, "lambeq.backend.quantum.Daggered.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.discard method)": [[34, "lambeq.backend.quantum.Discard.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.encode method)": [[34, "lambeq.backend.quantum.Encode.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.ket method)": [[34, "lambeq.backend.quantum.Ket.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.measure method)": [[34, "lambeq.backend.quantum.Measure.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.mixedstate method)": [[34, "lambeq.backend.quantum.MixedState.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.parametrized method)": [[34, "lambeq.backend.quantum.Parametrized.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.rotation method)": [[34, "lambeq.backend.quantum.Rotation.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.rx method)": [[34, "lambeq.backend.quantum.Rx.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.ry method)": [[34, "lambeq.backend.quantum.Ry.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.rz method)": [[34, "lambeq.backend.quantum.Rz.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.scalar method)": [[34, "lambeq.backend.quantum.Scalar.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.selfconjugate method)": [[34, "lambeq.backend.quantum.SelfConjugate.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.sqrt method)": [[34, "lambeq.backend.quantum.Sqrt.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.swap method)": [[34, "lambeq.backend.quantum.Swap.apply_functor", false]], "apply_functor() (lambeq.backend.quantum.ty method)": [[34, "lambeq.backend.quantum.Ty.apply_functor", false]], "apply_functor() (lambeq.backend.tensor.box method)": [[34, "lambeq.backend.tensor.Box.apply_functor", false]], "apply_functor() (lambeq.backend.tensor.cap method)": [[34, "lambeq.backend.tensor.Cap.apply_functor", false]], "apply_functor() (lambeq.backend.tensor.cup method)": [[34, "lambeq.backend.tensor.Cup.apply_functor", false]], "apply_functor() (lambeq.backend.tensor.daggered method)": [[34, "lambeq.backend.tensor.Daggered.apply_functor", false]], "apply_functor() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.apply_functor", false]], "apply_functor() (lambeq.backend.tensor.dim method)": [[34, "lambeq.backend.tensor.Dim.apply_functor", false]], "apply_functor() (lambeq.backend.tensor.spider method)": [[34, "lambeq.backend.tensor.Spider.apply_functor", false]], "apply_functor() (lambeq.backend.tensor.swap method)": [[34, "lambeq.backend.tensor.Swap.apply_functor", false]], "apply_gate() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.apply_gate", false]], "apply_parametrized_gate() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.apply_parametrized_gate", false]], "ar() (lambeq.backend.grammar.functor method)": [[34, "lambeq.backend.grammar.Functor.ar", false]], "ar_with_cache() (lambeq.backend.grammar.functor method)": [[34, "lambeq.backend.grammar.Functor.ar_with_cache", false]], "args (lambeq.backend.snake_removal.interchangererror attribute)": [[34, "lambeq.backend.snake_removal.InterchangerError.args", false]], "args (lambeq.text2diagram.bobcatparseerror attribute)": [[37, "lambeq.text2diagram.BobcatParseError.args", false]], "args (lambeq.text2diagram.ccgbankparseerror attribute)": [[37, "lambeq.text2diagram.CCGBankParseError.args", false]], "args (lambeq.text2diagram.ccgruleuseerror attribute)": [[37, "lambeq.text2diagram.CCGRuleUseError.args", false]], "args (lambeq.text2diagram.depccgparseerror attribute)": [[37, "lambeq.text2diagram.DepCCGParseError.args", false]], "args (lambeq.text2diagram.webparseerror attribute)": [[37, "lambeq.text2diagram.WebParseError.args", false]], "argument (lambeq.bobcat.category attribute)": [[35, "lambeq.bobcat.Category.argument", false]], "argument (lambeq.ccgtype property)": [[53, "lambeq.CCGType.argument", false]], "argument (lambeq.text2diagram.ccgtype property)": [[37, "lambeq.text2diagram.CCGType.argument", false]], "array (lambeq.backend.quantum.anticonjugate property)": [[34, "lambeq.backend.quantum.AntiConjugate.array", false]], "array (lambeq.backend.quantum.bit property)": [[34, "lambeq.backend.quantum.Bit.array", false]], "array (lambeq.backend.quantum.box property)": [[34, "lambeq.backend.quantum.Box.array", false]], "array (lambeq.backend.quantum.bra property)": [[34, "lambeq.backend.quantum.Bra.array", false]], "array (lambeq.backend.quantum.controlled property)": [[34, "lambeq.backend.quantum.Controlled.array", false]], "array (lambeq.backend.quantum.daggered property)": [[34, "lambeq.backend.quantum.Daggered.array", false]], "array (lambeq.backend.quantum.discard property)": [[34, "lambeq.backend.quantum.Discard.array", false]], "array (lambeq.backend.quantum.encode property)": [[34, "lambeq.backend.quantum.Encode.array", false]], "array (lambeq.backend.quantum.ket property)": [[34, "lambeq.backend.quantum.Ket.array", false]], "array (lambeq.backend.quantum.measure property)": [[34, "lambeq.backend.quantum.Measure.array", false]], "array (lambeq.backend.quantum.mixedstate property)": [[34, "lambeq.backend.quantum.MixedState.array", false]], "array (lambeq.backend.quantum.parametrized property)": [[34, "lambeq.backend.quantum.Parametrized.array", false]], "array (lambeq.backend.quantum.rotation property)": [[34, "lambeq.backend.quantum.Rotation.array", false]], "array (lambeq.backend.quantum.rx property)": [[34, "lambeq.backend.quantum.Rx.array", false]], "array (lambeq.backend.quantum.ry property)": [[34, "lambeq.backend.quantum.Ry.array", false]], "array (lambeq.backend.quantum.rz property)": [[34, "lambeq.backend.quantum.Rz.array", false]], "array (lambeq.backend.quantum.scalar property)": [[34, "lambeq.backend.quantum.Scalar.array", false]], "array (lambeq.backend.quantum.selfconjugate property)": [[34, "lambeq.backend.quantum.SelfConjugate.array", false]], "array (lambeq.backend.quantum.sqrt property)": [[34, "lambeq.backend.quantum.Sqrt.array", false]], "array (lambeq.backend.quantum.swap property)": [[34, "lambeq.backend.quantum.Swap.array", false]], "array (lambeq.backend.tensor.box property)": [[34, "lambeq.backend.tensor.Box.array", false]], "array (lambeq.backend.tensor.cap property)": [[34, "lambeq.backend.tensor.Cap.array", false]], "array (lambeq.backend.tensor.cup property)": [[34, "lambeq.backend.tensor.Cup.array", false]], "array (lambeq.backend.tensor.daggered property)": [[34, "lambeq.backend.tensor.Daggered.array", false]], "array (lambeq.backend.tensor.spider property)": [[34, "lambeq.backend.tensor.Spider.array", false]], "array (lambeq.backend.tensor.swap property)": [[34, "lambeq.backend.tensor.Swap.array", false]], "atom (lambeq.bobcat.category attribute)": [[35, "lambeq.bobcat.Category.atom", false]], "atomictype (class in lambeq)": [[53, "lambeq.AtomicType", false]], "available_models() (lambeq.bobcatparser static method)": [[53, "lambeq.BobcatParser.available_models", false]], "available_models() (lambeq.text2diagram.bobcatparser static method)": [[37, "lambeq.text2diagram.BobcatParser.available_models", false]], "available_modes() (lambeq.text2diagram.treereader class method)": [[37, "lambeq.text2diagram.TreeReader.available_modes", false]], "available_modes() (lambeq.treereader class method)": [[53, "lambeq.TreeReader.available_modes", false]], "available_rules() (lambeq.rewrite.rewriter class method)": [[36, "lambeq.rewrite.Rewriter.available_rules", false]], "available_rules() (lambeq.rewriter class method)": [[53, "lambeq.Rewriter.available_rules", false]], "ba() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.ba", false]], "ba() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.ba", false]], "ba() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.ba", false]], "backend (class in lambeq.backend.numerical_backend)": [[34, "lambeq.backend.numerical_backend.Backend", false]], "backend() (in module lambeq.backend.numerical_backend)": [[34, "lambeq.backend.numerical_backend.backend", false]], "backward() (lambeq.neldermeadoptimizer method)": [[53, "lambeq.NelderMeadOptimizer.backward", false]], "backward() (lambeq.optimizer method)": [[53, "lambeq.Optimizer.backward", false]], "backward() (lambeq.rotosolveoptimizer method)": [[53, "lambeq.RotosolveOptimizer.backward", false]], "backward() (lambeq.spsaoptimizer method)": [[53, "lambeq.SPSAOptimizer.backward", false]], "backward() (lambeq.training.neldermeadoptimizer method)": [[39, "lambeq.training.NelderMeadOptimizer.backward", false]], "backward() (lambeq.training.optimizer method)": [[39, "lambeq.training.Optimizer.backward", false]], "backward() (lambeq.training.rotosolveoptimizer method)": [[39, "lambeq.training.RotosolveOptimizer.backward", false]], "backward() (lambeq.training.spsaoptimizer method)": [[39, "lambeq.training.SPSAOptimizer.backward", false]], "backward_application (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.BACKWARD_APPLICATION", false]], "backward_application (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.BACKWARD_APPLICATION", false]], "backward_composition (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.BACKWARD_COMPOSITION", false]], "backward_composition (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.BACKWARD_COMPOSITION", false]], "backward_crossed_composition (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.BACKWARD_CROSSED_COMPOSITION", false]], "backward_crossed_composition (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.BACKWARD_CROSSED_COMPOSITION", false]], "backward_type_raising (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.BACKWARD_TYPE_RAISING", false]], "backward_type_raising (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.BACKWARD_TYPE_RAISING", false]], "bag-of-words": [[29, "term-bag-of-words", true]], "bag_of_words_reader (in module lambeq.text2diagram)": [[37, "lambeq.text2diagram.bag_of_words_reader", false]], "base_model (lambeq.bobcat.bertforchartclassification property)": [[35, "lambeq.bobcat.BertForChartClassification.base_model", false]], "base_model_prefix (lambeq.bobcat.bertforchartclassification attribute)": [[35, "lambeq.bobcat.BertForChartClassification.base_model_prefix", false]], "baseansatz (class in lambeq)": [[53, "lambeq.BaseAnsatz", false]], "baseansatz (class in lambeq.ansatz)": [[33, "lambeq.ansatz.BaseAnsatz", false]], "bc() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.bc", false]], "bc() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.bc", false]], "bc() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.bc", false]], "bertforchartclassification (class in lambeq.bobcat)": [[35, "lambeq.bobcat.BertForChartClassification", false]], "bfloat16() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.bfloat16", false]], "bfloat16() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.bfloat16", false]], "bfloat16() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.bfloat16", false]], "binary_rules (lambeq.bobcat.grammar attribute)": [[35, "lambeq.bobcat.Grammar.binary_rules", false]], "binarycrossentropyloss (class in lambeq)": [[53, "lambeq.BinaryCrossEntropyLoss", false]], "binarycrossentropyloss (class in lambeq.training)": [[39, "lambeq.training.BinaryCrossEntropyLoss", false]], "bit (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Bit", false]], "bit_readout (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.bit_readout", false]], "bits (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.bits", false]], "bobcat": [[29, "term-Bobcat", true]], "bobcatparseerror": [[37, "lambeq.text2diagram.BobcatParseError", false], [53, "lambeq.BobcatParseError", false]], "bobcatparser (class in lambeq)": [[53, "lambeq.BobcatParser", false]], "bobcatparser (class in lambeq.text2diagram)": [[37, "lambeq.text2diagram.BobcatParser", false]], "bond_type (lambeq.ansatz.mpsansatz attribute)": [[33, "lambeq.ansatz.MPSAnsatz.BOND_TYPE", false]], "bond_type (lambeq.mpsansatz attribute)": [[53, "lambeq.MPSAnsatz.BOND_TYPE", false]], "bounds (lambeq.neldermeadoptimizer attribute)": [[53, "lambeq.NelderMeadOptimizer.bounds", false]], "bounds (lambeq.training.neldermeadoptimizer attribute)": [[39, "lambeq.training.NelderMeadOptimizer.bounds", false]], "box (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Box", false]], "box (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Box", false]], "box (class in lambeq.backend.tensor)": [[34, "lambeq.backend.tensor.Box", false]], "box (lambeq.backend.grammar.category attribute)": [[34, "lambeq.backend.grammar.Category.Box", false]], "box (lambeq.backend.grammar.daggered attribute)": [[34, "lambeq.backend.grammar.Daggered.box", false]], "box (lambeq.backend.grammar.layer attribute)": [[34, "lambeq.backend.grammar.Layer.box", false]], "box (lambeq.backend.quantum.daggered attribute)": [[34, "lambeq.backend.quantum.Daggered.box", false]], "box (lambeq.backend.quantum.layer attribute)": [[34, "lambeq.backend.quantum.Layer.box", false]], "box (lambeq.backend.tensor.daggered attribute)": [[34, "lambeq.backend.tensor.Daggered.box", false]], "box (lambeq.backend.tensor.layer attribute)": [[34, "lambeq.backend.tensor.Layer.box", false]], "box_d2l() (in module lambeq.backend.converters.discopy)": [[34, "lambeq.backend.converters.discopy.box_d2l", false]], "box_l2d() (in module lambeq.backend.converters.discopy)": [[34, "lambeq.backend.converters.discopy.box_l2d", false]], "boxes (lambeq.backend.drawing.drawablediagram attribute)": [[34, "lambeq.backend.drawing.DrawableDiagram.boxes", false]], "boxes (lambeq.backend.grammar.diagram property)": [[34, "lambeq.backend.grammar.Diagram.boxes", false]], "boxes (lambeq.backend.quantum.diagram property)": [[34, "lambeq.backend.quantum.Diagram.boxes", false]], "boxes (lambeq.backend.tensor.diagram property)": [[34, "lambeq.backend.tensor.Diagram.boxes", false]], "bra (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Bra", false]], "buffers() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.buffers", false]], "buffers() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.buffers", false]], "buffers() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.buffers", false]], "bwd (lambeq.bobcat.category property)": [[35, "lambeq.bobcat.Category.bwd", false]], "bwd_comp (lambeq.bobcat.parsetree property)": [[35, "lambeq.bobcat.ParseTree.bwd_comp", false]], "bx() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.bx", false]], "bx() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.bx", false]], "bx() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.bx", false]], "c_registers (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.c_registers", false]], "calc_score_binary() (lambeq.bobcat.chartparser method)": [[35, "lambeq.bobcat.ChartParser.calc_score_binary", false]], "calc_score_unary() (lambeq.bobcat.chartparser method)": [[35, "lambeq.bobcat.ChartParser.calc_score_unary", false]], "calculate_loss() (lambeq.binarycrossentropyloss method)": [[53, "lambeq.BinaryCrossEntropyLoss.calculate_loss", false]], "calculate_loss() (lambeq.crossentropyloss method)": [[53, "lambeq.CrossEntropyLoss.calculate_loss", false]], "calculate_loss() (lambeq.lossfunction method)": [[53, "lambeq.LossFunction.calculate_loss", false]], "calculate_loss() (lambeq.mseloss method)": [[53, "lambeq.MSELoss.calculate_loss", false]], "calculate_loss() (lambeq.training.binarycrossentropyloss method)": [[39, "lambeq.training.BinaryCrossEntropyLoss.calculate_loss", false]], "calculate_loss() (lambeq.training.crossentropyloss method)": [[39, "lambeq.training.CrossEntropyLoss.calculate_loss", false]], "calculate_loss() (lambeq.training.lossfunction method)": [[39, "lambeq.training.LossFunction.calculate_loss", false]], "calculate_loss() (lambeq.training.mseloss method)": [[39, "lambeq.training.MSELoss.calculate_loss", false]], "call_super_init (lambeq.bobcat.bertforchartclassification attribute)": [[35, "lambeq.bobcat.BertForChartClassification.call_super_init", false]], "call_super_init (lambeq.training.pennylanemodel attribute)": [[39, "lambeq.training.PennyLaneModel.call_super_init", false]], "call_super_init (lambeq.training.pytorchmodel attribute)": [[39, "lambeq.training.PytorchModel.call_super_init", false]], "can_generate() (lambeq.bobcat.bertforchartclassification class method)": [[35, "lambeq.bobcat.BertForChartClassification.can_generate", false]], "cap": [[29, "term-cap", true]], "cap (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Cap", false]], "cap (class in lambeq.backend.tensor)": [[34, "lambeq.backend.tensor.Cap", false]], "capitalize() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.capitalize", false]], "caps() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.caps", false]], "caps() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.caps", false]], "caps() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.caps", false]], "casefold() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.casefold", false]], "cat (lambeq.bobcat.parsetree attribute)": [[35, "lambeq.bobcat.ParseTree.cat", false]], "categorical quantum mechanics (cqm)": [[29, "term-categorical-quantum-mechanics-CQM", true]], "categories (lambeq.bobcat.grammar attribute)": [[35, "lambeq.bobcat.Grammar.categories", false]], "category": [[29, "term-category", true]], "category (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Category", false]], "category (class in lambeq.bobcat)": [[35, "lambeq.bobcat.Category", false]], "category (lambeq.backend.grammar.box attribute)": [[34, "lambeq.backend.grammar.Box.category", false]], "category (lambeq.backend.grammar.cap attribute)": [[34, "lambeq.backend.grammar.Cap.category", false]], "category (lambeq.backend.grammar.cup attribute)": [[34, "lambeq.backend.grammar.Cup.category", false]], "category (lambeq.backend.grammar.daggered attribute)": [[34, "lambeq.backend.grammar.Daggered.category", false]], "category (lambeq.backend.grammar.diagram attribute)": [[34, "lambeq.backend.grammar.Diagram.category", false]], "category (lambeq.backend.grammar.entity attribute)": [[34, "lambeq.backend.grammar.Entity.category", false]], "category (lambeq.backend.grammar.layer attribute)": [[34, "lambeq.backend.grammar.Layer.category", false]], "category (lambeq.backend.grammar.spider attribute)": [[34, "lambeq.backend.grammar.Spider.category", false]], "category (lambeq.backend.grammar.swap attribute)": [[34, "lambeq.backend.grammar.Swap.category", false]], "category (lambeq.backend.grammar.ty attribute)": [[34, "lambeq.backend.grammar.Ty.category", false]], "category (lambeq.backend.grammar.word attribute)": [[34, "lambeq.backend.grammar.Word.category", false]], "category (lambeq.backend.quantum.anticonjugate attribute)": [[34, "lambeq.backend.quantum.AntiConjugate.category", false]], "category (lambeq.backend.quantum.bit attribute)": [[34, "lambeq.backend.quantum.Bit.category", false]], "category (lambeq.backend.quantum.box attribute)": [[34, "lambeq.backend.quantum.Box.category", false]], "category (lambeq.backend.quantum.bra attribute)": [[34, "lambeq.backend.quantum.Bra.category", false]], "category (lambeq.backend.quantum.controlled attribute)": [[34, "lambeq.backend.quantum.Controlled.category", false]], "category (lambeq.backend.quantum.daggered attribute)": [[34, "lambeq.backend.quantum.Daggered.category", false]], "category (lambeq.backend.quantum.diagram attribute)": [[34, "lambeq.backend.quantum.Diagram.category", false]], "category (lambeq.backend.quantum.discard attribute)": [[34, "lambeq.backend.quantum.Discard.category", false]], "category (lambeq.backend.quantum.encode attribute)": [[34, "lambeq.backend.quantum.Encode.category", false]], "category (lambeq.backend.quantum.ket attribute)": [[34, "lambeq.backend.quantum.Ket.category", false]], "category (lambeq.backend.quantum.layer attribute)": [[34, "lambeq.backend.quantum.Layer.category", false]], "category (lambeq.backend.quantum.measure attribute)": [[34, "lambeq.backend.quantum.Measure.category", false]], "category (lambeq.backend.quantum.mixedstate attribute)": [[34, "lambeq.backend.quantum.MixedState.category", false]], "category (lambeq.backend.quantum.parametrized attribute)": [[34, "lambeq.backend.quantum.Parametrized.category", false]], "category (lambeq.backend.quantum.rotation attribute)": [[34, "lambeq.backend.quantum.Rotation.category", false]], "category (lambeq.backend.quantum.rx attribute)": [[34, "lambeq.backend.quantum.Rx.category", false]], "category (lambeq.backend.quantum.ry attribute)": [[34, "lambeq.backend.quantum.Ry.category", false]], "category (lambeq.backend.quantum.rz attribute)": [[34, "lambeq.backend.quantum.Rz.category", false]], "category (lambeq.backend.quantum.scalar attribute)": [[34, "lambeq.backend.quantum.Scalar.category", false]], "category (lambeq.backend.quantum.selfconjugate attribute)": [[34, "lambeq.backend.quantum.SelfConjugate.category", false]], "category (lambeq.backend.quantum.sqrt attribute)": [[34, "lambeq.backend.quantum.Sqrt.category", false]], "category (lambeq.backend.quantum.swap attribute)": [[34, "lambeq.backend.quantum.Swap.category", false]], "category (lambeq.backend.quantum.ty attribute)": [[34, "lambeq.backend.quantum.Ty.category", false]], "category (lambeq.backend.tensor.box attribute)": [[34, "lambeq.backend.tensor.Box.category", false]], "category (lambeq.backend.tensor.cap attribute)": [[34, "lambeq.backend.tensor.Cap.category", false]], "category (lambeq.backend.tensor.cup attribute)": [[34, "lambeq.backend.tensor.Cup.category", false]], "category (lambeq.backend.tensor.daggered attribute)": [[34, "lambeq.backend.tensor.Daggered.category", false]], "category (lambeq.backend.tensor.diagram attribute)": [[34, "lambeq.backend.tensor.Diagram.category", false]], "category (lambeq.backend.tensor.dim attribute)": [[34, "lambeq.backend.tensor.Dim.category", false]], "category (lambeq.backend.tensor.layer attribute)": [[34, "lambeq.backend.tensor.Layer.category", false]], "category (lambeq.backend.tensor.spider attribute)": [[34, "lambeq.backend.tensor.Spider.category", false]], "category (lambeq.backend.tensor.swap attribute)": [[34, "lambeq.backend.tensor.Swap.category", false]], "category (lambeq.bobcat.supertag attribute)": [[35, "lambeq.bobcat.Supertag.category", false]], "ccgbank": [[29, "term-CCGBank", true]], "ccgbankparseerror": [[37, "lambeq.text2diagram.CCGBankParseError", false], [53, "lambeq.CCGBankParseError", false]], "ccgbankparser (class in lambeq)": [[53, "lambeq.CCGBankParser", false]], "ccgbankparser (class in lambeq.text2diagram)": [[37, "lambeq.text2diagram.CCGBankParser", false]], "ccgparser (class in lambeq)": [[53, "lambeq.CCGParser", false]], "ccgparser (class in lambeq.text2diagram)": [[37, "lambeq.text2diagram.CCGParser", false]], "ccgrule (class in lambeq)": [[53, "lambeq.CCGRule", false]], "ccgrule (class in lambeq.text2diagram)": [[37, "lambeq.text2diagram.CCGRule", false]], "ccgruleuseerror": [[37, "lambeq.text2diagram.CCGRuleUseError", false], [53, "lambeq.CCGRuleUseError", false]], "ccgtree (class in lambeq)": [[53, "lambeq.CCGTree", false]], "ccgtree (class in lambeq.text2diagram)": [[37, "lambeq.text2diagram.CCGTree", false]], "ccgtype (class in lambeq)": [[53, "lambeq.CCGType", false]], "ccgtype (class in lambeq.text2diagram)": [[37, "lambeq.text2diagram.CCGType", false]], "ccx() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CCX", false]], "center() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.center", false]], "ch() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CH", false]], "characters_written (lambeq.text2diagram.webparseerror attribute)": [[37, "lambeq.text2diagram.WebParseError.characters_written", false]], "chartparser (class in lambeq.bobcat)": [[35, "lambeq.bobcat.ChartParser", false]], "check_match() (lambeq.ccgrule method)": [[53, "lambeq.CCGRule.check_match", false]], "check_match() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.check_match", false]], "checkpoint (class in lambeq)": [[53, "lambeq.Checkpoint", false]], "checkpoint (class in lambeq.training)": [[39, "lambeq.training.Checkpoint", false]], "child (lambeq.ccgtree property)": [[53, "lambeq.CCGTree.child", false]], "child (lambeq.text2diagram.ccgtree property)": [[37, "lambeq.text2diagram.CCGTree.child", false]], "children() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.children", false]], "children() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.children", false]], "children() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.children", false]], "circuit (class in lambeq.backend.converters.tk)": [[34, "lambeq.backend.converters.tk.Circuit", false]], "circuit() (lambeq.ansatz.iqpansatz method)": [[33, "lambeq.ansatz.IQPAnsatz.circuit", false]], "circuit() (lambeq.ansatz.sim14ansatz method)": [[33, "lambeq.ansatz.Sim14Ansatz.circuit", false]], "circuit() (lambeq.ansatz.sim15ansatz method)": [[33, "lambeq.ansatz.Sim15Ansatz.circuit", false]], "circuit() (lambeq.ansatz.sim4ansatz method)": [[33, "lambeq.ansatz.Sim4Ansatz.circuit", false]], "circuit() (lambeq.ansatz.stronglyentanglingansatz method)": [[33, "lambeq.ansatz.StronglyEntanglingAnsatz.circuit", false]], "circuit() (lambeq.iqpansatz method)": [[53, "lambeq.IQPAnsatz.circuit", false]], "circuit() (lambeq.sim14ansatz method)": [[53, "lambeq.Sim14Ansatz.circuit", false]], "circuit() (lambeq.sim15ansatz method)": [[53, "lambeq.Sim15Ansatz.circuit", false]], "circuit() (lambeq.sim4ansatz method)": [[53, "lambeq.Sim4Ansatz.circuit", false]], "circuit() (lambeq.stronglyentanglingansatz method)": [[53, "lambeq.StronglyEntanglingAnsatz.circuit", false]], "circuit_map (lambeq.pennylanemodel attribute)": [[53, "lambeq.PennyLaneModel.circuit_map", false]], "circuitansatz (class in lambeq)": [[53, "lambeq.CircuitAnsatz", false]], "circuitansatz (class in lambeq.ansatz)": [[33, "lambeq.ansatz.CircuitAnsatz", false]], "cod (lambeq.backend.grammar.box attribute)": [[34, "lambeq.backend.grammar.Box.cod", false]], "cod (lambeq.backend.grammar.cap attribute)": [[34, "lambeq.backend.grammar.Cap.cod", false]], "cod (lambeq.backend.grammar.cup attribute)": [[34, "lambeq.backend.grammar.Cup.cod", false]], "cod (lambeq.backend.grammar.daggered attribute)": [[34, "lambeq.backend.grammar.Daggered.cod", false]], "cod (lambeq.backend.grammar.diagram attribute)": [[34, "lambeq.backend.grammar.Diagram.cod", false]], "cod (lambeq.backend.grammar.diagrammable property)": [[34, "lambeq.backend.grammar.Diagrammable.cod", false]], "cod (lambeq.backend.grammar.layer property)": [[34, "lambeq.backend.grammar.Layer.cod", false]], "cod (lambeq.backend.grammar.spider attribute)": [[34, "lambeq.backend.grammar.Spider.cod", false]], "cod (lambeq.backend.grammar.swap attribute)": [[34, "lambeq.backend.grammar.Swap.cod", false]], "cod (lambeq.backend.grammar.word attribute)": [[34, "lambeq.backend.grammar.Word.cod", false]], "cod (lambeq.backend.quantum.anticonjugate attribute)": [[34, "lambeq.backend.quantum.AntiConjugate.cod", false]], "cod (lambeq.backend.quantum.bit attribute)": [[34, "lambeq.backend.quantum.Bit.cod", false]], "cod (lambeq.backend.quantum.box attribute)": [[34, "lambeq.backend.quantum.Box.cod", false]], "cod (lambeq.backend.quantum.bra attribute)": [[34, "lambeq.backend.quantum.Bra.cod", false]], "cod (lambeq.backend.quantum.controlled attribute)": [[34, "lambeq.backend.quantum.Controlled.cod", false]], "cod (lambeq.backend.quantum.daggered attribute)": [[34, "lambeq.backend.quantum.Daggered.cod", false]], "cod (lambeq.backend.quantum.diagram attribute)": [[34, "lambeq.backend.quantum.Diagram.cod", false]], "cod (lambeq.backend.quantum.discard attribute)": [[34, "lambeq.backend.quantum.Discard.cod", false]], "cod (lambeq.backend.quantum.encode attribute)": [[34, "lambeq.backend.quantum.Encode.cod", false]], "cod (lambeq.backend.quantum.ket attribute)": [[34, "lambeq.backend.quantum.Ket.cod", false]], "cod (lambeq.backend.quantum.layer property)": [[34, "lambeq.backend.quantum.Layer.cod", false]], "cod (lambeq.backend.quantum.measure attribute)": [[34, "lambeq.backend.quantum.Measure.cod", false]], "cod (lambeq.backend.quantum.mixedstate attribute)": [[34, "lambeq.backend.quantum.MixedState.cod", false]], "cod (lambeq.backend.quantum.parametrized attribute)": [[34, "lambeq.backend.quantum.Parametrized.cod", false]], "cod (lambeq.backend.quantum.rotation attribute)": [[34, "lambeq.backend.quantum.Rotation.cod", false]], "cod (lambeq.backend.quantum.rx attribute)": [[34, "lambeq.backend.quantum.Rx.cod", false]], "cod (lambeq.backend.quantum.ry attribute)": [[34, "lambeq.backend.quantum.Ry.cod", false]], "cod (lambeq.backend.quantum.rz attribute)": [[34, "lambeq.backend.quantum.Rz.cod", false]], "cod (lambeq.backend.quantum.scalar attribute)": [[34, "lambeq.backend.quantum.Scalar.cod", false]], "cod (lambeq.backend.quantum.selfconjugate attribute)": [[34, "lambeq.backend.quantum.SelfConjugate.cod", false]], "cod (lambeq.backend.quantum.sqrt attribute)": [[34, "lambeq.backend.quantum.Sqrt.cod", false]], "cod (lambeq.backend.quantum.swap attribute)": [[34, "lambeq.backend.quantum.Swap.cod", false]], "cod (lambeq.backend.tensor.box attribute)": [[34, "lambeq.backend.tensor.Box.cod", false]], "cod (lambeq.backend.tensor.cap attribute)": [[34, "lambeq.backend.tensor.Cap.cod", false]], "cod (lambeq.backend.tensor.cup attribute)": [[34, "lambeq.backend.tensor.Cup.cod", false]], "cod (lambeq.backend.tensor.daggered attribute)": [[34, "lambeq.backend.tensor.Daggered.cod", false]], "cod (lambeq.backend.tensor.diagram attribute)": [[34, "lambeq.backend.tensor.Diagram.cod", false]], "cod (lambeq.backend.tensor.layer property)": [[34, "lambeq.backend.tensor.Layer.cod", false]], "cod (lambeq.backend.tensor.spider attribute)": [[34, "lambeq.backend.tensor.Spider.cod", false]], "cod (lambeq.backend.tensor.swap attribute)": [[34, "lambeq.backend.tensor.Swap.cod", false]], "collapse_noun_phrases() (lambeq.ccgtree method)": [[53, "lambeq.CCGTree.collapse_noun_phrases", false]], "collapse_noun_phrases() (lambeq.text2diagram.ccgtree method)": [[37, "lambeq.text2diagram.CCGTree.collapse_noun_phrases", false]], "combinatory categorial grammar (ccg)": [[29, "term-Combinatory-Categorial-Grammar-CCG", true]], "commands_of_type() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.commands_of_type", false]], "compact closed category": [[29, "term-compact-closed-category", true]], "compile() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.compile", false]], "compile() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.compile", false]], "compile() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.compile", false]], "compositional model": [[29, "term-compositional-model", true]], "compute_transition_scores() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.compute_transition_scores", false]], "config_class (lambeq.bobcat.bertforchartclassification attribute)": [[35, "lambeq.bobcat.BertForChartClassification.config_class", false]], "conj_tag (lambeq.ccgtype attribute)": [[53, "lambeq.CCGType.CONJ_TAG", false]], "conj_tag (lambeq.text2diagram.ccgtype attribute)": [[37, "lambeq.text2diagram.CCGType.CONJ_TAG", false]], "conjunction (lambeq.atomictype attribute)": [[53, "lambeq.AtomicType.CONJUNCTION", false]], "conjunction (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.CONJUNCTION", false]], "conjunction (lambeq.ccgtype attribute)": [[53, "lambeq.CCGType.CONJUNCTION", false]], "conjunction (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.CONJUNCTION", false]], "conjunction (lambeq.text2diagram.ccgtype attribute)": [[37, "lambeq.text2diagram.CCGType.CONJUNCTION", false]], "contains_sympy() (lambeq.backend.pennylane.pennylanecircuit method)": [[34, "lambeq.backend.pennylane.PennyLaneCircuit.contains_sympy", false]], "contrastive_search() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.contrastive_search", false]], "controlled (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Controlled", false]], "convert_grammar_d2l() (in module lambeq.backend.converters.discopy)": [[34, "lambeq.backend.converters.discopy.convert_grammar_d2l", false]], "convert_grammar_l2d() (in module lambeq.backend.converters.discopy)": [[34, "lambeq.backend.converters.discopy.convert_grammar_l2d", false]], "convert_quantum_d2l() (in module lambeq.backend.converters.discopy)": [[34, "lambeq.backend.converters.discopy.convert_quantum_d2l", false]], "convert_quantum_l2d() (in module lambeq.backend.converters.discopy)": [[34, "lambeq.backend.converters.discopy.convert_quantum_l2d", false]], "convert_tensor_d2l() (in module lambeq.backend.converters.discopy)": [[34, "lambeq.backend.converters.discopy.convert_tensor_d2l", false]], "convert_tensor_l2d() (in module lambeq.backend.converters.discopy)": [[34, "lambeq.backend.converters.discopy.convert_tensor_l2d", false]], "coordinated (lambeq.bobcat.parsetree property)": [[35, "lambeq.bobcat.ParseTree.coordinated", false]], "coordinated_or_type_raised (lambeq.bobcat.parsetree property)": [[35, "lambeq.bobcat.ParseTree.coordinated_or_type_raised", false]], "coordinationrewriterule (class in lambeq)": [[53, "lambeq.CoordinationRewriteRule", false]], "coordinationrewriterule (class in lambeq.rewrite)": [[36, "lambeq.rewrite.CoordinationRewriteRule", false]], "copy() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.copy", false]], "count() (lambeq.backend.grammar.ty method)": [[34, "lambeq.backend.grammar.Ty.count", false]], "count() (lambeq.backend.quantum.ty method)": [[34, "lambeq.backend.quantum.Ty.count", false]], "count() (lambeq.backend.tensor.dim method)": [[34, "lambeq.backend.tensor.Dim.count", false]], "count() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.count", false]], "cpu() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.cpu", false]], "cpu() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.cpu", false]], "cpu() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.cpu", false]], "create_extended_attention_mask_for_decoder() (lambeq.bobcat.bertforchartclassification static method)": [[35, "lambeq.bobcat.BertForChartClassification.create_extended_attention_mask_for_decoder", false]], "create_pregroup_diagram() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.create_pregroup_diagram", false]], "create_pregroup_diagram() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.create_pregroup_diagram", false]], "create_pregroup_diagram() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.create_pregroup_diagram", false]], "created_qubits (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.created_qubits", false]], "crossentropyloss (class in lambeq)": [[53, "lambeq.CrossEntropyLoss", false]], "crossentropyloss (class in lambeq.training)": [[39, "lambeq.training.CrossEntropyLoss", false]], "crx() (in module lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.CRx", false]], "crx() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CRx", false]], "cry() (in module lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.CRy", false]], "cry() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CRy", false]], "crz() (in module lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.CRz", false]], "crz() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CRz", false]], "cs() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CS", false]], "csdg() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CSdg", false]], "cswap() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CSWAP", false]], "csx() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CSX", false]], "csxdg() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CSXdg", false]], "cu1() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CU1", false]], "cu3() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CU3", false]], "cuda() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.cuda", false]], "cuda() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.cuda", false]], "cuda() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.cuda", false]], "cup": [[29, "term-cup", true]], "cup (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Cup", false]], "cup (class in lambeq.backend.tensor)": [[34, "lambeq.backend.tensor.Cup", false]], "cups() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.cups", false]], "cups() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.cups", false]], "cups() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.cups", false]], "cups_reader (in module lambeq.text2diagram)": [[37, "lambeq.text2diagram.cups_reader", false]], "curry() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.curry", false]], "curry() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.curry", false]], "curry() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.curry", false]], "curryrewriterule (class in lambeq)": [[53, "lambeq.CurryRewriteRule", false]], "curryrewriterule (class in lambeq.rewrite)": [[36, "lambeq.rewrite.CurryRewriteRule", false]], "cv() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CV", false]], "cvdg() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CVdg", false]], "cx() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CX", false]], "cy() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CY", false]], "cz() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.CZ", false]], "dagger() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.dagger", false]], "dagger() (lambeq.backend.grammar.box method)": [[34, "lambeq.backend.grammar.Box.dagger", false]], "dagger() (lambeq.backend.grammar.cap method)": [[34, "lambeq.backend.grammar.Cap.dagger", false]], "dagger() (lambeq.backend.grammar.cup method)": [[34, "lambeq.backend.grammar.Cup.dagger", false]], "dagger() (lambeq.backend.grammar.daggered method)": [[34, "lambeq.backend.grammar.Daggered.dagger", false]], "dagger() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.dagger", false]], "dagger() (lambeq.backend.grammar.layer method)": [[34, "lambeq.backend.grammar.Layer.dagger", false]], "dagger() (lambeq.backend.grammar.spider method)": [[34, "lambeq.backend.grammar.Spider.dagger", false]], "dagger() (lambeq.backend.grammar.swap method)": [[34, "lambeq.backend.grammar.Swap.dagger", false]], "dagger() (lambeq.backend.grammar.word method)": [[34, "lambeq.backend.grammar.Word.dagger", false]], "dagger() (lambeq.backend.quantum.anticonjugate method)": [[34, "lambeq.backend.quantum.AntiConjugate.dagger", false]], "dagger() (lambeq.backend.quantum.bit method)": [[34, "lambeq.backend.quantum.Bit.dagger", false]], "dagger() (lambeq.backend.quantum.box method)": [[34, "lambeq.backend.quantum.Box.dagger", false]], "dagger() (lambeq.backend.quantum.bra method)": [[34, "lambeq.backend.quantum.Bra.dagger", false]], "dagger() (lambeq.backend.quantum.controlled method)": [[34, "lambeq.backend.quantum.Controlled.dagger", false]], "dagger() (lambeq.backend.quantum.daggered method)": [[34, "lambeq.backend.quantum.Daggered.dagger", false]], "dagger() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.dagger", false]], "dagger() (lambeq.backend.quantum.discard method)": [[34, "lambeq.backend.quantum.Discard.dagger", false]], "dagger() (lambeq.backend.quantum.encode method)": [[34, "lambeq.backend.quantum.Encode.dagger", false]], "dagger() (lambeq.backend.quantum.ket method)": [[34, "lambeq.backend.quantum.Ket.dagger", false]], "dagger() (lambeq.backend.quantum.layer method)": [[34, "lambeq.backend.quantum.Layer.dagger", false]], "dagger() (lambeq.backend.quantum.measure method)": [[34, "lambeq.backend.quantum.Measure.dagger", false]], "dagger() (lambeq.backend.quantum.mixedstate method)": [[34, "lambeq.backend.quantum.MixedState.dagger", false]], "dagger() (lambeq.backend.quantum.parametrized method)": [[34, "lambeq.backend.quantum.Parametrized.dagger", false]], "dagger() (lambeq.backend.quantum.rotation method)": [[34, "lambeq.backend.quantum.Rotation.dagger", false]], "dagger() (lambeq.backend.quantum.rx method)": [[34, "lambeq.backend.quantum.Rx.dagger", false]], "dagger() (lambeq.backend.quantum.ry method)": [[34, "lambeq.backend.quantum.Ry.dagger", false]], "dagger() (lambeq.backend.quantum.rz method)": [[34, "lambeq.backend.quantum.Rz.dagger", false]], "dagger() (lambeq.backend.quantum.scalar method)": [[34, "lambeq.backend.quantum.Scalar.dagger", false]], "dagger() (lambeq.backend.quantum.selfconjugate method)": [[34, "lambeq.backend.quantum.SelfConjugate.dagger", false]], "dagger() (lambeq.backend.quantum.sqrt method)": [[34, "lambeq.backend.quantum.Sqrt.dagger", false]], "dagger() (lambeq.backend.quantum.swap method)": [[34, "lambeq.backend.quantum.Swap.dagger", false]], "dagger() (lambeq.backend.tensor.box method)": [[34, "lambeq.backend.tensor.Box.dagger", false]], "dagger() (lambeq.backend.tensor.cap method)": [[34, "lambeq.backend.tensor.Cap.dagger", false]], "dagger() (lambeq.backend.tensor.cup method)": [[34, "lambeq.backend.tensor.Cup.dagger", false]], "dagger() (lambeq.backend.tensor.daggered method)": [[34, "lambeq.backend.tensor.Daggered.dagger", false]], "dagger() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.dagger", false]], "dagger() (lambeq.backend.tensor.layer method)": [[34, "lambeq.backend.tensor.Layer.dagger", false]], "dagger() (lambeq.backend.tensor.spider method)": [[34, "lambeq.backend.tensor.Spider.dagger", false]], "dagger() (lambeq.backend.tensor.swap method)": [[34, "lambeq.backend.tensor.Swap.dagger", false]], "daggered (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Daggered", false]], "daggered (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Daggered", false]], "daggered (class in lambeq.backend.tensor)": [[34, "lambeq.backend.tensor.Daggered", false]], "data (lambeq.backend.quantum.anticonjugate attribute)": [[34, "lambeq.backend.quantum.AntiConjugate.data", false]], "data (lambeq.backend.quantum.bit attribute)": [[34, "lambeq.backend.quantum.Bit.data", false]], "data (lambeq.backend.quantum.box attribute)": [[34, "lambeq.backend.quantum.Box.data", false]], "data (lambeq.backend.quantum.bra attribute)": [[34, "lambeq.backend.quantum.Bra.data", false]], "data (lambeq.backend.quantum.controlled attribute)": [[34, "lambeq.backend.quantum.Controlled.data", false]], "data (lambeq.backend.quantum.daggered attribute)": [[34, "lambeq.backend.quantum.Daggered.data", false]], "data (lambeq.backend.quantum.discard attribute)": [[34, "lambeq.backend.quantum.Discard.data", false]], "data (lambeq.backend.quantum.encode attribute)": [[34, "lambeq.backend.quantum.Encode.data", false]], "data (lambeq.backend.quantum.ket attribute)": [[34, "lambeq.backend.quantum.Ket.data", false]], "data (lambeq.backend.quantum.measure attribute)": [[34, "lambeq.backend.quantum.Measure.data", false]], "data (lambeq.backend.quantum.mixedstate attribute)": [[34, "lambeq.backend.quantum.MixedState.data", false]], "data (lambeq.backend.quantum.parametrized attribute)": [[34, "lambeq.backend.quantum.Parametrized.data", false]], "data (lambeq.backend.quantum.rotation attribute)": [[34, "lambeq.backend.quantum.Rotation.data", false]], "data (lambeq.backend.quantum.rx attribute)": [[34, "lambeq.backend.quantum.Rx.data", false]], "data (lambeq.backend.quantum.ry attribute)": [[34, "lambeq.backend.quantum.Ry.data", false]], "data (lambeq.backend.quantum.rz attribute)": [[34, "lambeq.backend.quantum.Rz.data", false]], "data (lambeq.backend.quantum.scalar attribute)": [[34, "lambeq.backend.quantum.Scalar.data", false]], "data (lambeq.backend.quantum.selfconjugate attribute)": [[34, "lambeq.backend.quantum.SelfConjugate.data", false]], "data (lambeq.backend.quantum.sqrt attribute)": [[34, "lambeq.backend.quantum.Sqrt.data", false]], "data (lambeq.backend.quantum.swap attribute)": [[34, "lambeq.backend.quantum.Swap.data", false]], "data (lambeq.backend.tensor.box attribute)": [[34, "lambeq.backend.tensor.Box.data", false]], "data (lambeq.backend.tensor.cap attribute)": [[34, "lambeq.backend.tensor.Cap.data", false]], "data (lambeq.backend.tensor.cup attribute)": [[34, "lambeq.backend.tensor.Cup.data", false]], "data (lambeq.backend.tensor.daggered attribute)": [[34, "lambeq.backend.tensor.Daggered.data", false]], "data (lambeq.backend.tensor.spider attribute)": [[34, "lambeq.backend.tensor.Spider.data", false]], "data (lambeq.backend.tensor.swap attribute)": [[34, "lambeq.backend.tensor.Swap.data", false]], "dataset (class in lambeq)": [[53, "lambeq.Dataset", false]], "dataset (class in lambeq.training)": [[39, "lambeq.training.Dataset", false]], "decompose() (lambeq.backend.quantum.controlled method)": [[34, "lambeq.backend.quantum.Controlled.decompose", false]], "default_assumptions (lambeq.ansatz.symbol attribute)": [[33, "lambeq.ansatz.Symbol.default_assumptions", false]], "default_assumptions (lambeq.symbol attribute)": [[53, "lambeq.Symbol.default_assumptions", false]], "depccg": [[29, "term-depccg", true]], "depccgparseerror": [[37, "lambeq.text2diagram.DepCCGParseError", false], [53, "lambeq.DepCCGParseError", false]], "depccgparser (class in lambeq)": [[53, "lambeq.DepCCGParser", false]], "depccgparser (class in lambeq.text2diagram)": [[37, "lambeq.text2diagram.DepCCGParser", false]], "deps (lambeq.bobcat.parsetree property)": [[35, "lambeq.bobcat.ParseTree.deps", false]], "deps_and_tags (lambeq.bobcat.parsetree property)": [[35, "lambeq.bobcat.ParseTree.deps_and_tags", false]], "depth() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.depth", false]], "depth_2q() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.depth_2q", false]], "depth_by_type() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.depth_by_type", false]], "dequantize() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.dequantize", false]], "deriv() (lambeq.ccgtree method)": [[53, "lambeq.CCGTree.deriv", false]], "deriv() (lambeq.text2diagram.ccgtree method)": [[37, "lambeq.text2diagram.CCGTree.deriv", false]], "device (lambeq.bobcat.bertforchartclassification property)": [[35, "lambeq.bobcat.BertForChartClassification.device", false]], "diagram (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Diagram", false]], "diagram (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Diagram", false]], "diagram (class in lambeq.backend.tensor)": [[34, "lambeq.backend.tensor.Diagram", false]], "diagram (lambeq.backend.grammar.category attribute)": [[34, "lambeq.backend.grammar.Category.Diagram", false]], "diagrammable (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Diagrammable", false]], "diagramrewriter (class in lambeq)": [[53, "lambeq.DiagramRewriter", false]], "diagramrewriter (class in lambeq.rewrite)": [[36, "lambeq.rewrite.DiagramRewriter", false]], "dim (class in lambeq.backend.tensor)": [[34, "lambeq.backend.tensor.Dim", false]], "dim (lambeq.backend.quantum.ty property)": [[34, "lambeq.backend.quantum.Ty.dim", false]], "dim (lambeq.backend.tensor.dim property)": [[34, "lambeq.backend.tensor.Dim.dim", false]], "dir (lambeq.bobcat.category attribute)": [[35, "lambeq.bobcat.Category.dir", false]], "directed_cod (lambeq.ansatz.symbol attribute)": [[33, "lambeq.ansatz.Symbol.directed_cod", false]], "directed_cod (lambeq.symbol attribute)": [[53, "lambeq.Symbol.directed_cod", false]], "directed_dom (lambeq.ansatz.symbol attribute)": [[33, "lambeq.ansatz.Symbol.directed_dom", false]], "directed_dom (lambeq.symbol attribute)": [[53, "lambeq.Symbol.directed_dom", false]], "direction (lambeq.ccgtype property)": [[53, "lambeq.CCGType.direction", false]], "direction (lambeq.text2diagram.ccgtype property)": [[37, "lambeq.text2diagram.CCGType.direction", false]], "disable_adapters() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.disable_adapters", false]], "disable_input_require_grads() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.disable_input_require_grads", false]], "discard (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Discard", false]], "discarded_qubits (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.discarded_qubits", false]], "discocat": [[29, "term-DisCoCat", true]], "discopy": [[29, "term-DisCoPy", true]], "dom (lambeq.backend.grammar.box attribute)": [[34, "lambeq.backend.grammar.Box.dom", false]], "dom (lambeq.backend.grammar.cap attribute)": [[34, "lambeq.backend.grammar.Cap.dom", false]], "dom (lambeq.backend.grammar.cup attribute)": [[34, "lambeq.backend.grammar.Cup.dom", false]], "dom (lambeq.backend.grammar.daggered attribute)": [[34, "lambeq.backend.grammar.Daggered.dom", false]], "dom (lambeq.backend.grammar.diagram attribute)": [[34, "lambeq.backend.grammar.Diagram.dom", false]], "dom (lambeq.backend.grammar.diagrammable property)": [[34, "lambeq.backend.grammar.Diagrammable.dom", false]], "dom (lambeq.backend.grammar.layer property)": [[34, "lambeq.backend.grammar.Layer.dom", false]], "dom (lambeq.backend.grammar.spider attribute)": [[34, "lambeq.backend.grammar.Spider.dom", false]], "dom (lambeq.backend.grammar.swap attribute)": [[34, "lambeq.backend.grammar.Swap.dom", false]], "dom (lambeq.backend.grammar.word attribute)": [[34, "lambeq.backend.grammar.Word.dom", false]], "dom (lambeq.backend.quantum.anticonjugate attribute)": [[34, "lambeq.backend.quantum.AntiConjugate.dom", false]], "dom (lambeq.backend.quantum.bit attribute)": [[34, "lambeq.backend.quantum.Bit.dom", false]], "dom (lambeq.backend.quantum.box attribute)": [[34, "lambeq.backend.quantum.Box.dom", false]], "dom (lambeq.backend.quantum.bra attribute)": [[34, "lambeq.backend.quantum.Bra.dom", false]], "dom (lambeq.backend.quantum.controlled attribute)": [[34, "lambeq.backend.quantum.Controlled.dom", false]], "dom (lambeq.backend.quantum.daggered attribute)": [[34, "lambeq.backend.quantum.Daggered.dom", false]], "dom (lambeq.backend.quantum.diagram attribute)": [[34, "lambeq.backend.quantum.Diagram.dom", false]], "dom (lambeq.backend.quantum.discard attribute)": [[34, "lambeq.backend.quantum.Discard.dom", false]], "dom (lambeq.backend.quantum.encode attribute)": [[34, "lambeq.backend.quantum.Encode.dom", false]], "dom (lambeq.backend.quantum.ket attribute)": [[34, "lambeq.backend.quantum.Ket.dom", false]], "dom (lambeq.backend.quantum.layer property)": [[34, "lambeq.backend.quantum.Layer.dom", false]], "dom (lambeq.backend.quantum.measure attribute)": [[34, "lambeq.backend.quantum.Measure.dom", false]], "dom (lambeq.backend.quantum.mixedstate attribute)": [[34, "lambeq.backend.quantum.MixedState.dom", false]], "dom (lambeq.backend.quantum.parametrized attribute)": [[34, "lambeq.backend.quantum.Parametrized.dom", false]], "dom (lambeq.backend.quantum.rotation attribute)": [[34, "lambeq.backend.quantum.Rotation.dom", false]], "dom (lambeq.backend.quantum.rx attribute)": [[34, "lambeq.backend.quantum.Rx.dom", false]], "dom (lambeq.backend.quantum.ry attribute)": [[34, "lambeq.backend.quantum.Ry.dom", false]], "dom (lambeq.backend.quantum.rz attribute)": [[34, "lambeq.backend.quantum.Rz.dom", false]], "dom (lambeq.backend.quantum.scalar attribute)": [[34, "lambeq.backend.quantum.Scalar.dom", false]], "dom (lambeq.backend.quantum.selfconjugate attribute)": [[34, "lambeq.backend.quantum.SelfConjugate.dom", false]], "dom (lambeq.backend.quantum.sqrt attribute)": [[34, "lambeq.backend.quantum.Sqrt.dom", false]], "dom (lambeq.backend.quantum.swap attribute)": [[34, "lambeq.backend.quantum.Swap.dom", false]], "dom (lambeq.backend.tensor.box attribute)": [[34, "lambeq.backend.tensor.Box.dom", false]], "dom (lambeq.backend.tensor.cap attribute)": [[34, "lambeq.backend.tensor.Cap.dom", false]], "dom (lambeq.backend.tensor.cup attribute)": [[34, "lambeq.backend.tensor.Cup.dom", false]], "dom (lambeq.backend.tensor.daggered attribute)": [[34, "lambeq.backend.tensor.Daggered.dom", false]], "dom (lambeq.backend.tensor.diagram attribute)": [[34, "lambeq.backend.tensor.Diagram.dom", false]], "dom (lambeq.backend.tensor.layer property)": [[34, "lambeq.backend.tensor.Layer.dom", false]], "dom (lambeq.backend.tensor.spider attribute)": [[34, "lambeq.backend.tensor.Spider.dom", false]], "dom (lambeq.backend.tensor.swap attribute)": [[34, "lambeq.backend.tensor.Swap.dom", false]], "double() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.double", false]], "double() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.double", false]], "double() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.double", false]], "draw() (in module lambeq.backend.drawing)": [[34, "lambeq.backend.drawing.draw", false]], "draw() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.draw", false]], "draw() (lambeq.backend.pennylane.pennylanecircuit method)": [[34, "lambeq.backend.pennylane.PennyLaneCircuit.draw", false]], "draw() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.draw", false]], "draw() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.draw", false]], "draw_equation() (in module lambeq.backend.drawing)": [[34, "lambeq.backend.drawing.draw_equation", false]], "draw_pregroup() (in module lambeq.backend.drawing)": [[34, "lambeq.backend.drawing.draw_pregroup", false]], "drawablediagram (class in lambeq.backend.drawing)": [[34, "lambeq.backend.drawing.DrawableDiagram", false]], "dtype (lambeq.bobcat.bertforchartclassification property)": [[35, "lambeq.bobcat.BertForChartClassification.dtype", false]], "dummy_inputs (lambeq.bobcat.bertforchartclassification property)": [[35, "lambeq.bobcat.BertForChartClassification.dummy_inputs", false]], "dump_patches (lambeq.bobcat.bertforchartclassification attribute)": [[35, "lambeq.bobcat.BertForChartClassification.dump_patches", false]], "dump_patches (lambeq.training.pennylanemodel attribute)": [[39, "lambeq.training.PennyLaneModel.dump_patches", false]], "dump_patches (lambeq.training.pytorchmodel attribute)": [[39, "lambeq.training.PytorchModel.dump_patches", false]], "ecr() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.ECR", false]], "enable_adapters() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.enable_adapters", false]], "enable_input_require_grads() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.enable_input_require_grads", false]], "encode (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Encode", false]], "encode() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.encode", false]], "endswith() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.endswith", false]], "entity (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Entity", false]], "errno (lambeq.text2diagram.webparseerror attribute)": [[37, "lambeq.text2diagram.WebParseError.errno", false]], "estimate_tokens() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.estimate_tokens", false]], "eswap() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.ESWAP", false]], "eval() (lambeq.backend.pennylane.pennylanecircuit method)": [[34, "lambeq.backend.pennylane.PennyLaneCircuit.eval", false]], "eval() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.eval", false]], "eval() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.eval", false]], "eval() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.eval", false]], "eval() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.eval", false]], "eval() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.eval", false]], "expandtabs() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.expandtabs", false]], "extend() (lambeq.backend.grammar.layer method)": [[34, "lambeq.backend.grammar.Layer.extend", false]], "extend() (lambeq.backend.quantum.layer method)": [[34, "lambeq.backend.quantum.Layer.extend", false]], "extend() (lambeq.backend.tensor.layer method)": [[34, "lambeq.backend.tensor.Layer.extend", false]], "extra_repr() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.extra_repr", false]], "extra_repr() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.extra_repr", false]], "extra_repr() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.extra_repr", false]], "extract_ops_from_tk() (in module lambeq.backend.pennylane)": [[34, "lambeq.backend.pennylane.extract_ops_from_tk", false]], "fa() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.fa", false]], "fa() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.fa", false]], "fa() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.fa", false]], "fc() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.fc", false]], "fc() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.fc", false]], "fc() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.fc", false]], "feature (lambeq.bobcat.category attribute)": [[35, "lambeq.bobcat.Category.feature", false]], "filename (lambeq.text2diagram.webparseerror attribute)": [[37, "lambeq.text2diagram.WebParseError.filename", false]], "filename2 (lambeq.text2diagram.webparseerror attribute)": [[37, "lambeq.text2diagram.WebParseError.filename2", false]], "filled_deps (lambeq.bobcat.parsetree attribute)": [[35, "lambeq.bobcat.ParseTree.filled_deps", false]], "filter_root() (lambeq.bobcat.chartparser method)": [[35, "lambeq.bobcat.ChartParser.filter_root", false]], "find() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.find", false]], "fit() (lambeq.quantumtrainer method)": [[53, "lambeq.QuantumTrainer.fit", false]], "fit() (lambeq.trainer method)": [[53, "lambeq.Trainer.fit", false]], "fit() (lambeq.training.pytorchtrainer method)": [[39, "lambeq.training.PytorchTrainer.fit", false]], "fit() (lambeq.training.quantumtrainer method)": [[39, "lambeq.training.QuantumTrainer.fit", false]], "fit() (lambeq.training.trainer method)": [[39, "lambeq.training.Trainer.fit", false]], "flatten_registers() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.flatten_registers", false]], "float() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.float", false]], "float() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.float", false]], "float() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.float", false]], "floating_point_ops() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.floating_point_ops", false]], "format() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.format", false]], "format_map() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.format_map", false]], "forward() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.forward", false]], "forward() (lambeq.model method)": [[53, "lambeq.Model.forward", false]], "forward() (lambeq.numpymodel method)": [[53, "lambeq.NumpyModel.forward", false]], "forward() (lambeq.pennylanemodel method)": [[53, "lambeq.PennyLaneModel.forward", false]], "forward() (lambeq.pytorchmodel method)": [[53, "lambeq.PytorchModel.forward", false]], "forward() (lambeq.quantummodel method)": [[53, "lambeq.QuantumModel.forward", false]], "forward() (lambeq.tketmodel method)": [[53, "lambeq.TketModel.forward", false]], "forward() (lambeq.training.model method)": [[39, "lambeq.training.Model.forward", false]], "forward() (lambeq.training.numpymodel method)": [[39, "lambeq.training.NumpyModel.forward", false]], "forward() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.forward", false]], "forward() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.forward", false]], "forward() (lambeq.training.quantummodel method)": [[39, "lambeq.training.QuantumModel.forward", false]], "forward() (lambeq.training.tketmodel method)": [[39, "lambeq.training.TketModel.forward", false]], "forward_application (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.FORWARD_APPLICATION", false]], "forward_application (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.FORWARD_APPLICATION", false]], "forward_composition (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.FORWARD_COMPOSITION", false]], "forward_composition (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.FORWARD_COMPOSITION", false]], "forward_crossed_composition (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.FORWARD_CROSSED_COMPOSITION", false]], "forward_crossed_composition (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.FORWARD_CROSSED_COMPOSITION", false]], "forward_type_raising (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.FORWARD_TYPE_RAISING", false]], "forward_type_raising (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.FORWARD_TYPE_RAISING", false]], "framework (lambeq.bobcat.bertforchartclassification property)": [[35, "lambeq.bobcat.BertForChartClassification.framework", false]], "free_symbols (lambeq.backend.quantum.anticonjugate property)": [[34, "lambeq.backend.quantum.AntiConjugate.free_symbols", false]], "free_symbols (lambeq.backend.quantum.bit property)": [[34, "lambeq.backend.quantum.Bit.free_symbols", false]], "free_symbols (lambeq.backend.quantum.box property)": [[34, "lambeq.backend.quantum.Box.free_symbols", false]], "free_symbols (lambeq.backend.quantum.bra property)": [[34, "lambeq.backend.quantum.Bra.free_symbols", false]], "free_symbols (lambeq.backend.quantum.controlled property)": [[34, "lambeq.backend.quantum.Controlled.free_symbols", false]], "free_symbols (lambeq.backend.quantum.daggered property)": [[34, "lambeq.backend.quantum.Daggered.free_symbols", false]], "free_symbols (lambeq.backend.quantum.diagram property)": [[34, "lambeq.backend.quantum.Diagram.free_symbols", false]], "free_symbols (lambeq.backend.quantum.discard property)": [[34, "lambeq.backend.quantum.Discard.free_symbols", false]], "free_symbols (lambeq.backend.quantum.encode property)": [[34, "lambeq.backend.quantum.Encode.free_symbols", false]], "free_symbols (lambeq.backend.quantum.ket property)": [[34, "lambeq.backend.quantum.Ket.free_symbols", false]], "free_symbols (lambeq.backend.quantum.measure property)": [[34, "lambeq.backend.quantum.Measure.free_symbols", false]], "free_symbols (lambeq.backend.quantum.mixedstate property)": [[34, "lambeq.backend.quantum.MixedState.free_symbols", false]], "free_symbols (lambeq.backend.quantum.parametrized property)": [[34, "lambeq.backend.quantum.Parametrized.free_symbols", false]], "free_symbols (lambeq.backend.quantum.rotation property)": [[34, "lambeq.backend.quantum.Rotation.free_symbols", false]], "free_symbols (lambeq.backend.quantum.rx property)": [[34, "lambeq.backend.quantum.Rx.free_symbols", false]], "free_symbols (lambeq.backend.quantum.ry property)": [[34, "lambeq.backend.quantum.Ry.free_symbols", false]], "free_symbols (lambeq.backend.quantum.rz property)": [[34, "lambeq.backend.quantum.Rz.free_symbols", false]], "free_symbols (lambeq.backend.quantum.scalar property)": [[34, "lambeq.backend.quantum.Scalar.free_symbols", false]], "free_symbols (lambeq.backend.quantum.selfconjugate property)": [[34, "lambeq.backend.quantum.SelfConjugate.free_symbols", false]], "free_symbols (lambeq.backend.quantum.sqrt property)": [[34, "lambeq.backend.quantum.Sqrt.free_symbols", false]], "free_symbols (lambeq.backend.quantum.swap property)": [[34, "lambeq.backend.quantum.Swap.free_symbols", false]], "free_symbols (lambeq.backend.tensor.box property)": [[34, "lambeq.backend.tensor.Box.free_symbols", false]], "free_symbols (lambeq.backend.tensor.cap property)": [[34, "lambeq.backend.tensor.Cap.free_symbols", false]], "free_symbols (lambeq.backend.tensor.cup property)": [[34, "lambeq.backend.tensor.Cup.free_symbols", false]], "free_symbols (lambeq.backend.tensor.daggered property)": [[34, "lambeq.backend.tensor.Daggered.free_symbols", false]], "free_symbols (lambeq.backend.tensor.diagram property)": [[34, "lambeq.backend.tensor.Diagram.free_symbols", false]], "free_symbols (lambeq.backend.tensor.spider property)": [[34, "lambeq.backend.tensor.Spider.free_symbols", false]], "free_symbols (lambeq.backend.tensor.swap property)": [[34, "lambeq.backend.tensor.Swap.free_symbols", false]], "free_symbols() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.free_symbols", false]], "frobenius algebra": [[29, "term-Frobenius-algebra", true]], "from_checkpoint() (lambeq.model class method)": [[53, "lambeq.Model.from_checkpoint", false]], "from_checkpoint() (lambeq.training.model class method)": [[39, "lambeq.training.Model.from_checkpoint", false]], "from_checkpoint() (lambeq.training.numpymodel class method)": [[39, "lambeq.training.NumpyModel.from_checkpoint", false]], "from_checkpoint() (lambeq.training.pennylanemodel class method)": [[39, "lambeq.training.PennyLaneModel.from_checkpoint", false]], "from_checkpoint() (lambeq.training.pytorchmodel class method)": [[39, "lambeq.training.PytorchModel.from_checkpoint", false]], "from_checkpoint() (lambeq.training.quantummodel class method)": [[39, "lambeq.training.QuantumModel.from_checkpoint", false]], "from_checkpoint() (lambeq.training.tketmodel class method)": [[39, "lambeq.training.TketModel.from_checkpoint", false]], "from_diagram() (lambeq.backend.drawing.drawablediagram class method)": [[34, "lambeq.backend.drawing.DrawableDiagram.from_diagram", false]], "from_diagrams() (lambeq.model class method)": [[53, "lambeq.Model.from_diagrams", false]], "from_diagrams() (lambeq.pennylanemodel class method)": [[53, "lambeq.PennyLaneModel.from_diagrams", false]], "from_diagrams() (lambeq.rewrite.unknownwordsrewriterule class method)": [[36, "lambeq.rewrite.UnknownWordsRewriteRule.from_diagrams", false]], "from_diagrams() (lambeq.training.model class method)": [[39, "lambeq.training.Model.from_diagrams", false]], "from_diagrams() (lambeq.training.numpymodel class method)": [[39, "lambeq.training.NumpyModel.from_diagrams", false]], "from_diagrams() (lambeq.training.pennylanemodel class method)": [[39, "lambeq.training.PennyLaneModel.from_diagrams", false]], "from_diagrams() (lambeq.training.pytorchmodel class method)": [[39, "lambeq.training.PytorchModel.from_diagrams", false]], "from_diagrams() (lambeq.training.quantummodel class method)": [[39, "lambeq.training.QuantumModel.from_diagrams", false]], "from_diagrams() (lambeq.training.tketmodel class method)": [[39, "lambeq.training.TketModel.from_diagrams", false]], "from_diagrams() (lambeq.unknownwordsrewriterule class method)": [[53, "lambeq.UnknownWordsRewriteRule.from_diagrams", false]], "from_dict() (lambeq.backend.converters.tk.circuit static method)": [[34, "lambeq.backend.converters.tk.Circuit.from_dict", false]], "from_discopy() (in module lambeq.backend.converters.discopy)": [[34, "lambeq.backend.converters.discopy.from_discopy", false]], "from_discopy() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.from_discopy", false]], "from_discopy() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.from_discopy", false]], "from_discopy() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.from_discopy", false]], "from_file() (lambeq.checkpoint class method)": [[53, "lambeq.Checkpoint.from_file", false]], "from_file() (lambeq.training.checkpoint class method)": [[39, "lambeq.training.Checkpoint.from_file", false]], "from_json() (lambeq.backend.grammar.box class method)": [[34, "lambeq.backend.grammar.Box.from_json", false]], "from_json() (lambeq.backend.grammar.cap class method)": [[34, "lambeq.backend.grammar.Cap.from_json", false]], "from_json() (lambeq.backend.grammar.category method)": [[34, "lambeq.backend.grammar.Category.from_json", false]], "from_json() (lambeq.backend.grammar.cup class method)": [[34, "lambeq.backend.grammar.Cup.from_json", false]], "from_json() (lambeq.backend.grammar.daggered class method)": [[34, "lambeq.backend.grammar.Daggered.from_json", false]], "from_json() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.from_json", false]], "from_json() (lambeq.backend.grammar.layer class method)": [[34, "lambeq.backend.grammar.Layer.from_json", false]], "from_json() (lambeq.backend.grammar.spider class method)": [[34, "lambeq.backend.grammar.Spider.from_json", false]], "from_json() (lambeq.backend.grammar.swap class method)": [[34, "lambeq.backend.grammar.Swap.from_json", false]], "from_json() (lambeq.backend.grammar.ty class method)": [[34, "lambeq.backend.grammar.Ty.from_json", false]], "from_json() (lambeq.backend.grammar.word class method)": [[34, "lambeq.backend.grammar.Word.from_json", false]], "from_json() (lambeq.backend.quantum.anticonjugate class method)": [[34, "lambeq.backend.quantum.AntiConjugate.from_json", false]], "from_json() (lambeq.backend.quantum.bit class method)": [[34, "lambeq.backend.quantum.Bit.from_json", false]], "from_json() (lambeq.backend.quantum.box class method)": [[34, "lambeq.backend.quantum.Box.from_json", false]], "from_json() (lambeq.backend.quantum.bra class method)": [[34, "lambeq.backend.quantum.Bra.from_json", false]], "from_json() (lambeq.backend.quantum.controlled class method)": [[34, "lambeq.backend.quantum.Controlled.from_json", false]], "from_json() (lambeq.backend.quantum.daggered class method)": [[34, "lambeq.backend.quantum.Daggered.from_json", false]], "from_json() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.from_json", false]], "from_json() (lambeq.backend.quantum.discard class method)": [[34, "lambeq.backend.quantum.Discard.from_json", false]], "from_json() (lambeq.backend.quantum.encode class method)": [[34, "lambeq.backend.quantum.Encode.from_json", false]], "from_json() (lambeq.backend.quantum.ket class method)": [[34, "lambeq.backend.quantum.Ket.from_json", false]], "from_json() (lambeq.backend.quantum.layer class method)": [[34, "lambeq.backend.quantum.Layer.from_json", false]], "from_json() (lambeq.backend.quantum.measure class method)": [[34, "lambeq.backend.quantum.Measure.from_json", false]], "from_json() (lambeq.backend.quantum.mixedstate class method)": [[34, "lambeq.backend.quantum.MixedState.from_json", false]], "from_json() (lambeq.backend.quantum.parametrized class method)": [[34, "lambeq.backend.quantum.Parametrized.from_json", false]], "from_json() (lambeq.backend.quantum.rotation class method)": [[34, "lambeq.backend.quantum.Rotation.from_json", false]], "from_json() (lambeq.backend.quantum.rx class method)": [[34, "lambeq.backend.quantum.Rx.from_json", false]], "from_json() (lambeq.backend.quantum.ry class method)": [[34, "lambeq.backend.quantum.Ry.from_json", false]], "from_json() (lambeq.backend.quantum.rz class method)": [[34, "lambeq.backend.quantum.Rz.from_json", false]], "from_json() (lambeq.backend.quantum.scalar class method)": [[34, "lambeq.backend.quantum.Scalar.from_json", false]], "from_json() (lambeq.backend.quantum.selfconjugate class method)": [[34, "lambeq.backend.quantum.SelfConjugate.from_json", false]], "from_json() (lambeq.backend.quantum.sqrt class method)": [[34, "lambeq.backend.quantum.Sqrt.from_json", false]], "from_json() (lambeq.backend.quantum.swap class method)": [[34, "lambeq.backend.quantum.Swap.from_json", false]], "from_json() (lambeq.backend.quantum.ty class method)": [[34, "lambeq.backend.quantum.Ty.from_json", false]], "from_json() (lambeq.backend.tensor.box class method)": [[34, "lambeq.backend.tensor.Box.from_json", false]], "from_json() (lambeq.backend.tensor.cap class method)": [[34, "lambeq.backend.tensor.Cap.from_json", false]], "from_json() (lambeq.backend.tensor.cup class method)": [[34, "lambeq.backend.tensor.Cup.from_json", false]], "from_json() (lambeq.backend.tensor.daggered class method)": [[34, "lambeq.backend.tensor.Daggered.from_json", false]], "from_json() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.from_json", false]], "from_json() (lambeq.backend.tensor.dim class method)": [[34, "lambeq.backend.tensor.Dim.from_json", false]], "from_json() (lambeq.backend.tensor.layer class method)": [[34, "lambeq.backend.tensor.Layer.from_json", false]], "from_json() (lambeq.backend.tensor.spider class method)": [[34, "lambeq.backend.tensor.Spider.from_json", false]], "from_json() (lambeq.backend.tensor.swap class method)": [[34, "lambeq.backend.tensor.Swap.from_json", false]], "from_json() (lambeq.ccgtree class method)": [[53, "lambeq.CCGTree.from_json", false]], "from_json() (lambeq.text2diagram.ccgtree class method)": [[37, "lambeq.text2diagram.CCGTree.from_json", false]], "from_pretrained() (lambeq.bobcat.bertforchartclassification class method)": [[35, "lambeq.bobcat.BertForChartClassification.from_pretrained", false]], "from_tk() (in module lambeq.backend.converters.tk)": [[34, "lambeq.backend.converters.tk.from_tk", false]], "fsim() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.FSim", false]], "functor": [[29, "term-functor", true]], "functor (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Functor", false]], "fwd (lambeq.bobcat.category property)": [[35, "lambeq.bobcat.Category.fwd", false]], "fwd_comp (lambeq.bobcat.parsetree property)": [[35, "lambeq.bobcat.ParseTree.fwd_comp", false]], "fx() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.fx", false]], "fx() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.fx", false]], "fx() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.fx", false]], "generalized_backward_composition (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.GENERALIZED_BACKWARD_COMPOSITION", false]], "generalized_backward_composition (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.GENERALIZED_BACKWARD_COMPOSITION", false]], "generalized_backward_crossed_composition (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.GENERALIZED_BACKWARD_CROSSED_COMPOSITION", false]], "generalized_backward_crossed_composition (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.GENERALIZED_BACKWARD_CROSSED_COMPOSITION", false]], "generalized_forward_composition (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.GENERALIZED_FORWARD_COMPOSITION", false]], "generalized_forward_composition (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.GENERALIZED_FORWARD_COMPOSITION", false]], "generalized_forward_crossed_composition (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.GENERALIZED_FORWARD_CROSSED_COMPOSITION", false]], "generalized_forward_crossed_composition (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.GENERALIZED_FORWARD_CROSSED_COMPOSITION", false]], "generate() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.generate", false]], "generate_cap() (in module lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.generate_cap", false]], "generate_cup() (in module lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.generate_cup", false]], "generate_spider() (in module lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.generate_spider", false]], "get() (lambeq.training.checkpoint method)": [[39, "lambeq.training.Checkpoint.get", false]], "get_adapter_state_dict() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.get_adapter_state_dict", false]], "get_backend() (in module lambeq.backend.numerical_backend)": [[34, "lambeq.backend.numerical_backend.get_backend", false]], "get_buffer() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.get_buffer", false]], "get_buffer() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.get_buffer", false]], "get_buffer() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.get_buffer", false]], "get_c_register() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.get_c_register", false]], "get_commands() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.get_commands", false]], "get_counts() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.get_counts", false]], "get_device() (lambeq.backend.pennylane.pennylanecircuit method)": [[34, "lambeq.backend.pennylane.PennyLaneCircuit.get_device", false]], "get_diagram_output() (lambeq.model method)": [[53, "lambeq.Model.get_diagram_output", false]], "get_diagram_output() (lambeq.numpymodel method)": [[53, "lambeq.NumpyModel.get_diagram_output", false]], "get_diagram_output() (lambeq.pennylanemodel method)": [[53, "lambeq.PennyLaneModel.get_diagram_output", false]], "get_diagram_output() (lambeq.pytorchmodel method)": [[53, "lambeq.PytorchModel.get_diagram_output", false]], "get_diagram_output() (lambeq.quantummodel method)": [[53, "lambeq.QuantumModel.get_diagram_output", false]], "get_diagram_output() (lambeq.tketmodel method)": [[53, "lambeq.TketModel.get_diagram_output", false]], "get_diagram_output() (lambeq.training.model method)": [[39, "lambeq.training.Model.get_diagram_output", false]], "get_diagram_output() (lambeq.training.numpymodel method)": [[39, "lambeq.training.NumpyModel.get_diagram_output", false]], "get_diagram_output() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.get_diagram_output", false]], "get_diagram_output() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.get_diagram_output", false]], "get_diagram_output() (lambeq.training.quantummodel method)": [[39, "lambeq.training.QuantumModel.get_diagram_output", false]], "get_diagram_output() (lambeq.training.tketmodel method)": [[39, "lambeq.training.TketModel.get_diagram_output", false]], "get_extended_attention_mask() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.get_extended_attention_mask", false]], "get_extra_state() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.get_extra_state", false]], "get_extra_state() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.get_extra_state", false]], "get_extra_state() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.get_extra_state", false]], "get_head_mask() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.get_head_mask", false]], "get_input_embeddings() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.get_input_embeddings", false]], "get_memory_footprint() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.get_memory_footprint", false]], "get_output_embeddings() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.get_output_embeddings", false]], "get_parameter() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.get_parameter", false]], "get_parameter() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.get_parameter", false]], "get_parameter() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.get_parameter", false]], "get_position_embeddings() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.get_position_embeddings", false]], "get_post_selection_dict() (in module lambeq.backend.pennylane)": [[34, "lambeq.backend.pennylane.get_post_selection_dict", false]], "get_q_register() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.get_q_register", false]], "get_resources() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.get_resources", false]], "get_span_score() (lambeq.bobcat.chartparser method)": [[35, "lambeq.bobcat.ChartParser.get_span_score", false]], "get_statevector() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.get_statevector", false]], "get_submodule() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.get_submodule", false]], "get_submodule() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.get_submodule", false]], "get_submodule() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.get_submodule", false]], "get_unitary() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.get_unitary", false]], "get_unitary_times_other() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.get_unitary_times_other", false]], "get_valid_states() (lambeq.backend.pennylane.pennylanecircuit method)": [[34, "lambeq.backend.pennylane.PennyLaneCircuit.get_valid_states", false]], "gpi() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.GPI", false]], "gpi2() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.GPI2", false]], "gradient_checkpointing_disable() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.gradient_checkpointing_disable", false]], "gradient_checkpointing_enable() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.gradient_checkpointing_enable", false]], "grammar (class in lambeq.bobcat)": [[35, "lambeq.bobcat.Grammar", false]], "h() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.H", false]], "half() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.half", false]], "half() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.half", false]], "half() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.half", false]], "has_value() (lambeq.verbositylevel class method)": [[53, "lambeq.VerbosityLevel.has_value", false]], "heal_tokens() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.heal_tokens", false]], "height": [[37, "term-HEIGHT", true], [53, "term-HEIGHT", true]], "height (lambeq.text2diagram.treereadermode attribute)": [[37, "lambeq.text2diagram.TreeReaderMode.HEIGHT", false]], "height (lambeq.treereadermode attribute)": [[53, "lambeq.TreeReaderMode.HEIGHT", false]], "id() (in module lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Id", false]], "id() (in module lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Id", false]], "id() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.id", false]], "id() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.id", false]], "id() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.id", false]], "implicit_qubit_permutation() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.implicit_qubit_permutation", false]], "index() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.index", false]], "infer_rule() (lambeq.ccgrule class method)": [[53, "lambeq.CCGRule.infer_rule", false]], "infer_rule() (lambeq.text2diagram.ccgrule class method)": [[37, "lambeq.text2diagram.CCGRule.infer_rule", false]], "init_and_discard() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.init_and_discard", false]], "init_weights() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.init_weights", false]], "initialise_concrete_params() (lambeq.backend.pennylane.pennylanecircuit method)": [[34, "lambeq.backend.pennylane.PennyLaneCircuit.initialise_concrete_params", false]], "initialise_device_and_circuit() (lambeq.backend.pennylane.pennylanecircuit method)": [[34, "lambeq.backend.pennylane.PennyLaneCircuit.initialise_device_and_circuit", false]], "initialise_weights() (lambeq.model method)": [[53, "lambeq.Model.initialise_weights", false]], "initialise_weights() (lambeq.pennylanemodel method)": [[53, "lambeq.PennyLaneModel.initialise_weights", false]], "initialise_weights() (lambeq.pytorchmodel method)": [[53, "lambeq.PytorchModel.initialise_weights", false]], "initialise_weights() (lambeq.quantummodel method)": [[53, "lambeq.QuantumModel.initialise_weights", false]], "initialise_weights() (lambeq.training.model method)": [[39, "lambeq.training.Model.initialise_weights", false]], "initialise_weights() (lambeq.training.numpymodel method)": [[39, "lambeq.training.NumpyModel.initialise_weights", false]], "initialise_weights() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.initialise_weights", false]], "initialise_weights() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.initialise_weights", false]], "initialise_weights() (lambeq.training.quantummodel method)": [[39, "lambeq.training.QuantumModel.initialise_weights", false]], "initialise_weights() (lambeq.training.tketmodel method)": [[39, "lambeq.training.TketModel.initialise_weights", false]], "input_supertags (lambeq.bobcat.sentence attribute)": [[35, "lambeq.bobcat.Sentence.input_supertags", false]], "interchange() (in module lambeq.backend.snake_removal)": [[34, "lambeq.backend.snake_removal.interchange", false]], "interchangererror": [[34, "lambeq.backend.snake_removal.InterchangerError", false]], "invert_attention_mask() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.invert_attention_mask", false]], "ipu() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.ipu", false]], "ipu() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.ipu", false]], "ipu() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.ipu", false]], "iqp circuit": [[29, "term-IQP-circuit", true]], "iqpansatz (class in lambeq)": [[53, "lambeq.IQPAnsatz", false]], "iqpansatz (class in lambeq.ansatz)": [[33, "lambeq.ansatz.IQPAnsatz", false]], "is_atomic (lambeq.backend.grammar.ty property)": [[34, "lambeq.backend.grammar.Ty.is_atomic", false]], "is_atomic (lambeq.backend.quantum.ty property)": [[34, "lambeq.backend.quantum.Ty.is_atomic", false]], "is_atomic (lambeq.backend.tensor.dim property)": [[34, "lambeq.backend.tensor.Dim.is_atomic", false]], "is_atomic (lambeq.ccgtype attribute)": [[53, "lambeq.CCGType.is_atomic", false]], "is_atomic (lambeq.text2diagram.ccgtype attribute)": [[37, "lambeq.text2diagram.CCGType.is_atomic", false]], "is_classical (lambeq.backend.quantum.anticonjugate property)": [[34, "lambeq.backend.quantum.AntiConjugate.is_classical", false]], "is_classical (lambeq.backend.quantum.bit property)": [[34, "lambeq.backend.quantum.Bit.is_classical", false]], "is_classical (lambeq.backend.quantum.box property)": [[34, "lambeq.backend.quantum.Box.is_classical", false]], "is_classical (lambeq.backend.quantum.bra property)": [[34, "lambeq.backend.quantum.Bra.is_classical", false]], "is_classical (lambeq.backend.quantum.controlled property)": [[34, "lambeq.backend.quantum.Controlled.is_classical", false]], "is_classical (lambeq.backend.quantum.daggered property)": [[34, "lambeq.backend.quantum.Daggered.is_classical", false]], "is_classical (lambeq.backend.quantum.discard property)": [[34, "lambeq.backend.quantum.Discard.is_classical", false]], "is_classical (lambeq.backend.quantum.encode property)": [[34, "lambeq.backend.quantum.Encode.is_classical", false]], "is_classical (lambeq.backend.quantum.ket property)": [[34, "lambeq.backend.quantum.Ket.is_classical", false]], "is_classical (lambeq.backend.quantum.measure property)": [[34, "lambeq.backend.quantum.Measure.is_classical", false]], "is_classical (lambeq.backend.quantum.mixedstate property)": [[34, "lambeq.backend.quantum.MixedState.is_classical", false]], "is_classical (lambeq.backend.quantum.parametrized property)": [[34, "lambeq.backend.quantum.Parametrized.is_classical", false]], "is_classical (lambeq.backend.quantum.rotation property)": [[34, "lambeq.backend.quantum.Rotation.is_classical", false]], "is_classical (lambeq.backend.quantum.rx property)": [[34, "lambeq.backend.quantum.Rx.is_classical", false]], "is_classical (lambeq.backend.quantum.ry property)": [[34, "lambeq.backend.quantum.Ry.is_classical", false]], "is_classical (lambeq.backend.quantum.rz property)": [[34, "lambeq.backend.quantum.Rz.is_classical", false]], "is_classical (lambeq.backend.quantum.scalar property)": [[34, "lambeq.backend.quantum.Scalar.is_classical", false]], "is_classical (lambeq.backend.quantum.selfconjugate property)": [[34, "lambeq.backend.quantum.SelfConjugate.is_classical", false]], "is_classical (lambeq.backend.quantum.sqrt property)": [[34, "lambeq.backend.quantum.Sqrt.is_classical", false]], "is_classical (lambeq.backend.quantum.swap property)": [[34, "lambeq.backend.quantum.Swap.is_classical", false]], "is_complex (lambeq.backend.grammar.ty property)": [[34, "lambeq.backend.grammar.Ty.is_complex", false]], "is_complex (lambeq.backend.quantum.ty property)": [[34, "lambeq.backend.quantum.Ty.is_complex", false]], "is_complex (lambeq.backend.tensor.dim property)": [[34, "lambeq.backend.tensor.Dim.is_complex", false]], "is_complex (lambeq.ccgtype attribute)": [[53, "lambeq.CCGType.is_complex", false]], "is_complex (lambeq.text2diagram.ccgtype attribute)": [[37, "lambeq.text2diagram.CCGType.is_complex", false]], "is_conjoinable (lambeq.ccgtype property)": [[53, "lambeq.CCGType.is_conjoinable", false]], "is_conjoinable (lambeq.text2diagram.ccgtype property)": [[37, "lambeq.text2diagram.CCGType.is_conjoinable", false]], "is_empty (lambeq.backend.grammar.ty property)": [[34, "lambeq.backend.grammar.Ty.is_empty", false]], "is_empty (lambeq.backend.quantum.ty property)": [[34, "lambeq.backend.quantum.Ty.is_empty", false]], "is_empty (lambeq.backend.tensor.dim property)": [[34, "lambeq.backend.tensor.Dim.is_empty", false]], "is_empty (lambeq.ccgtype attribute)": [[53, "lambeq.CCGType.is_empty", false]], "is_empty (lambeq.text2diagram.ccgtype attribute)": [[37, "lambeq.text2diagram.CCGType.is_empty", false]], "is_gradient_checkpointing (lambeq.bobcat.bertforchartclassification property)": [[35, "lambeq.bobcat.BertForChartClassification.is_gradient_checkpointing", false]], "is_id (lambeq.backend.grammar.diagram property)": [[34, "lambeq.backend.grammar.Diagram.is_id", false]], "is_id (lambeq.backend.grammar.diagrammable property)": [[34, "lambeq.backend.grammar.Diagrammable.is_id", false]], "is_id (lambeq.backend.quantum.diagram property)": [[34, "lambeq.backend.quantum.Diagram.is_id", false]], "is_id (lambeq.backend.tensor.diagram property)": [[34, "lambeq.backend.tensor.Diagram.is_id", false]], "is_leaf (lambeq.bobcat.parsetree property)": [[35, "lambeq.bobcat.ParseTree.is_leaf", false]], "is_mixed (lambeq.backend.quantum.anticonjugate attribute)": [[34, "lambeq.backend.quantum.AntiConjugate.is_mixed", false]], "is_mixed (lambeq.backend.quantum.bit attribute)": [[34, "lambeq.backend.quantum.Bit.is_mixed", false]], "is_mixed (lambeq.backend.quantum.box attribute)": [[34, "lambeq.backend.quantum.Box.is_mixed", false]], "is_mixed (lambeq.backend.quantum.bra attribute)": [[34, "lambeq.backend.quantum.Bra.is_mixed", false]], "is_mixed (lambeq.backend.quantum.controlled attribute)": [[34, "lambeq.backend.quantum.Controlled.is_mixed", false]], "is_mixed (lambeq.backend.quantum.daggered attribute)": [[34, "lambeq.backend.quantum.Daggered.is_mixed", false]], "is_mixed (lambeq.backend.quantum.diagram property)": [[34, "lambeq.backend.quantum.Diagram.is_mixed", false]], "is_mixed (lambeq.backend.quantum.discard attribute)": [[34, "lambeq.backend.quantum.Discard.is_mixed", false]], "is_mixed (lambeq.backend.quantum.encode attribute)": [[34, "lambeq.backend.quantum.Encode.is_mixed", false]], "is_mixed (lambeq.backend.quantum.ket attribute)": [[34, "lambeq.backend.quantum.Ket.is_mixed", false]], "is_mixed (lambeq.backend.quantum.measure attribute)": [[34, "lambeq.backend.quantum.Measure.is_mixed", false]], "is_mixed (lambeq.backend.quantum.mixedstate attribute)": [[34, "lambeq.backend.quantum.MixedState.is_mixed", false]], "is_mixed (lambeq.backend.quantum.parametrized attribute)": [[34, "lambeq.backend.quantum.Parametrized.is_mixed", false]], "is_mixed (lambeq.backend.quantum.rotation attribute)": [[34, "lambeq.backend.quantum.Rotation.is_mixed", false]], "is_mixed (lambeq.backend.quantum.rx attribute)": [[34, "lambeq.backend.quantum.Rx.is_mixed", false]], "is_mixed (lambeq.backend.quantum.ry attribute)": [[34, "lambeq.backend.quantum.Ry.is_mixed", false]], "is_mixed (lambeq.backend.quantum.rz attribute)": [[34, "lambeq.backend.quantum.Rz.is_mixed", false]], "is_mixed (lambeq.backend.quantum.scalar attribute)": [[34, "lambeq.backend.quantum.Scalar.is_mixed", false]], "is_mixed (lambeq.backend.quantum.selfconjugate attribute)": [[34, "lambeq.backend.quantum.SelfConjugate.is_mixed", false]], "is_mixed (lambeq.backend.quantum.sqrt attribute)": [[34, "lambeq.backend.quantum.Sqrt.is_mixed", false]], "is_mixed (lambeq.backend.quantum.swap attribute)": [[34, "lambeq.backend.quantum.Swap.is_mixed", false]], "is_over (lambeq.ccgtype attribute)": [[53, "lambeq.CCGType.is_over", false]], "is_over (lambeq.text2diagram.ccgtype attribute)": [[37, "lambeq.text2diagram.CCGType.is_over", false]], "is_parallelizable (lambeq.bobcat.bertforchartclassification attribute)": [[35, "lambeq.bobcat.BertForChartClassification.is_parallelizable", false]], "is_pregroup (lambeq.backend.grammar.diagram property)": [[34, "lambeq.backend.grammar.Diagram.is_pregroup", false]], "is_pregroup (lambeq.backend.quantum.diagram property)": [[34, "lambeq.backend.quantum.Diagram.is_pregroup", false]], "is_pregroup (lambeq.backend.tensor.diagram property)": [[34, "lambeq.backend.tensor.Diagram.is_pregroup", false]], "is_reversed (lambeq.backend.grammar.cap attribute)": [[34, "lambeq.backend.grammar.Cap.is_reversed", false]], "is_reversed (lambeq.backend.grammar.cup attribute)": [[34, "lambeq.backend.grammar.Cup.is_reversed", false]], "is_reversed (lambeq.backend.tensor.cap attribute)": [[34, "lambeq.backend.tensor.Cap.is_reversed", false]], "is_reversed (lambeq.backend.tensor.cup attribute)": [[34, "lambeq.backend.tensor.Cup.is_reversed", false]], "is_simple (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.is_simple", false]], "is_symbolic() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.is_symbolic", false]], "is_under (lambeq.ccgtype attribute)": [[53, "lambeq.CCGType.is_under", false]], "is_under (lambeq.text2diagram.ccgtype attribute)": [[37, "lambeq.text2diagram.CCGType.is_under", false]], "isalnum() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.isalnum", false]], "isalpha() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.isalpha", false]], "isascii() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.isascii", false]], "isdecimal() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.isdecimal", false]], "isdigit() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.isdigit", false]], "isidentifier() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.isidentifier", false]], "islower() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.islower", false]], "isnumeric() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.isnumeric", false]], "isprintable() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.isprintable", false]], "isspace() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.isspace", false]], "istitle() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.istitle", false]], "isupper() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.isupper", false]], "iswap() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.ISWAP", false]], "iswapmax() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.ISWAPMax", false]], "items() (lambeq.training.checkpoint method)": [[39, "lambeq.training.Checkpoint.items", false]], "jax (class in lambeq.backend.numerical_backend)": [[34, "lambeq.backend.numerical_backend.JAX", false]], "join() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.join", false]], "ket (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Ket", false]], "keys() (lambeq.training.checkpoint method)": [[39, "lambeq.training.Checkpoint.keys", false]], "l (lambeq.backend.grammar.box property)": [[34, "lambeq.backend.grammar.Box.l", false]], "l (lambeq.backend.grammar.cap property)": [[34, "lambeq.backend.grammar.Cap.l", false]], "l (lambeq.backend.grammar.cup property)": [[34, "lambeq.backend.grammar.Cup.l", false]], "l (lambeq.backend.grammar.daggered property)": [[34, "lambeq.backend.grammar.Daggered.l", false]], "l (lambeq.backend.grammar.diagram property)": [[34, "lambeq.backend.grammar.Diagram.l", false]], "l (lambeq.backend.grammar.spider property)": [[34, "lambeq.backend.grammar.Spider.l", false]], "l (lambeq.backend.grammar.swap property)": [[34, "lambeq.backend.grammar.Swap.l", false]], "l (lambeq.backend.grammar.ty property)": [[34, "lambeq.backend.grammar.Ty.l", false]], "l (lambeq.backend.grammar.word property)": [[34, "lambeq.backend.grammar.Word.l", false]], "l (lambeq.backend.quantum.anticonjugate property)": [[34, "lambeq.backend.quantum.AntiConjugate.l", false]], "l (lambeq.backend.quantum.bit property)": [[34, "lambeq.backend.quantum.Bit.l", false]], "l (lambeq.backend.quantum.box property)": [[34, "lambeq.backend.quantum.Box.l", false]], "l (lambeq.backend.quantum.bra property)": [[34, "lambeq.backend.quantum.Bra.l", false]], "l (lambeq.backend.quantum.controlled property)": [[34, "lambeq.backend.quantum.Controlled.l", false]], "l (lambeq.backend.quantum.daggered property)": [[34, "lambeq.backend.quantum.Daggered.l", false]], "l (lambeq.backend.quantum.diagram property)": [[34, "lambeq.backend.quantum.Diagram.l", false]], "l (lambeq.backend.quantum.discard property)": [[34, "lambeq.backend.quantum.Discard.l", false]], "l (lambeq.backend.quantum.encode property)": [[34, "lambeq.backend.quantum.Encode.l", false]], "l (lambeq.backend.quantum.ket property)": [[34, "lambeq.backend.quantum.Ket.l", false]], "l (lambeq.backend.quantum.measure property)": [[34, "lambeq.backend.quantum.Measure.l", false]], "l (lambeq.backend.quantum.mixedstate property)": [[34, "lambeq.backend.quantum.MixedState.l", false]], "l (lambeq.backend.quantum.parametrized property)": [[34, "lambeq.backend.quantum.Parametrized.l", false]], "l (lambeq.backend.quantum.rotation property)": [[34, "lambeq.backend.quantum.Rotation.l", false]], "l (lambeq.backend.quantum.rx property)": [[34, "lambeq.backend.quantum.Rx.l", false]], "l (lambeq.backend.quantum.ry property)": [[34, "lambeq.backend.quantum.Ry.l", false]], "l (lambeq.backend.quantum.rz property)": [[34, "lambeq.backend.quantum.Rz.l", false]], "l (lambeq.backend.quantum.scalar property)": [[34, "lambeq.backend.quantum.Scalar.l", false]], "l (lambeq.backend.quantum.selfconjugate property)": [[34, "lambeq.backend.quantum.SelfConjugate.l", false]], "l (lambeq.backend.quantum.sqrt property)": [[34, "lambeq.backend.quantum.Sqrt.l", false]], "l (lambeq.backend.quantum.swap property)": [[34, "lambeq.backend.quantum.Swap.l", false]], "l (lambeq.backend.quantum.ty property)": [[34, "lambeq.backend.quantum.Ty.l", false]], "l (lambeq.backend.tensor.box property)": [[34, "lambeq.backend.tensor.Box.l", false]], "l (lambeq.backend.tensor.cap property)": [[34, "lambeq.backend.tensor.Cap.l", false]], "l (lambeq.backend.tensor.cup property)": [[34, "lambeq.backend.tensor.Cup.l", false]], "l (lambeq.backend.tensor.daggered property)": [[34, "lambeq.backend.tensor.Daggered.l", false]], "l (lambeq.backend.tensor.diagram property)": [[34, "lambeq.backend.tensor.Diagram.l", false]], "l (lambeq.backend.tensor.dim property)": [[34, "lambeq.backend.tensor.Dim.l", false]], "l (lambeq.backend.tensor.spider property)": [[34, "lambeq.backend.tensor.Spider.l", false]], "l (lambeq.backend.tensor.swap property)": [[34, "lambeq.backend.tensor.Swap.l", false]], "lambdas (lambeq.numpymodel attribute)": [[53, "lambeq.NumpyModel.lambdas", false]], "lambdify() (lambeq.backend.quantum.anticonjugate method)": [[34, "lambeq.backend.quantum.AntiConjugate.lambdify", false]], "lambdify() (lambeq.backend.quantum.bit method)": [[34, "lambeq.backend.quantum.Bit.lambdify", false]], "lambdify() (lambeq.backend.quantum.box method)": [[34, "lambeq.backend.quantum.Box.lambdify", false]], "lambdify() (lambeq.backend.quantum.bra method)": [[34, "lambeq.backend.quantum.Bra.lambdify", false]], "lambdify() (lambeq.backend.quantum.controlled method)": [[34, "lambeq.backend.quantum.Controlled.lambdify", false]], "lambdify() (lambeq.backend.quantum.daggered method)": [[34, "lambeq.backend.quantum.Daggered.lambdify", false]], "lambdify() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.lambdify", false]], "lambdify() (lambeq.backend.quantum.discard method)": [[34, "lambeq.backend.quantum.Discard.lambdify", false]], "lambdify() (lambeq.backend.quantum.encode method)": [[34, "lambeq.backend.quantum.Encode.lambdify", false]], "lambdify() (lambeq.backend.quantum.ket method)": [[34, "lambeq.backend.quantum.Ket.lambdify", false]], "lambdify() (lambeq.backend.quantum.measure method)": [[34, "lambeq.backend.quantum.Measure.lambdify", false]], "lambdify() (lambeq.backend.quantum.mixedstate method)": [[34, "lambeq.backend.quantum.MixedState.lambdify", false]], "lambdify() (lambeq.backend.quantum.parametrized method)": [[34, "lambeq.backend.quantum.Parametrized.lambdify", false]], "lambdify() (lambeq.backend.quantum.rotation method)": [[34, "lambeq.backend.quantum.Rotation.lambdify", false]], "lambdify() (lambeq.backend.quantum.rx method)": [[34, "lambeq.backend.quantum.Rx.lambdify", false]], "lambdify() (lambeq.backend.quantum.ry method)": [[34, "lambeq.backend.quantum.Ry.lambdify", false]], "lambdify() (lambeq.backend.quantum.rz method)": [[34, "lambeq.backend.quantum.Rz.lambdify", false]], "lambdify() (lambeq.backend.quantum.scalar method)": [[34, "lambeq.backend.quantum.Scalar.lambdify", false]], "lambdify() (lambeq.backend.quantum.selfconjugate method)": [[34, "lambeq.backend.quantum.SelfConjugate.lambdify", false]], "lambdify() (lambeq.backend.quantum.sqrt method)": [[34, "lambeq.backend.quantum.Sqrt.lambdify", false]], "lambdify() (lambeq.backend.quantum.swap method)": [[34, "lambeq.backend.quantum.Swap.lambdify", false]], "lambdify() (lambeq.backend.tensor.box method)": [[34, "lambeq.backend.tensor.Box.lambdify", false]], "lambdify() (lambeq.backend.tensor.cap method)": [[34, "lambeq.backend.tensor.Cap.lambdify", false]], "lambdify() (lambeq.backend.tensor.cup method)": [[34, "lambeq.backend.tensor.Cup.lambdify", false]], "lambdify() (lambeq.backend.tensor.daggered method)": [[34, "lambeq.backend.tensor.Daggered.lambdify", false]], "lambdify() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.lambdify", false]], "lambdify() (lambeq.backend.tensor.spider method)": [[34, "lambeq.backend.tensor.Spider.lambdify", false]], "lambdify() (lambeq.backend.tensor.swap method)": [[34, "lambeq.backend.tensor.Swap.lambdify", false]], "lambeq": [[53, "module-lambeq", false]], "lambeq.ansatz": [[33, "module-lambeq.ansatz", false]], "lambeq.backend.converters.discopy": [[34, "module-lambeq.backend.converters.discopy", false]], "lambeq.backend.converters.tk": [[34, "module-lambeq.backend.converters.tk", false]], "lambeq.backend.drawing": [[34, "module-lambeq.backend.drawing", false]], "lambeq.backend.grammar": [[34, "module-lambeq.backend.grammar", false]], "lambeq.backend.numerical_backend": [[34, "module-lambeq.backend.numerical_backend", false]], "lambeq.backend.pennylane": [[34, "module-lambeq.backend.pennylane", false]], "lambeq.backend.quantum": [[34, "module-lambeq.backend.quantum", false]], "lambeq.backend.snake_removal": [[34, "module-lambeq.backend.snake_removal", false]], "lambeq.backend.tensor": [[34, "module-lambeq.backend.tensor", false]], "lambeq.bobcat": [[35, "module-lambeq.bobcat", false]], "lambeq.rewrite": [[36, "module-lambeq.rewrite", false]], "lambeq.text2diagram": [[37, "module-lambeq.text2diagram", false]], "lambeq.tokeniser": [[38, "module-lambeq.tokeniser", false]], "lambeq.training": [[39, "module-lambeq.training", false]], "layer (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Layer", false]], "layer (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Layer", false]], "layer (class in lambeq.backend.tensor)": [[34, "lambeq.backend.tensor.Layer", false]], "layer (lambeq.backend.grammar.category attribute)": [[34, "lambeq.backend.grammar.Category.Layer", false]], "layers (lambeq.backend.grammar.diagram attribute)": [[34, "lambeq.backend.grammar.Diagram.layers", false]], "layers (lambeq.backend.quantum.diagram attribute)": [[34, "lambeq.backend.quantum.Diagram.layers", false]], "layers (lambeq.backend.tensor.diagram attribute)": [[34, "lambeq.backend.tensor.Diagram.layers", false]], "left (lambeq.backend.grammar.cap attribute)": [[34, "lambeq.backend.grammar.Cap.left", false]], "left (lambeq.backend.grammar.cup attribute)": [[34, "lambeq.backend.grammar.Cup.left", false]], "left (lambeq.backend.grammar.layer attribute)": [[34, "lambeq.backend.grammar.Layer.left", false]], "left (lambeq.backend.grammar.swap attribute)": [[34, "lambeq.backend.grammar.Swap.left", false]], "left (lambeq.backend.quantum.layer attribute)": [[34, "lambeq.backend.quantum.Layer.left", false]], "left (lambeq.backend.quantum.swap attribute)": [[34, "lambeq.backend.quantum.Swap.left", false]], "left (lambeq.backend.tensor.cap attribute)": [[34, "lambeq.backend.tensor.Cap.left", false]], "left (lambeq.backend.tensor.cup attribute)": [[34, "lambeq.backend.tensor.Cup.left", false]], "left (lambeq.backend.tensor.layer attribute)": [[34, "lambeq.backend.tensor.Layer.left", false]], "left (lambeq.backend.tensor.swap attribute)": [[34, "lambeq.backend.tensor.Swap.left", false]], "left (lambeq.bobcat.parsetree attribute)": [[35, "lambeq.bobcat.ParseTree.left", false]], "left (lambeq.ccgtree property)": [[53, "lambeq.CCGTree.left", false]], "left (lambeq.ccgtype property)": [[53, "lambeq.CCGType.left", false]], "left (lambeq.text2diagram.ccgtree property)": [[37, "lambeq.text2diagram.CCGTree.left", false]], "left (lambeq.text2diagram.ccgtype property)": [[37, "lambeq.text2diagram.CCGType.left", false]], "lexical (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.LEXICAL", false]], "lexical (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.LEXICAL", false]], "lift() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.lift", false]], "lift() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.lift", false]], "lift() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.lift", false]], "linearreader (class in lambeq)": [[53, "lambeq.LinearReader", false]], "linearreader (class in lambeq.text2diagram)": [[37, "lambeq.text2diagram.LinearReader", false]], "ljust() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.ljust", false]], "load() (lambeq.bobcat.grammar class method)": [[35, "lambeq.bobcat.Grammar.load", false]], "load() (lambeq.model method)": [[53, "lambeq.Model.load", false]], "load() (lambeq.training.model method)": [[39, "lambeq.training.Model.load", false]], "load() (lambeq.training.numpymodel method)": [[39, "lambeq.training.NumpyModel.load", false]], "load() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.load", false]], "load() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.load", false]], "load() (lambeq.training.quantummodel method)": [[39, "lambeq.training.QuantumModel.load", false]], "load() (lambeq.training.tketmodel method)": [[39, "lambeq.training.TketModel.load", false]], "load_adapter() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.load_adapter", false]], "load_state_dict() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.load_state_dict", false]], "load_state_dict() (lambeq.neldermeadoptimizer method)": [[53, "lambeq.NelderMeadOptimizer.load_state_dict", false]], "load_state_dict() (lambeq.optimizer method)": [[53, "lambeq.Optimizer.load_state_dict", false]], "load_state_dict() (lambeq.rotosolveoptimizer method)": [[53, "lambeq.RotosolveOptimizer.load_state_dict", false]], "load_state_dict() (lambeq.spsaoptimizer method)": [[53, "lambeq.SPSAOptimizer.load_state_dict", false]], "load_state_dict() (lambeq.training.neldermeadoptimizer method)": [[39, "lambeq.training.NelderMeadOptimizer.load_state_dict", false]], "load_state_dict() (lambeq.training.optimizer method)": [[39, "lambeq.training.Optimizer.load_state_dict", false]], "load_state_dict() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.load_state_dict", false]], "load_state_dict() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.load_state_dict", false]], "load_state_dict() (lambeq.training.rotosolveoptimizer method)": [[39, "lambeq.training.RotosolveOptimizer.load_state_dict", false]], "load_state_dict() (lambeq.training.spsaoptimizer method)": [[39, "lambeq.training.SPSAOptimizer.load_state_dict", false]], "load_tf_weights() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.load_tf_weights", false]], "load_training_checkpoint() (lambeq.trainer method)": [[53, "lambeq.Trainer.load_training_checkpoint", false]], "load_training_checkpoint() (lambeq.training.pytorchtrainer method)": [[39, "lambeq.training.PytorchTrainer.load_training_checkpoint", false]], "load_training_checkpoint() (lambeq.training.quantumtrainer method)": [[39, "lambeq.training.QuantumTrainer.load_training_checkpoint", false]], "load_training_checkpoint() (lambeq.training.trainer method)": [[39, "lambeq.training.Trainer.load_training_checkpoint", false]], "loss function": [[29, "term-loss-function", true]], "lossfunction (class in lambeq)": [[53, "lambeq.LossFunction", false]], "lossfunction (class in lambeq.training)": [[39, "lambeq.training.LossFunction", false]], "lower() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.lower", false]], "lstrip() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.lstrip", false]], "main_input_name (lambeq.bobcat.bertforchartclassification attribute)": [[35, "lambeq.bobcat.BertForChartClassification.main_input_name", false]], "make_circuit() (lambeq.backend.pennylane.pennylanecircuit method)": [[34, "lambeq.backend.pennylane.PennyLaneCircuit.make_circuit", false]], "maketrans() (lambeq.text2diagram.ccgrule static method)": [[37, "lambeq.text2diagram.CCGRule.maketrans", false]], "matches() (lambeq.bobcat.category method)": [[35, "lambeq.bobcat.Category.matches", false]], "matches() (lambeq.coordinationrewriterule method)": [[53, "lambeq.CoordinationRewriteRule.matches", false]], "matches() (lambeq.curryrewriterule method)": [[53, "lambeq.CurryRewriteRule.matches", false]], "matches() (lambeq.diagramrewriter method)": [[53, "lambeq.DiagramRewriter.matches", false]], "matches() (lambeq.removecupsrewriter method)": [[53, "lambeq.RemoveCupsRewriter.matches", false]], "matches() (lambeq.removeswapsrewriter method)": [[53, "lambeq.RemoveSwapsRewriter.matches", false]], "matches() (lambeq.rewrite.coordinationrewriterule method)": [[36, "lambeq.rewrite.CoordinationRewriteRule.matches", false]], "matches() (lambeq.rewrite.curryrewriterule method)": [[36, "lambeq.rewrite.CurryRewriteRule.matches", false]], "matches() (lambeq.rewrite.diagramrewriter method)": [[36, "lambeq.rewrite.DiagramRewriter.matches", false]], "matches() (lambeq.rewrite.removecupsrewriter method)": [[36, "lambeq.rewrite.RemoveCupsRewriter.matches", false]], "matches() (lambeq.rewrite.removeswapsrewriter method)": [[36, "lambeq.rewrite.RemoveSwapsRewriter.matches", false]], "matches() (lambeq.rewrite.rewriterule method)": [[36, "lambeq.rewrite.RewriteRule.matches", false]], "matches() (lambeq.rewrite.simplerewriterule method)": [[36, "lambeq.rewrite.SimpleRewriteRule.matches", false]], "matches() (lambeq.rewrite.unifycodomainrewriter method)": [[36, "lambeq.rewrite.UnifyCodomainRewriter.matches", false]], "matches() (lambeq.rewrite.unknownwordsrewriterule method)": [[36, "lambeq.rewrite.UnknownWordsRewriteRule.matches", false]], "matches() (lambeq.rewriterule method)": [[53, "lambeq.RewriteRule.matches", false]], "matches() (lambeq.simplerewriterule method)": [[53, "lambeq.SimpleRewriteRule.matches", false]], "matches() (lambeq.unifycodomainrewriter method)": [[53, "lambeq.UnifyCodomainRewriter.matches", false]], "matches() (lambeq.unknownwordsrewriterule method)": [[53, "lambeq.UnknownWordsRewriteRule.matches", false]], "matrix product state (mps)": [[29, "term-matrix-product-state-MPS", true]], "measure (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Measure", false]], "measure() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.Measure", false]], "measure_all() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.measure_all", false]], "measure_register() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.measure_register", false]], "mixedstate (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.MixedState", false]], "model": [[29, "term-model", true]], "model (class in lambeq)": [[53, "lambeq.Model", false]], "model (class in lambeq.training)": [[39, "lambeq.training.Model", false]], "model (lambeq.neldermeadoptimizer attribute)": [[53, "lambeq.NelderMeadOptimizer.model", false]], "model (lambeq.pytorchtrainer attribute)": [[53, "lambeq.PytorchTrainer.model", false]], "model (lambeq.quantumtrainer attribute)": [[53, "lambeq.QuantumTrainer.model", false]], "model (lambeq.rotosolveoptimizer attribute)": [[53, "lambeq.RotosolveOptimizer.model", false]], "model (lambeq.spsaoptimizer attribute)": [[53, "lambeq.SPSAOptimizer.model", false]], "model (lambeq.training.neldermeadoptimizer attribute)": [[39, "lambeq.training.NelderMeadOptimizer.model", false]], "model (lambeq.training.pytorchtrainer attribute)": [[39, "lambeq.training.PytorchTrainer.model", false]], "model (lambeq.training.quantumtrainer attribute)": [[39, "lambeq.training.QuantumTrainer.model", false]], "model (lambeq.training.rotosolveoptimizer attribute)": [[39, "lambeq.training.RotosolveOptimizer.model", false]], "model (lambeq.training.spsaoptimizer attribute)": [[39, "lambeq.training.SPSAOptimizer.model", false]], "model_tags (lambeq.bobcat.bertforchartclassification attribute)": [[35, "lambeq.bobcat.BertForChartClassification.model_tags", false]], "module": [[33, "module-lambeq.ansatz", false], [34, "module-lambeq.backend.converters.discopy", false], [34, "module-lambeq.backend.converters.tk", false], [34, "module-lambeq.backend.drawing", false], [34, "module-lambeq.backend.grammar", false], [34, "module-lambeq.backend.numerical_backend", false], [34, "module-lambeq.backend.pennylane", false], [34, "module-lambeq.backend.quantum", false], [34, "module-lambeq.backend.snake_removal", false], [34, "module-lambeq.backend.tensor", false], [35, "module-lambeq.bobcat", false], [36, "module-lambeq.rewrite", false], [37, "module-lambeq.text2diagram", false], [38, "module-lambeq.tokeniser", false], [39, "module-lambeq.training", false], [53, "module-lambeq", false]], "modules (lambeq.backend.quantum.controlled property)": [[34, "lambeq.backend.quantum.Controlled.modules", false]], "modules (lambeq.backend.quantum.parametrized property)": [[34, "lambeq.backend.quantum.Parametrized.modules", false]], "modules (lambeq.backend.quantum.rotation property)": [[34, "lambeq.backend.quantum.Rotation.modules", false]], "modules (lambeq.backend.quantum.rx property)": [[34, "lambeq.backend.quantum.Rx.modules", false]], "modules (lambeq.backend.quantum.ry property)": [[34, "lambeq.backend.quantum.Ry.modules", false]], "modules (lambeq.backend.quantum.rz property)": [[34, "lambeq.backend.quantum.Rz.modules", false]], "modules() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.modules", false]], "modules() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.modules", false]], "modules() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.modules", false]], "monoidal category": [[29, "term-monoidal-category", true]], "mpsansatz (class in lambeq)": [[53, "lambeq.MPSAnsatz", false]], "mpsansatz (class in lambeq.ansatz)": [[33, "lambeq.ansatz.MPSAnsatz", false]], "mseloss (class in lambeq)": [[53, "lambeq.MSELoss", false]], "mseloss (class in lambeq.training)": [[39, "lambeq.training.MSELoss", false]], "n_1qb_gates() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.n_1qb_gates", false]], "n_2qb_gates() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.n_2qb_gates", false]], "n_bits (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.n_bits", false]], "n_gates (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.n_gates", false]], "n_gates_of_type() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.n_gates_of_type", false]], "n_legs_in (lambeq.backend.grammar.spider attribute)": [[34, "lambeq.backend.grammar.Spider.n_legs_in", false]], "n_legs_in (lambeq.backend.quantum.swap attribute)": [[34, "lambeq.backend.quantum.Swap.n_legs_in", false]], "n_legs_in (lambeq.backend.tensor.spider attribute)": [[34, "lambeq.backend.tensor.Spider.n_legs_in", false]], "n_legs_out (lambeq.backend.grammar.spider attribute)": [[34, "lambeq.backend.grammar.Spider.n_legs_out", false]], "n_legs_out (lambeq.backend.quantum.swap attribute)": [[34, "lambeq.backend.quantum.Swap.n_legs_out", false]], "n_legs_out (lambeq.backend.tensor.spider attribute)": [[34, "lambeq.backend.tensor.Spider.n_legs_out", false]], "n_nqb_gates() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.n_nqb_gates", false]], "n_qubits (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.n_qubits", false]], "name (lambeq.ansatz.symbol attribute)": [[33, "lambeq.ansatz.Symbol.name", false]], "name (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.name", false]], "name (lambeq.backend.grammar.box attribute)": [[34, "lambeq.backend.grammar.Box.name", false]], "name (lambeq.backend.grammar.cap attribute)": [[34, "lambeq.backend.grammar.Cap.name", false]], "name (lambeq.backend.grammar.category attribute)": [[34, "lambeq.backend.grammar.Category.name", false]], "name (lambeq.backend.grammar.cup attribute)": [[34, "lambeq.backend.grammar.Cup.name", false]], "name (lambeq.backend.grammar.daggered attribute)": [[34, "lambeq.backend.grammar.Daggered.name", false]], "name (lambeq.backend.grammar.spider attribute)": [[34, "lambeq.backend.grammar.Spider.name", false]], "name (lambeq.backend.grammar.swap attribute)": [[34, "lambeq.backend.grammar.Swap.name", false]], "name (lambeq.backend.grammar.ty attribute)": [[34, "lambeq.backend.grammar.Ty.name", false]], "name (lambeq.backend.grammar.word attribute)": [[34, "lambeq.backend.grammar.Word.name", false]], "name (lambeq.backend.numerical_backend.backend property)": [[34, "lambeq.backend.numerical_backend.Backend.name", false]], "name (lambeq.backend.numerical_backend.jax property)": [[34, "lambeq.backend.numerical_backend.JAX.name", false]], "name (lambeq.backend.numerical_backend.numpy property)": [[34, "lambeq.backend.numerical_backend.NumPy.name", false]], "name (lambeq.backend.numerical_backend.pytorch property)": [[34, "lambeq.backend.numerical_backend.PyTorch.name", false]], "name (lambeq.backend.numerical_backend.tensorflow property)": [[34, "lambeq.backend.numerical_backend.TensorFlow.name", false]], "name (lambeq.backend.quantum.anticonjugate attribute)": [[34, "lambeq.backend.quantum.AntiConjugate.name", false]], "name (lambeq.backend.quantum.bit attribute)": [[34, "lambeq.backend.quantum.Bit.name", false]], "name (lambeq.backend.quantum.box attribute)": [[34, "lambeq.backend.quantum.Box.name", false]], "name (lambeq.backend.quantum.bra attribute)": [[34, "lambeq.backend.quantum.Bra.name", false]], "name (lambeq.backend.quantum.controlled attribute)": [[34, "lambeq.backend.quantum.Controlled.name", false]], "name (lambeq.backend.quantum.daggered attribute)": [[34, "lambeq.backend.quantum.Daggered.name", false]], "name (lambeq.backend.quantum.discard attribute)": [[34, "lambeq.backend.quantum.Discard.name", false]], "name (lambeq.backend.quantum.encode attribute)": [[34, "lambeq.backend.quantum.Encode.name", false]], "name (lambeq.backend.quantum.ket attribute)": [[34, "lambeq.backend.quantum.Ket.name", false]], "name (lambeq.backend.quantum.measure attribute)": [[34, "lambeq.backend.quantum.Measure.name", false]], "name (lambeq.backend.quantum.mixedstate attribute)": [[34, "lambeq.backend.quantum.MixedState.name", false]], "name (lambeq.backend.quantum.parametrized attribute)": [[34, "lambeq.backend.quantum.Parametrized.name", false]], "name (lambeq.backend.quantum.rotation attribute)": [[34, "lambeq.backend.quantum.Rotation.name", false]], "name (lambeq.backend.quantum.rx attribute)": [[34, "lambeq.backend.quantum.Rx.name", false]], "name (lambeq.backend.quantum.ry attribute)": [[34, "lambeq.backend.quantum.Ry.name", false]], "name (lambeq.backend.quantum.rz attribute)": [[34, "lambeq.backend.quantum.Rz.name", false]], "name (lambeq.backend.quantum.scalar attribute)": [[34, "lambeq.backend.quantum.Scalar.name", false]], "name (lambeq.backend.quantum.selfconjugate attribute)": [[34, "lambeq.backend.quantum.SelfConjugate.name", false]], "name (lambeq.backend.quantum.sqrt attribute)": [[34, "lambeq.backend.quantum.Sqrt.name", false]], "name (lambeq.backend.quantum.swap attribute)": [[34, "lambeq.backend.quantum.Swap.name", false]], "name (lambeq.backend.quantum.ty attribute)": [[34, "lambeq.backend.quantum.Ty.name", false]], "name (lambeq.backend.tensor.box attribute)": [[34, "lambeq.backend.tensor.Box.name", false]], "name (lambeq.backend.tensor.cap attribute)": [[34, "lambeq.backend.tensor.Cap.name", false]], "name (lambeq.backend.tensor.cup attribute)": [[34, "lambeq.backend.tensor.Cup.name", false]], "name (lambeq.backend.tensor.daggered attribute)": [[34, "lambeq.backend.tensor.Daggered.name", false]], "name (lambeq.backend.tensor.dim attribute)": [[34, "lambeq.backend.tensor.Dim.name", false]], "name (lambeq.backend.tensor.spider attribute)": [[34, "lambeq.backend.tensor.Spider.name", false]], "name (lambeq.backend.tensor.swap attribute)": [[34, "lambeq.backend.tensor.Swap.name", false]], "name (lambeq.ccgtype property)": [[53, "lambeq.CCGType.name", false]], "name (lambeq.symbol attribute)": [[53, "lambeq.Symbol.name", false]], "name (lambeq.text2diagram.ccgtype property)": [[37, "lambeq.text2diagram.CCGType.name", false]], "named_buffers() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.named_buffers", false]], "named_buffers() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.named_buffers", false]], "named_buffers() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.named_buffers", false]], "named_children() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.named_children", false]], "named_children() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.named_children", false]], "named_children() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.named_children", false]], "named_modules() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.named_modules", false]], "named_modules() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.named_modules", false]], "named_modules() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.named_modules", false]], "named_parameters() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.named_parameters", false]], "named_parameters() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.named_parameters", false]], "named_parameters() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.named_parameters", false]], "natural language processing (nlp)": [[29, "term-natural-language-processing-NLP", true]], "neldermeadoptimizer (class in lambeq)": [[53, "lambeq.NelderMeadOptimizer", false]], "neldermeadoptimizer (class in lambeq.training)": [[39, "lambeq.training.NelderMeadOptimizer", false]], "nisq": [[29, "term-NISQ", true]], "no_type": [[37, "term-NO_TYPE", true], [53, "term-NO_TYPE", true]], "no_type (lambeq.text2diagram.treereadermode attribute)": [[37, "lambeq.text2diagram.TreeReaderMode.NO_TYPE", false]], "no_type (lambeq.treereadermode attribute)": [[53, "lambeq.TreeReaderMode.NO_TYPE", false]], "noise": [[29, "term-noise", true]], "normal_form() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.normal_form", false]], "normal_form() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.normal_form", false]], "normal_form() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.normal_form", false]], "normalize() (in module lambeq.backend.snake_removal)": [[34, "lambeq.backend.snake_removal.normalize", false]], "noun (lambeq.atomictype attribute)": [[53, "lambeq.AtomicType.NOUN", false]], "noun (lambeq.ccgtype attribute)": [[53, "lambeq.CCGType.NOUN", false]], "noun (lambeq.text2diagram.ccgtype attribute)": [[37, "lambeq.text2diagram.CCGType.NOUN", false]], "noun_phrase (lambeq.atomictype attribute)": [[53, "lambeq.AtomicType.NOUN_PHRASE", false]], "noun_phrase (lambeq.ccgtype attribute)": [[53, "lambeq.CCGType.NOUN_PHRASE", false]], "noun_phrase (lambeq.text2diagram.ccgtype attribute)": [[37, "lambeq.text2diagram.CCGType.NOUN_PHRASE", false]], "num_parameters() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.num_parameters", false]], "numpy (class in lambeq.backend.numerical_backend)": [[34, "lambeq.backend.numerical_backend.NumPy", false]], "numpymodel (class in lambeq)": [[53, "lambeq.NumpyModel", false]], "numpymodel (class in lambeq.training)": [[39, "lambeq.training.NumpyModel", false]], "ob() (lambeq.backend.grammar.functor method)": [[34, "lambeq.backend.grammar.Functor.ob", false]], "ob_size() (lambeq.ansatz.circuitansatz method)": [[33, "lambeq.ansatz.CircuitAnsatz.ob_size", false]], "ob_size() (lambeq.circuitansatz method)": [[53, "lambeq.CircuitAnsatz.ob_size", false]], "ob_with_cache() (lambeq.backend.grammar.functor method)": [[34, "lambeq.backend.grammar.Functor.ob_with_cache", false]], "objective() (lambeq.neldermeadoptimizer method)": [[53, "lambeq.NelderMeadOptimizer.objective", false]], "objective() (lambeq.training.neldermeadoptimizer method)": [[39, "lambeq.training.NelderMeadOptimizer.objective", false]], "objects (lambeq.backend.grammar.ty attribute)": [[34, "lambeq.backend.grammar.Ty.objects", false]], "objects (lambeq.backend.quantum.ty attribute)": [[34, "lambeq.backend.quantum.Ty.objects", false]], "objects (lambeq.backend.tensor.dim attribute)": [[34, "lambeq.backend.tensor.Dim.objects", false]], "offsets (lambeq.backend.grammar.diagram property)": [[34, "lambeq.backend.grammar.Diagram.offsets", false]], "offsets (lambeq.backend.quantum.diagram property)": [[34, "lambeq.backend.quantum.Diagram.offsets", false]], "offsets (lambeq.backend.tensor.diagram property)": [[34, "lambeq.backend.tensor.Diagram.offsets", false]], "opgroups (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.opgroups", false]], "ops_of_type() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.ops_of_type", false]], "optimizer (class in lambeq)": [[53, "lambeq.Optimizer", false]], "optimizer (class in lambeq.training)": [[39, "lambeq.training.Optimizer", false]], "output_type (lambeq.rewrite.unifycodomainrewriter attribute)": [[36, "lambeq.rewrite.UnifyCodomainRewriter.output_type", false]], "output_type (lambeq.unifycodomainrewriter attribute)": [[53, "lambeq.UnifyCodomainRewriter.output_type", false]], "over() (lambeq.ccgtype method)": [[53, "lambeq.CCGType.over", false]], "over() (lambeq.text2diagram.ccgtype method)": [[37, "lambeq.text2diagram.CCGType.over", false]], "param_substitution() (lambeq.backend.pennylane.pennylanecircuit method)": [[34, "lambeq.backend.pennylane.PennyLaneCircuit.param_substitution", false]], "parameters() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.parameters", false]], "parameters() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.parameters", false]], "parameters() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.parameters", false]], "parametrized (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Parametrized", false]], "params_shape() (lambeq.ansatz.circuitansatz method)": [[33, "lambeq.ansatz.CircuitAnsatz.params_shape", false]], "params_shape() (lambeq.ansatz.iqpansatz method)": [[33, "lambeq.ansatz.IQPAnsatz.params_shape", false]], "params_shape() (lambeq.ansatz.sim14ansatz method)": [[33, "lambeq.ansatz.Sim14Ansatz.params_shape", false]], "params_shape() (lambeq.ansatz.sim15ansatz method)": [[33, "lambeq.ansatz.Sim15Ansatz.params_shape", false]], "params_shape() (lambeq.ansatz.sim4ansatz method)": [[33, "lambeq.ansatz.Sim4Ansatz.params_shape", false]], "params_shape() (lambeq.ansatz.stronglyentanglingansatz method)": [[33, "lambeq.ansatz.StronglyEntanglingAnsatz.params_shape", false]], "params_shape() (lambeq.circuitansatz method)": [[53, "lambeq.CircuitAnsatz.params_shape", false]], "params_shape() (lambeq.iqpansatz method)": [[53, "lambeq.IQPAnsatz.params_shape", false]], "params_shape() (lambeq.sim14ansatz method)": [[53, "lambeq.Sim14Ansatz.params_shape", false]], "params_shape() (lambeq.sim15ansatz method)": [[53, "lambeq.Sim15Ansatz.params_shape", false]], "params_shape() (lambeq.sim4ansatz method)": [[53, "lambeq.Sim4Ansatz.params_shape", false]], "params_shape() (lambeq.stronglyentanglingansatz method)": [[53, "lambeq.StronglyEntanglingAnsatz.params_shape", false]], "parse() (lambeq.bobcat.category static method)": [[35, "lambeq.bobcat.Category.parse", false]], "parse() (lambeq.bobcat.tagger method)": [[35, "lambeq.bobcat.Tagger.parse", false]], "parse() (lambeq.ccgtype class method)": [[53, "lambeq.CCGType.parse", false]], "parse() (lambeq.text2diagram.ccgtype class method)": [[37, "lambeq.text2diagram.CCGType.parse", false]], "parser": [[29, "term-parser", true]], "parsetree (class in lambeq.bobcat)": [[35, "lambeq.bobcat.ParseTree", false]], "partition() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.partition", false]], "pennylane": [[29, "term-PennyLane", true]], "pennylanecircuit (class in lambeq.backend.pennylane)": [[34, "lambeq.backend.pennylane.PennyLaneCircuit", false]], "pennylanemodel (class in lambeq)": [[53, "lambeq.PennyLaneModel", false]], "pennylanemodel (class in lambeq.training)": [[39, "lambeq.training.PennyLaneModel", false]], "permutation() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.permutation", false]], "permutation() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.permutation", false]], "permutation() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.permutation", false]], "permuted() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.permuted", false]], "permuted() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.permuted", false]], "permuted() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.permuted", false]], "phase (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.phase", false]], "phase (lambeq.backend.quantum.controlled property)": [[34, "lambeq.backend.quantum.Controlled.phase", false]], "phase (lambeq.backend.quantum.rotation property)": [[34, "lambeq.backend.quantum.Rotation.phase", false]], "phase (lambeq.backend.quantum.rx property)": [[34, "lambeq.backend.quantum.Rx.phase", false]], "phase (lambeq.backend.quantum.ry property)": [[34, "lambeq.backend.quantum.Ry.phase", false]], "phase (lambeq.backend.quantum.rz property)": [[34, "lambeq.backend.quantum.Rz.phase", false]], "phase() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.Phase", false]], "phasediswap() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.PhasedISWAP", false]], "phasedx() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.PhasedX", false]], "placeholder() (lambeq.rewrite.simplerewriterule class method)": [[36, "lambeq.rewrite.SimpleRewriteRule.placeholder", false]], "placeholder() (lambeq.simplerewriterule class method)": [[53, "lambeq.SimpleRewriteRule.placeholder", false]], "post-selection": [[29, "term-post-selection", true]], "post_init() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.post_init", false]], "post_process() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.post_process", false]], "post_select() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.post_select", false]], "post_selected_circuit() (lambeq.backend.pennylane.pennylanecircuit method)": [[34, "lambeq.backend.pennylane.PennyLaneCircuit.post_selected_circuit", false]], "pregroup grammar": [[29, "term-pregroup-grammar", true]], "pregroup_normal_form() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.pregroup_normal_form", false]], "pregroup_normal_form() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.pregroup_normal_form", false]], "pregroup_normal_form() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.pregroup_normal_form", false]], "prepare_inputs() (lambeq.bobcat.tagger method)": [[35, "lambeq.bobcat.Tagger.prepare_inputs", false]], "prepare_inputs_for_generation() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.prepare_inputs_for_generation", false]], "prepositional_phrase (lambeq.atomictype attribute)": [[53, "lambeq.AtomicType.PREPOSITIONAL_PHRASE", false]], "prepositional_phrase (lambeq.ccgtype attribute)": [[53, "lambeq.CCGType.PREPOSITIONAL_PHRASE", false]], "prepositional_phrase (lambeq.text2diagram.ccgtype attribute)": [[37, "lambeq.text2diagram.CCGType.PREPOSITIONAL_PHRASE", false]], "probability (lambeq.bobcat.supertag attribute)": [[35, "lambeq.bobcat.Supertag.probability", false]], "product (lambeq.backend.quantum.ty property)": [[34, "lambeq.backend.quantum.Ty.product", false]], "product (lambeq.backend.tensor.dim property)": [[34, "lambeq.backend.tensor.Dim.product", false]], "progress (lambeq.verbositylevel attribute)": [[53, "lambeq.VerbosityLevel.PROGRESS", false]], "project (lambeq.spsaoptimizer attribute)": [[53, "lambeq.SPSAOptimizer.project", false]], "project() (lambeq.neldermeadoptimizer method)": [[53, "lambeq.NelderMeadOptimizer.project", false]], "project() (lambeq.rotosolveoptimizer static method)": [[53, "lambeq.RotosolveOptimizer.project", false]], "project() (lambeq.training.neldermeadoptimizer method)": [[39, "lambeq.training.NelderMeadOptimizer.project", false]], "project() (lambeq.training.rotosolveoptimizer static method)": [[39, "lambeq.training.RotosolveOptimizer.project", false]], "prune_heads() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.prune_heads", false]], "punctuation (lambeq.atomictype attribute)": [[53, "lambeq.AtomicType.PUNCTUATION", false]], "punctuation (lambeq.ccgtype attribute)": [[53, "lambeq.CCGType.PUNCTUATION", false]], "punctuation (lambeq.text2diagram.ccgtype attribute)": [[37, "lambeq.text2diagram.CCGType.PUNCTUATION", false]], "push_to_hub() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.push_to_hub", false]], "pytket": [[29, "term-pytket", true]], "pytorch": [[29, "term-PyTorch", true]], "pytorch (class in lambeq.backend.numerical_backend)": [[34, "lambeq.backend.numerical_backend.PyTorch", false]], "pytorchmodel (class in lambeq)": [[53, "lambeq.PytorchModel", false]], "pytorchmodel (class in lambeq.training)": [[39, "lambeq.training.PytorchModel", false]], "pytorchtrainer (class in lambeq)": [[53, "lambeq.PytorchTrainer", false]], "pytorchtrainer (class in lambeq.training)": [[39, "lambeq.training.PytorchTrainer", false]], "q_registers (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.q_registers", false]], "qiskit": [[29, "term-Qiskit", true]], "quantum circuit": [[29, "term-quantum-circuit", true]], "quantum gate": [[29, "term-quantum-gate", true]], "quantum nlp (qnlp)": [[29, "term-quantum-NLP-QNLP", true]], "quantummodel (class in lambeq)": [[53, "lambeq.QuantumModel", false]], "quantummodel (class in lambeq.training)": [[39, "lambeq.training.QuantumModel", false]], "quantumtrainer (class in lambeq)": [[53, "lambeq.QuantumTrainer", false]], "quantumtrainer (class in lambeq.training)": [[39, "lambeq.training.QuantumTrainer", false]], "qubit": [[29, "term-qubit", true]], "qubit_create() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.qubit_create", false]], "qubit_create_all() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.qubit_create_all", false]], "qubit_discard() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.qubit_discard", false]], "qubit_discard_all() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.qubit_discard_all", false]], "qubit_is_created() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.qubit_is_created", false]], "qubit_is_discarded() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.qubit_is_discarded", false]], "qubit_readout (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.qubit_readout", false]], "qubit_to_bit_map (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.qubit_to_bit_map", false]], "qubits (lambeq.backend.converters.tk.circuit property)": [[34, "lambeq.backend.converters.tk.Circuit.qubits", false]], "r (lambeq.backend.grammar.box property)": [[34, "lambeq.backend.grammar.Box.r", false]], "r (lambeq.backend.grammar.cap property)": [[34, "lambeq.backend.grammar.Cap.r", false]], "r (lambeq.backend.grammar.cup property)": [[34, "lambeq.backend.grammar.Cup.r", false]], "r (lambeq.backend.grammar.daggered property)": [[34, "lambeq.backend.grammar.Daggered.r", false]], "r (lambeq.backend.grammar.diagram property)": [[34, "lambeq.backend.grammar.Diagram.r", false]], "r (lambeq.backend.grammar.spider property)": [[34, "lambeq.backend.grammar.Spider.r", false]], "r (lambeq.backend.grammar.swap property)": [[34, "lambeq.backend.grammar.Swap.r", false]], "r (lambeq.backend.grammar.ty property)": [[34, "lambeq.backend.grammar.Ty.r", false]], "r (lambeq.backend.grammar.word property)": [[34, "lambeq.backend.grammar.Word.r", false]], "r (lambeq.backend.quantum.anticonjugate property)": [[34, "lambeq.backend.quantum.AntiConjugate.r", false]], "r (lambeq.backend.quantum.bit property)": [[34, "lambeq.backend.quantum.Bit.r", false]], "r (lambeq.backend.quantum.box property)": [[34, "lambeq.backend.quantum.Box.r", false]], "r (lambeq.backend.quantum.bra property)": [[34, "lambeq.backend.quantum.Bra.r", false]], "r (lambeq.backend.quantum.controlled property)": [[34, "lambeq.backend.quantum.Controlled.r", false]], "r (lambeq.backend.quantum.daggered property)": [[34, "lambeq.backend.quantum.Daggered.r", false]], "r (lambeq.backend.quantum.diagram property)": [[34, "lambeq.backend.quantum.Diagram.r", false]], "r (lambeq.backend.quantum.discard property)": [[34, "lambeq.backend.quantum.Discard.r", false]], "r (lambeq.backend.quantum.encode property)": [[34, "lambeq.backend.quantum.Encode.r", false]], "r (lambeq.backend.quantum.ket property)": [[34, "lambeq.backend.quantum.Ket.r", false]], "r (lambeq.backend.quantum.measure property)": [[34, "lambeq.backend.quantum.Measure.r", false]], "r (lambeq.backend.quantum.mixedstate property)": [[34, "lambeq.backend.quantum.MixedState.r", false]], "r (lambeq.backend.quantum.parametrized property)": [[34, "lambeq.backend.quantum.Parametrized.r", false]], "r (lambeq.backend.quantum.rotation property)": [[34, "lambeq.backend.quantum.Rotation.r", false]], "r (lambeq.backend.quantum.rx property)": [[34, "lambeq.backend.quantum.Rx.r", false]], "r (lambeq.backend.quantum.ry property)": [[34, "lambeq.backend.quantum.Ry.r", false]], "r (lambeq.backend.quantum.rz property)": [[34, "lambeq.backend.quantum.Rz.r", false]], "r (lambeq.backend.quantum.scalar property)": [[34, "lambeq.backend.quantum.Scalar.r", false]], "r (lambeq.backend.quantum.selfconjugate property)": [[34, "lambeq.backend.quantum.SelfConjugate.r", false]], "r (lambeq.backend.quantum.sqrt property)": [[34, "lambeq.backend.quantum.Sqrt.r", false]], "r (lambeq.backend.quantum.swap property)": [[34, "lambeq.backend.quantum.Swap.r", false]], "r (lambeq.backend.quantum.ty property)": [[34, "lambeq.backend.quantum.Ty.r", false]], "r (lambeq.backend.tensor.box property)": [[34, "lambeq.backend.tensor.Box.r", false]], "r (lambeq.backend.tensor.cap property)": [[34, "lambeq.backend.tensor.Cap.r", false]], "r (lambeq.backend.tensor.cup property)": [[34, "lambeq.backend.tensor.Cup.r", false]], "r (lambeq.backend.tensor.daggered property)": [[34, "lambeq.backend.tensor.Daggered.r", false]], "r (lambeq.backend.tensor.diagram property)": [[34, "lambeq.backend.tensor.Diagram.r", false]], "r (lambeq.backend.tensor.dim property)": [[34, "lambeq.backend.tensor.Dim.r", false]], "r (lambeq.backend.tensor.spider property)": [[34, "lambeq.backend.tensor.Spider.r", false]], "r (lambeq.backend.tensor.swap property)": [[34, "lambeq.backend.tensor.Swap.r", false]], "reader": [[29, "term-reader", true]], "reader (class in lambeq)": [[53, "lambeq.Reader", false]], "reader (class in lambeq.text2diagram)": [[37, "lambeq.text2diagram.Reader", false]], "register_backward_hook() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.register_backward_hook", false]], "register_backward_hook() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.register_backward_hook", false]], "register_backward_hook() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.register_backward_hook", false]], "register_buffer() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.register_buffer", false]], "register_buffer() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.register_buffer", false]], "register_buffer() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.register_buffer", false]], "register_for_auto_class() (lambeq.bobcat.bertforchartclassification class method)": [[35, "lambeq.bobcat.BertForChartClassification.register_for_auto_class", false]], "register_forward_hook() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.register_forward_hook", false]], "register_forward_hook() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.register_forward_hook", false]], "register_forward_hook() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.register_forward_hook", false]], "register_forward_pre_hook() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.register_forward_pre_hook", false]], "register_forward_pre_hook() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.register_forward_pre_hook", false]], "register_forward_pre_hook() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.register_forward_pre_hook", false]], "register_full_backward_hook() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.register_full_backward_hook", false]], "register_full_backward_hook() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.register_full_backward_hook", false]], "register_full_backward_hook() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.register_full_backward_hook", false]], "register_full_backward_pre_hook() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.register_full_backward_pre_hook", false]], "register_full_backward_pre_hook() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.register_full_backward_pre_hook", false]], "register_full_backward_pre_hook() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.register_full_backward_pre_hook", false]], "register_load_state_dict_post_hook() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.register_load_state_dict_post_hook", false]], "register_load_state_dict_post_hook() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.register_load_state_dict_post_hook", false]], "register_load_state_dict_post_hook() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.register_load_state_dict_post_hook", false]], "register_module() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.register_module", false]], "register_module() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.register_module", false]], "register_module() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.register_module", false]], "register_parameter() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.register_parameter", false]], "register_parameter() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.register_parameter", false]], "register_parameter() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.register_parameter", false]], "register_special_box() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.register_special_box", false]], "register_special_box() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.register_special_box", false]], "register_special_box() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.register_special_box", false]], "register_state_dict_pre_hook() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.register_state_dict_pre_hook", false]], "register_state_dict_pre_hook() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.register_state_dict_pre_hook", false]], "register_state_dict_pre_hook() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.register_state_dict_pre_hook", false]], "relation (lambeq.bobcat.category attribute)": [[35, "lambeq.bobcat.Category.relation", false]], "remove_blank_wires() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.remove_blank_wires", false]], "remove_punctuation_left (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.REMOVE_PUNCTUATION_LEFT", false]], "remove_punctuation_left (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.REMOVE_PUNCTUATION_LEFT", false]], "remove_punctuation_right (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.REMOVE_PUNCTUATION_RIGHT", false]], "remove_punctuation_right (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.REMOVE_PUNCTUATION_RIGHT", false]], "removecupsrewriter (class in lambeq)": [[53, "lambeq.RemoveCupsRewriter", false]], "removecupsrewriter (class in lambeq.rewrite)": [[36, "lambeq.rewrite.RemoveCupsRewriter", false]], "removeprefix() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.removeprefix", false]], "removesuffix() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.removesuffix", false]], "removeswapsrewriter (class in lambeq)": [[53, "lambeq.RemoveSwapsRewriter", false]], "removeswapsrewriter (class in lambeq.rewrite)": [[36, "lambeq.rewrite.RemoveSwapsRewriter", false]], "rename_units() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.rename_units", false]], "render_as_str() (in module lambeq.backend.drawing)": [[34, "lambeq.backend.drawing.render_as_str", false]], "render_as_str() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.render_as_str", false]], "render_as_str() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.render_as_str", false]], "render_as_str() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.render_as_str", false]], "repeat() (lambeq.backend.grammar.ty method)": [[34, "lambeq.backend.grammar.Ty.repeat", false]], "repeat() (lambeq.backend.quantum.ty method)": [[34, "lambeq.backend.quantum.Ty.repeat", false]], "repeat() (lambeq.backend.tensor.dim method)": [[34, "lambeq.backend.tensor.Dim.repeat", false]], "replace() (lambeq.ccgtype method)": [[53, "lambeq.CCGType.replace", false]], "replace() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.replace", false]], "replace() (lambeq.text2diagram.ccgtype method)": [[37, "lambeq.text2diagram.CCGType.replace", false]], "replace_implicit_wire_swaps() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.replace_implicit_wire_swaps", false]], "replace_result() (lambeq.ccgtype method)": [[53, "lambeq.CCGType.replace_result", false]], "replace_result() (lambeq.text2diagram.ccgtype method)": [[37, "lambeq.text2diagram.CCGType.replace_result", false]], "replace_swaps() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.replace_SWAPs", false]], "requires_grad_() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.requires_grad_", false]], "requires_grad_() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.requires_grad_", false]], "requires_grad_() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.requires_grad_", false]], "reset() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.Reset", false]], "reset_memory_hooks_state() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.reset_memory_hooks_state", false]], "resize_position_embeddings() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.resize_position_embeddings", false]], "resize_token_embeddings() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.resize_token_embeddings", false]], "resolve() (lambeq.ccgrule method)": [[53, "lambeq.CCGRule.resolve", false]], "resolve() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.resolve", false]], "result (lambeq.bobcat.category attribute)": [[35, "lambeq.bobcat.Category.result", false]], "result (lambeq.ccgtype property)": [[53, "lambeq.CCGType.result", false]], "result (lambeq.text2diagram.ccgtype property)": [[37, "lambeq.text2diagram.CCGType.result", false]], "retrieve_modules_from_names() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.retrieve_modules_from_names", false]], "reverse_bettertransformer() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.reverse_bettertransformer", false]], "rewrite rule": [[29, "term-rewrite-rule", true]], "rewrite() (lambeq.coordinationrewriterule method)": [[53, "lambeq.CoordinationRewriteRule.rewrite", false]], "rewrite() (lambeq.curryrewriterule method)": [[53, "lambeq.CurryRewriteRule.rewrite", false]], "rewrite() (lambeq.diagramrewriter method)": [[53, "lambeq.DiagramRewriter.rewrite", false]], "rewrite() (lambeq.removecupsrewriter method)": [[53, "lambeq.RemoveCupsRewriter.rewrite", false]], "rewrite() (lambeq.removeswapsrewriter method)": [[53, "lambeq.RemoveSwapsRewriter.rewrite", false]], "rewrite() (lambeq.rewrite.coordinationrewriterule method)": [[36, "lambeq.rewrite.CoordinationRewriteRule.rewrite", false]], "rewrite() (lambeq.rewrite.curryrewriterule method)": [[36, "lambeq.rewrite.CurryRewriteRule.rewrite", false]], "rewrite() (lambeq.rewrite.diagramrewriter method)": [[36, "lambeq.rewrite.DiagramRewriter.rewrite", false]], "rewrite() (lambeq.rewrite.removecupsrewriter method)": [[36, "lambeq.rewrite.RemoveCupsRewriter.rewrite", false]], "rewrite() (lambeq.rewrite.removeswapsrewriter method)": [[36, "lambeq.rewrite.RemoveSwapsRewriter.rewrite", false]], "rewrite() (lambeq.rewrite.rewriterule method)": [[36, "lambeq.rewrite.RewriteRule.rewrite", false]], "rewrite() (lambeq.rewrite.simplerewriterule method)": [[36, "lambeq.rewrite.SimpleRewriteRule.rewrite", false]], "rewrite() (lambeq.rewrite.unifycodomainrewriter method)": [[36, "lambeq.rewrite.UnifyCodomainRewriter.rewrite", false]], "rewrite() (lambeq.rewrite.unknownwordsrewriterule method)": [[36, "lambeq.rewrite.UnknownWordsRewriteRule.rewrite", false]], "rewrite() (lambeq.rewriterule method)": [[53, "lambeq.RewriteRule.rewrite", false]], "rewrite() (lambeq.simplerewriterule method)": [[53, "lambeq.SimpleRewriteRule.rewrite", false]], "rewrite() (lambeq.unifycodomainrewriter method)": [[53, "lambeq.UnifyCodomainRewriter.rewrite", false]], "rewrite() (lambeq.unknownwordsrewriterule method)": [[53, "lambeq.UnknownWordsRewriteRule.rewrite", false]], "rewriter": [[29, "term-rewriter", true]], "rewriter (class in lambeq)": [[53, "lambeq.Rewriter", false]], "rewriter (class in lambeq.rewrite)": [[36, "lambeq.rewrite.Rewriter", false]], "rewriterule (class in lambeq)": [[53, "lambeq.RewriteRule", false]], "rewriterule (class in lambeq.rewrite)": [[36, "lambeq.rewrite.RewriteRule", false]], "rfind() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.rfind", false]], "right (lambeq.backend.grammar.cap attribute)": [[34, "lambeq.backend.grammar.Cap.right", false]], "right (lambeq.backend.grammar.cup attribute)": [[34, "lambeq.backend.grammar.Cup.right", false]], "right (lambeq.backend.grammar.layer attribute)": [[34, "lambeq.backend.grammar.Layer.right", false]], "right (lambeq.backend.grammar.swap attribute)": [[34, "lambeq.backend.grammar.Swap.right", false]], "right (lambeq.backend.quantum.layer attribute)": [[34, "lambeq.backend.quantum.Layer.right", false]], "right (lambeq.backend.quantum.swap attribute)": [[34, "lambeq.backend.quantum.Swap.right", false]], "right (lambeq.backend.tensor.cap attribute)": [[34, "lambeq.backend.tensor.Cap.right", false]], "right (lambeq.backend.tensor.cup attribute)": [[34, "lambeq.backend.tensor.Cup.right", false]], "right (lambeq.backend.tensor.layer attribute)": [[34, "lambeq.backend.tensor.Layer.right", false]], "right (lambeq.backend.tensor.swap attribute)": [[34, "lambeq.backend.tensor.Swap.right", false]], "right (lambeq.bobcat.parsetree attribute)": [[35, "lambeq.bobcat.ParseTree.right", false]], "right (lambeq.ccgtree property)": [[53, "lambeq.CCGTree.right", false]], "right (lambeq.ccgtype property)": [[53, "lambeq.CCGType.right", false]], "right (lambeq.text2diagram.ccgtree property)": [[37, "lambeq.text2diagram.CCGTree.right", false]], "right (lambeq.text2diagram.ccgtype property)": [[37, "lambeq.text2diagram.CCGType.right", false]], "rigid category": [[29, "term-rigid-category", true]], "rindex() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.rindex", false]], "rjust() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.rjust", false]], "rotate() (lambeq.backend.grammar.box method)": [[34, "lambeq.backend.grammar.Box.rotate", false]], "rotate() (lambeq.backend.grammar.cap method)": [[34, "lambeq.backend.grammar.Cap.rotate", false]], "rotate() (lambeq.backend.grammar.cup method)": [[34, "lambeq.backend.grammar.Cup.rotate", false]], "rotate() (lambeq.backend.grammar.daggered method)": [[34, "lambeq.backend.grammar.Daggered.rotate", false]], "rotate() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.rotate", false]], "rotate() (lambeq.backend.grammar.diagrammable method)": [[34, "lambeq.backend.grammar.Diagrammable.rotate", false]], "rotate() (lambeq.backend.grammar.layer method)": [[34, "lambeq.backend.grammar.Layer.rotate", false]], "rotate() (lambeq.backend.grammar.spider method)": [[34, "lambeq.backend.grammar.Spider.rotate", false]], "rotate() (lambeq.backend.grammar.swap method)": [[34, "lambeq.backend.grammar.Swap.rotate", false]], "rotate() (lambeq.backend.grammar.ty method)": [[34, "lambeq.backend.grammar.Ty.rotate", false]], "rotate() (lambeq.backend.grammar.word method)": [[34, "lambeq.backend.grammar.Word.rotate", false]], "rotate() (lambeq.backend.quantum.anticonjugate method)": [[34, "lambeq.backend.quantum.AntiConjugate.rotate", false]], "rotate() (lambeq.backend.quantum.bit method)": [[34, "lambeq.backend.quantum.Bit.rotate", false]], "rotate() (lambeq.backend.quantum.box method)": [[34, "lambeq.backend.quantum.Box.rotate", false]], "rotate() (lambeq.backend.quantum.bra method)": [[34, "lambeq.backend.quantum.Bra.rotate", false]], "rotate() (lambeq.backend.quantum.controlled method)": [[34, "lambeq.backend.quantum.Controlled.rotate", false]], "rotate() (lambeq.backend.quantum.daggered method)": [[34, "lambeq.backend.quantum.Daggered.rotate", false]], "rotate() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.rotate", false]], "rotate() (lambeq.backend.quantum.discard method)": [[34, "lambeq.backend.quantum.Discard.rotate", false]], "rotate() (lambeq.backend.quantum.encode method)": [[34, "lambeq.backend.quantum.Encode.rotate", false]], "rotate() (lambeq.backend.quantum.ket method)": [[34, "lambeq.backend.quantum.Ket.rotate", false]], "rotate() (lambeq.backend.quantum.layer method)": [[34, "lambeq.backend.quantum.Layer.rotate", false]], "rotate() (lambeq.backend.quantum.measure method)": [[34, "lambeq.backend.quantum.Measure.rotate", false]], "rotate() (lambeq.backend.quantum.mixedstate method)": [[34, "lambeq.backend.quantum.MixedState.rotate", false]], "rotate() (lambeq.backend.quantum.parametrized method)": [[34, "lambeq.backend.quantum.Parametrized.rotate", false]], "rotate() (lambeq.backend.quantum.rotation method)": [[34, "lambeq.backend.quantum.Rotation.rotate", false]], "rotate() (lambeq.backend.quantum.rx method)": [[34, "lambeq.backend.quantum.Rx.rotate", false]], "rotate() (lambeq.backend.quantum.ry method)": [[34, "lambeq.backend.quantum.Ry.rotate", false]], "rotate() (lambeq.backend.quantum.rz method)": [[34, "lambeq.backend.quantum.Rz.rotate", false]], "rotate() (lambeq.backend.quantum.scalar method)": [[34, "lambeq.backend.quantum.Scalar.rotate", false]], "rotate() (lambeq.backend.quantum.selfconjugate method)": [[34, "lambeq.backend.quantum.SelfConjugate.rotate", false]], "rotate() (lambeq.backend.quantum.sqrt method)": [[34, "lambeq.backend.quantum.Sqrt.rotate", false]], "rotate() (lambeq.backend.quantum.swap method)": [[34, "lambeq.backend.quantum.Swap.rotate", false]], "rotate() (lambeq.backend.quantum.ty method)": [[34, "lambeq.backend.quantum.Ty.rotate", false]], "rotate() (lambeq.backend.tensor.box method)": [[34, "lambeq.backend.tensor.Box.rotate", false]], "rotate() (lambeq.backend.tensor.cap method)": [[34, "lambeq.backend.tensor.Cap.rotate", false]], "rotate() (lambeq.backend.tensor.cup method)": [[34, "lambeq.backend.tensor.Cup.rotate", false]], "rotate() (lambeq.backend.tensor.daggered method)": [[34, "lambeq.backend.tensor.Daggered.rotate", false]], "rotate() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.rotate", false]], "rotate() (lambeq.backend.tensor.dim method)": [[34, "lambeq.backend.tensor.Dim.rotate", false]], "rotate() (lambeq.backend.tensor.layer method)": [[34, "lambeq.backend.tensor.Layer.rotate", false]], "rotate() (lambeq.backend.tensor.spider method)": [[34, "lambeq.backend.tensor.Spider.rotate", false]], "rotate() (lambeq.backend.tensor.swap method)": [[34, "lambeq.backend.tensor.Swap.rotate", false]], "rotation (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Rotation", false]], "rotosolveoptimizer (class in lambeq)": [[53, "lambeq.RotosolveOptimizer", false]], "rotosolveoptimizer (class in lambeq.training)": [[39, "lambeq.training.RotosolveOptimizer", false]], "rpartition() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.rpartition", false]], "rsplit() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.rsplit", false]], "rstrip() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.rstrip", false]], "rule (lambeq.bobcat.parsetree attribute)": [[35, "lambeq.bobcat.ParseTree.rule", false]], "rule_only": [[37, "term-RULE_ONLY", true], [53, "term-RULE_ONLY", true]], "rule_only (lambeq.text2diagram.treereadermode attribute)": [[37, "lambeq.text2diagram.TreeReaderMode.RULE_ONLY", false]], "rule_only (lambeq.treereadermode attribute)": [[53, "lambeq.TreeReaderMode.RULE_ONLY", false]], "rule_type": [[37, "term-RULE_TYPE", true], [53, "term-RULE_TYPE", true]], "rule_type (lambeq.text2diagram.treereadermode attribute)": [[37, "lambeq.text2diagram.TreeReaderMode.RULE_TYPE", false]], "rule_type (lambeq.treereadermode attribute)": [[53, "lambeq.TreeReaderMode.RULE_TYPE", false]], "rx (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Rx", false]], "rx() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.Rx", false]], "ry (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Ry", false]], "ry() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.Ry", false]], "rz (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Rz", false]], "rz() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.Rz", false]], "s() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.S", false]], "save() (lambeq.bobcat.grammar method)": [[35, "lambeq.bobcat.Grammar.save", false]], "save() (lambeq.model method)": [[53, "lambeq.Model.save", false]], "save() (lambeq.training.model method)": [[39, "lambeq.training.Model.save", false]], "save() (lambeq.training.numpymodel method)": [[39, "lambeq.training.NumpyModel.save", false]], "save() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.save", false]], "save() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.save", false]], "save() (lambeq.training.quantummodel method)": [[39, "lambeq.training.QuantumModel.save", false]], "save() (lambeq.training.tketmodel method)": [[39, "lambeq.training.TketModel.save", false]], "save_checkpoint() (lambeq.trainer method)": [[53, "lambeq.Trainer.save_checkpoint", false]], "save_checkpoint() (lambeq.training.pytorchtrainer method)": [[39, "lambeq.training.PytorchTrainer.save_checkpoint", false]], "save_checkpoint() (lambeq.training.quantumtrainer method)": [[39, "lambeq.training.QuantumTrainer.save_checkpoint", false]], "save_checkpoint() (lambeq.training.trainer method)": [[39, "lambeq.training.Trainer.save_checkpoint", false]], "save_pretrained() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.save_pretrained", false]], "scalar (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Scalar", false]], "scale() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.scale", false]], "scale_and_pad() (lambeq.backend.drawing.drawablediagram method)": [[34, "lambeq.backend.drawing.DrawableDiagram.scale_and_pad", false]], "score (lambeq.bobcat.parsetree attribute)": [[35, "lambeq.bobcat.ParseTree.score", false]], "sdg() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.Sdg", false]], "section2diagrams() (lambeq.ccgbankparser method)": [[53, "lambeq.CCGBankParser.section2diagrams", false]], "section2diagrams() (lambeq.text2diagram.ccgbankparser method)": [[37, "lambeq.text2diagram.CCGBankParser.section2diagrams", false]], "section2diagrams_gen() (lambeq.ccgbankparser method)": [[53, "lambeq.CCGBankParser.section2diagrams_gen", false]], "section2diagrams_gen() (lambeq.text2diagram.ccgbankparser method)": [[37, "lambeq.text2diagram.CCGBankParser.section2diagrams_gen", false]], "section2trees() (lambeq.ccgbankparser method)": [[53, "lambeq.CCGBankParser.section2trees", false]], "section2trees() (lambeq.text2diagram.ccgbankparser method)": [[37, "lambeq.text2diagram.CCGBankParser.section2trees", false]], "section2trees_gen() (lambeq.ccgbankparser method)": [[53, "lambeq.CCGBankParser.section2trees_gen", false]], "section2trees_gen() (lambeq.text2diagram.ccgbankparser method)": [[37, "lambeq.text2diagram.CCGBankParser.section2trees_gen", false]], "self_adjoint (lambeq.backend.quantum.anticonjugate attribute)": [[34, "lambeq.backend.quantum.AntiConjugate.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.bit attribute)": [[34, "lambeq.backend.quantum.Bit.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.box attribute)": [[34, "lambeq.backend.quantum.Box.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.bra attribute)": [[34, "lambeq.backend.quantum.Bra.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.controlled attribute)": [[34, "lambeq.backend.quantum.Controlled.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.daggered attribute)": [[34, "lambeq.backend.quantum.Daggered.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.discard attribute)": [[34, "lambeq.backend.quantum.Discard.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.encode attribute)": [[34, "lambeq.backend.quantum.Encode.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.ket attribute)": [[34, "lambeq.backend.quantum.Ket.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.measure attribute)": [[34, "lambeq.backend.quantum.Measure.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.mixedstate attribute)": [[34, "lambeq.backend.quantum.MixedState.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.parametrized attribute)": [[34, "lambeq.backend.quantum.Parametrized.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.rotation attribute)": [[34, "lambeq.backend.quantum.Rotation.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.rx attribute)": [[34, "lambeq.backend.quantum.Rx.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.ry attribute)": [[34, "lambeq.backend.quantum.Ry.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.rz attribute)": [[34, "lambeq.backend.quantum.Rz.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.scalar attribute)": [[34, "lambeq.backend.quantum.Scalar.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.selfconjugate attribute)": [[34, "lambeq.backend.quantum.SelfConjugate.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.sqrt attribute)": [[34, "lambeq.backend.quantum.Sqrt.self_adjoint", false]], "self_adjoint (lambeq.backend.quantum.swap attribute)": [[34, "lambeq.backend.quantum.Swap.self_adjoint", false]], "selfconjugate (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.SelfConjugate", false]], "sentence (class in lambeq.bobcat)": [[35, "lambeq.bobcat.Sentence", false]], "sentence (lambeq.atomictype attribute)": [[53, "lambeq.AtomicType.SENTENCE", false]], "sentence (lambeq.ccgtype attribute)": [[53, "lambeq.CCGType.SENTENCE", false]], "sentence (lambeq.text2diagram.ccgtype attribute)": [[37, "lambeq.text2diagram.CCGType.SENTENCE", false]], "sentence2diagram() (lambeq.ccgparser method)": [[53, "lambeq.CCGParser.sentence2diagram", false]], "sentence2diagram() (lambeq.depccgparser method)": [[53, "lambeq.DepCCGParser.sentence2diagram", false]], "sentence2diagram() (lambeq.linearreader method)": [[53, "lambeq.LinearReader.sentence2diagram", false]], "sentence2diagram() (lambeq.reader method)": [[53, "lambeq.Reader.sentence2diagram", false]], "sentence2diagram() (lambeq.text2diagram.bobcatparser method)": [[37, "lambeq.text2diagram.BobcatParser.sentence2diagram", false]], "sentence2diagram() (lambeq.text2diagram.ccgbankparser method)": [[37, "lambeq.text2diagram.CCGBankParser.sentence2diagram", false]], "sentence2diagram() (lambeq.text2diagram.ccgparser method)": [[37, "lambeq.text2diagram.CCGParser.sentence2diagram", false]], "sentence2diagram() (lambeq.text2diagram.depccgparser method)": [[37, "lambeq.text2diagram.DepCCGParser.sentence2diagram", false]], "sentence2diagram() (lambeq.text2diagram.linearreader method)": [[37, "lambeq.text2diagram.LinearReader.sentence2diagram", false]], "sentence2diagram() (lambeq.text2diagram.reader method)": [[37, "lambeq.text2diagram.Reader.sentence2diagram", false]], "sentence2diagram() (lambeq.text2diagram.treereader method)": [[37, "lambeq.text2diagram.TreeReader.sentence2diagram", false]], "sentence2diagram() (lambeq.text2diagram.webparser method)": [[37, "lambeq.text2diagram.WebParser.sentence2diagram", false]], "sentence2diagram() (lambeq.treereader method)": [[53, "lambeq.TreeReader.sentence2diagram", false]], "sentence2tree() (lambeq.ccgparser method)": [[53, "lambeq.CCGParser.sentence2tree", false]], "sentence2tree() (lambeq.depccgparser method)": [[53, "lambeq.DepCCGParser.sentence2tree", false]], "sentence2tree() (lambeq.text2diagram.bobcatparser method)": [[37, "lambeq.text2diagram.BobcatParser.sentence2tree", false]], "sentence2tree() (lambeq.text2diagram.ccgbankparser method)": [[37, "lambeq.text2diagram.CCGBankParser.sentence2tree", false]], "sentence2tree() (lambeq.text2diagram.ccgparser method)": [[37, "lambeq.text2diagram.CCGParser.sentence2tree", false]], "sentence2tree() (lambeq.text2diagram.depccgparser method)": [[37, "lambeq.text2diagram.DepCCGParser.sentence2tree", false]], "sentence2tree() (lambeq.text2diagram.webparser method)": [[37, "lambeq.text2diagram.WebParser.sentence2tree", false]], "sentences2diagrams() (lambeq.ccgparser method)": [[53, "lambeq.CCGParser.sentences2diagrams", false]], "sentences2diagrams() (lambeq.reader method)": [[53, "lambeq.Reader.sentences2diagrams", false]], "sentences2diagrams() (lambeq.text2diagram.bobcatparser method)": [[37, "lambeq.text2diagram.BobcatParser.sentences2diagrams", false]], "sentences2diagrams() (lambeq.text2diagram.ccgbankparser method)": [[37, "lambeq.text2diagram.CCGBankParser.sentences2diagrams", false]], "sentences2diagrams() (lambeq.text2diagram.ccgparser method)": [[37, "lambeq.text2diagram.CCGParser.sentences2diagrams", false]], "sentences2diagrams() (lambeq.text2diagram.depccgparser method)": [[37, "lambeq.text2diagram.DepCCGParser.sentences2diagrams", false]], "sentences2diagrams() (lambeq.text2diagram.linearreader method)": [[37, "lambeq.text2diagram.LinearReader.sentences2diagrams", false]], "sentences2diagrams() (lambeq.text2diagram.reader method)": [[37, "lambeq.text2diagram.Reader.sentences2diagrams", false]], "sentences2diagrams() (lambeq.text2diagram.treereader method)": [[37, "lambeq.text2diagram.TreeReader.sentences2diagrams", false]], "sentences2diagrams() (lambeq.text2diagram.webparser method)": [[37, "lambeq.text2diagram.WebParser.sentences2diagrams", false]], "sentences2trees() (lambeq.bobcatparser method)": [[53, "lambeq.BobcatParser.sentences2trees", false]], "sentences2trees() (lambeq.ccgbankparser method)": [[53, "lambeq.CCGBankParser.sentences2trees", false]], "sentences2trees() (lambeq.ccgparser method)": [[53, "lambeq.CCGParser.sentences2trees", false]], "sentences2trees() (lambeq.depccgparser method)": [[53, "lambeq.DepCCGParser.sentences2trees", false]], "sentences2trees() (lambeq.text2diagram.bobcatparser method)": [[37, "lambeq.text2diagram.BobcatParser.sentences2trees", false]], "sentences2trees() (lambeq.text2diagram.ccgbankparser method)": [[37, "lambeq.text2diagram.CCGBankParser.sentences2trees", false]], "sentences2trees() (lambeq.text2diagram.ccgparser method)": [[37, "lambeq.text2diagram.CCGParser.sentences2trees", false]], "sentences2trees() (lambeq.text2diagram.depccgparser method)": [[37, "lambeq.text2diagram.DepCCGParser.sentences2trees", false]], "sentences2trees() (lambeq.text2diagram.webparser method)": [[37, "lambeq.text2diagram.WebParser.sentences2trees", false]], "sentences2trees() (lambeq.webparser method)": [[53, "lambeq.WebParser.sentences2trees", false]], "set() (lambeq.backend.grammar.category method)": [[34, "lambeq.backend.grammar.Category.set", false]], "set_adapter() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.set_adapter", false]], "set_backend() (in module lambeq.backend.numerical_backend)": [[34, "lambeq.backend.numerical_backend.set_backend", false]], "set_extra_state() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.set_extra_state", false]], "set_extra_state() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.set_extra_state", false]], "set_extra_state() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.set_extra_state", false]], "set_input_embeddings() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.set_input_embeddings", false]], "set_root_cats() (lambeq.bobcat.chartparser method)": [[35, "lambeq.bobcat.ChartParser.set_root_cats", false]], "share_memory() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.share_memory", false]], "share_memory() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.share_memory", false]], "share_memory() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.share_memory", false]], "shots": [[29, "term-shots", true]], "shuffle_data() (lambeq.dataset static method)": [[53, "lambeq.Dataset.shuffle_data", false]], "shuffle_data() (lambeq.training.dataset static method)": [[39, "lambeq.training.Dataset.shuffle_data", false]], "sim14ansatz (class in lambeq)": [[53, "lambeq.Sim14Ansatz", false]], "sim14ansatz (class in lambeq.ansatz)": [[33, "lambeq.ansatz.Sim14Ansatz", false]], "sim15ansatz (class in lambeq)": [[53, "lambeq.Sim15Ansatz", false]], "sim15ansatz (class in lambeq.ansatz)": [[33, "lambeq.ansatz.Sim15Ansatz", false]], "sim4ansatz (class in lambeq)": [[53, "lambeq.Sim4Ansatz", false]], "sim4ansatz (class in lambeq.ansatz)": [[33, "lambeq.ansatz.Sim4Ansatz", false]], "simplerewriterule (class in lambeq)": [[53, "lambeq.SimpleRewriteRule", false]], "simplerewriterule (class in lambeq.rewrite)": [[36, "lambeq.rewrite.SimpleRewriteRule", false]], "size (lambeq.ansatz.symbol property)": [[33, "lambeq.ansatz.Symbol.size", false]], "size (lambeq.symbol property)": [[53, "lambeq.Symbol.size", false]], "slash() (lambeq.bobcat.category method)": [[35, "lambeq.bobcat.Category.slash", false]], "slash() (lambeq.ccgtype method)": [[53, "lambeq.CCGType.slash", false]], "slash() (lambeq.text2diagram.ccgtype method)": [[37, "lambeq.text2diagram.CCGType.slash", false]], "snake equations": [[29, "term-snake-equations", true]], "snake_removal() (in module lambeq.backend.snake_removal)": [[34, "lambeq.backend.snake_removal.snake_removal", false]], "sort_key() (lambeq.ansatz.symbol method)": [[33, "lambeq.ansatz.Symbol.sort_key", false]], "sort_key() (lambeq.symbol method)": [[53, "lambeq.Symbol.sort_key", false]], "spacytokeniser (class in lambeq)": [[53, "lambeq.SpacyTokeniser", false]], "spacytokeniser (class in lambeq.tokeniser)": [[38, "lambeq.tokeniser.SpacyTokeniser", false]], "span_scores (lambeq.bobcat.sentence attribute)": [[35, "lambeq.bobcat.Sentence.span_scores", false]], "special_boxes (lambeq.backend.grammar.diagram attribute)": [[34, "lambeq.backend.grammar.Diagram.special_boxes", false]], "special_boxes (lambeq.backend.quantum.diagram attribute)": [[34, "lambeq.backend.quantum.Diagram.special_boxes", false]], "special_boxes (lambeq.backend.tensor.diagram attribute)": [[34, "lambeq.backend.tensor.Diagram.special_boxes", false]], "spider": [[29, "term-spider", true]], "spider (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Spider", false]], "spider (class in lambeq.backend.tensor)": [[34, "lambeq.backend.tensor.Spider", false]], "spideransatz (class in lambeq)": [[53, "lambeq.SpiderAnsatz", false]], "spideransatz (class in lambeq.ansatz)": [[33, "lambeq.ansatz.SpiderAnsatz", false]], "spiders_reader (in module lambeq.text2diagram)": [[37, "lambeq.text2diagram.spiders_reader", false]], "split() (lambeq.ccgtype method)": [[53, "lambeq.CCGType.split", false]], "split() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.split", false]], "split() (lambeq.text2diagram.ccgtype method)": [[37, "lambeq.text2diagram.CCGType.split", false]], "split_sentences() (lambeq.spacytokeniser method)": [[53, "lambeq.SpacyTokeniser.split_sentences", false]], "split_sentences() (lambeq.tokeniser method)": [[53, "lambeq.Tokeniser.split_sentences", false]], "split_sentences() (lambeq.tokeniser.spacytokeniser method)": [[38, "lambeq.tokeniser.SpacyTokeniser.split_sentences", false]], "split_sentences() (lambeq.tokeniser.tokeniser method)": [[38, "lambeq.tokeniser.Tokeniser.split_sentences", false]], "splitlines() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.splitlines", false]], "spsaoptimizer (class in lambeq)": [[53, "lambeq.SPSAOptimizer", false]], "spsaoptimizer (class in lambeq.training)": [[39, "lambeq.training.SPSAOptimizer", false]], "sqrt (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Sqrt", false]], "stairs_reader (in module lambeq.text2diagram)": [[37, "lambeq.text2diagram.stairs_reader", false]], "startswith() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.startswith", false]], "state_dict() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.state_dict", false]], "state_dict() (lambeq.neldermeadoptimizer method)": [[53, "lambeq.NelderMeadOptimizer.state_dict", false]], "state_dict() (lambeq.optimizer method)": [[53, "lambeq.Optimizer.state_dict", false]], "state_dict() (lambeq.rotosolveoptimizer method)": [[53, "lambeq.RotosolveOptimizer.state_dict", false]], "state_dict() (lambeq.spsaoptimizer method)": [[53, "lambeq.SPSAOptimizer.state_dict", false]], "state_dict() (lambeq.training.neldermeadoptimizer method)": [[39, "lambeq.training.NelderMeadOptimizer.state_dict", false]], "state_dict() (lambeq.training.optimizer method)": [[39, "lambeq.training.Optimizer.state_dict", false]], "state_dict() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.state_dict", false]], "state_dict() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.state_dict", false]], "state_dict() (lambeq.training.rotosolveoptimizer method)": [[39, "lambeq.training.RotosolveOptimizer.state_dict", false]], "state_dict() (lambeq.training.spsaoptimizer method)": [[39, "lambeq.training.SPSAOptimizer.state_dict", false]], "step() (lambeq.neldermeadoptimizer method)": [[53, "lambeq.NelderMeadOptimizer.step", false]], "step() (lambeq.optimizer method)": [[53, "lambeq.Optimizer.step", false]], "step() (lambeq.rotosolveoptimizer method)": [[53, "lambeq.RotosolveOptimizer.step", false]], "step() (lambeq.spsaoptimizer method)": [[53, "lambeq.SPSAOptimizer.step", false]], "step() (lambeq.training.neldermeadoptimizer method)": [[39, "lambeq.training.NelderMeadOptimizer.step", false]], "step() (lambeq.training.optimizer method)": [[39, "lambeq.training.Optimizer.step", false]], "step() (lambeq.training.rotosolveoptimizer method)": [[39, "lambeq.training.RotosolveOptimizer.step", false]], "step() (lambeq.training.spsaoptimizer method)": [[39, "lambeq.training.SPSAOptimizer.step", false]], "strerror (lambeq.text2diagram.webparseerror attribute)": [[37, "lambeq.text2diagram.WebParseError.strerror", false]], "string diagram": [[29, "term-string-diagram", true]], "strip() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.strip", false]], "stronglyentanglingansatz (class in lambeq)": [[53, "lambeq.StronglyEntanglingAnsatz", false]], "stronglyentanglingansatz (class in lambeq.ansatz)": [[33, "lambeq.ansatz.StronglyEntanglingAnsatz", false]], "substitute_named() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.substitute_named", false]], "supertag (class in lambeq.bobcat)": [[35, "lambeq.bobcat.Supertag", false]], "supports_gradient_checkpointing (lambeq.bobcat.bertforchartclassification attribute)": [[35, "lambeq.bobcat.BertForChartClassification.supports_gradient_checkpointing", false]], "suppress (lambeq.verbositylevel attribute)": [[53, "lambeq.VerbosityLevel.SUPPRESS", false]], "swap": [[29, "term-swap", true]], "swap (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Swap", false]], "swap (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Swap", false]], "swap (class in lambeq.backend.tensor)": [[34, "lambeq.backend.tensor.Swap", false]], "swap() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.SWAP", false]], "swap() (lambeq.backend.grammar.diagram class method)": [[34, "lambeq.backend.grammar.Diagram.swap", false]], "swap() (lambeq.backend.quantum.diagram class method)": [[34, "lambeq.backend.quantum.Diagram.swap", false]], "swap() (lambeq.backend.tensor.diagram class method)": [[34, "lambeq.backend.tensor.Diagram.swap", false]], "swapcase() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.swapcase", false]], "sx() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.SX", false]], "sxdg() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.SXdg", false]], "sycamore() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.Sycamore", false]], "symbol": [[29, "term-symbol", true]], "symbol (class in lambeq)": [[53, "lambeq.Symbol", false]], "symbol (class in lambeq.ansatz)": [[33, "lambeq.ansatz.Symbol", false]], "symbol (lambeq.ccgrule property)": [[53, "lambeq.CCGRule.symbol", false]], "symbol (lambeq.text2diagram.ccgrule property)": [[37, "lambeq.text2diagram.CCGRule.symbol", false]], "symbol_substitution() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.symbol_substitution", false]], "symbol_weight_map (lambeq.pennylanemodel attribute)": [[53, "lambeq.PennyLaneModel.symbol_weight_map", false]], "symbols (lambeq.numpymodel attribute)": [[53, "lambeq.NumpyModel.symbols", false]], "symbols (lambeq.pennylanemodel attribute)": [[53, "lambeq.PennyLaneModel.symbols", false]], "symbols (lambeq.pytorchmodel attribute)": [[53, "lambeq.PytorchModel.symbols", false]], "symbols (lambeq.quantummodel attribute)": [[53, "lambeq.QuantumModel.symbols", false]], "symbols (lambeq.tketmodel attribute)": [[53, "lambeq.TketModel.symbols", false]], "symbols (lambeq.training.pennylanemodel attribute)": [[39, "lambeq.training.PennyLaneModel.symbols", false]], "symbols (lambeq.training.pytorchmodel attribute)": [[39, "lambeq.training.PytorchModel.symbols", false]], "symbols (lambeq.training.tketmodel attribute)": [[39, "lambeq.training.TketModel.symbols", false]], "symmetric monoidal category": [[29, "term-symmetric-monoidal-category", true]], "syntax tree": [[29, "term-syntax-tree", true]], "t() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.T", false]], "t_destination (lambeq.bobcat.bertforchartclassification attribute)": [[35, "lambeq.bobcat.BertForChartClassification.T_destination", false]], "t_destination (lambeq.training.pennylanemodel attribute)": [[39, "lambeq.training.PennyLaneModel.T_destination", false]], "t_destination (lambeq.training.pytorchmodel attribute)": [[39, "lambeq.training.PytorchModel.T_destination", false]], "tagger (class in lambeq.bobcat)": [[35, "lambeq.bobcat.Tagger", false]], "target_category (lambeq.backend.grammar.functor attribute)": [[34, "lambeq.backend.grammar.Functor.target_category", false]], "tdg() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.Tdg", false]], "tensor network": [[29, "term-tensor-network", true]], "tensor train": [[29, "term-tensor-train", true]], "tensor() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.tensor", false]], "tensor() (lambeq.backend.grammar.ty method)": [[34, "lambeq.backend.grammar.Ty.tensor", false]], "tensor() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.tensor", false]], "tensor() (lambeq.backend.quantum.ty method)": [[34, "lambeq.backend.quantum.Ty.tensor", false]], "tensor() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.tensor", false]], "tensor() (lambeq.backend.tensor.dim method)": [[34, "lambeq.backend.tensor.Dim.tensor", false]], "tensoransatz (class in lambeq)": [[53, "lambeq.TensorAnsatz", false]], "tensoransatz (class in lambeq.ansatz)": [[33, "lambeq.ansatz.TensorAnsatz", false]], "tensorflow (class in lambeq.backend.numerical_backend)": [[34, "lambeq.backend.numerical_backend.TensorFlow", false]], "text (lambeq.ccgtree property)": [[53, "lambeq.CCGTree.text", false]], "text (lambeq.text2diagram.ccgtree property)": [[37, "lambeq.text2diagram.CCGTree.text", false]], "text (lambeq.verbositylevel attribute)": [[53, "lambeq.VerbosityLevel.TEXT", false]], "then() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.then", false]], "then() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.then", false]], "then() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.then", false]], "then_at() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.then_at", false]], "then_at() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.then_at", false]], "then_at() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.then_at", false]], "tie_weights() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.tie_weights", false]], "title() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.title", false]], "tk1() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.TK1", false]], "tk2() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.TK2", false]], "tk_op_to_pennylane() (in module lambeq.backend.pennylane)": [[34, "lambeq.backend.pennylane.tk_op_to_pennylane", false]], "tket": [[29, "term-tket", true]], "tketmodel (class in lambeq)": [[53, "lambeq.TketModel", false]], "tketmodel (class in lambeq.training)": [[39, "lambeq.training.TketModel", false]], "to() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.to", false]], "to() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.to", false]], "to() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.to", false]], "to_bettertransformer() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.to_bettertransformer", false]], "to_diagram() (lambeq.backend.grammar.box method)": [[34, "lambeq.backend.grammar.Box.to_diagram", false]], "to_diagram() (lambeq.backend.grammar.cap method)": [[34, "lambeq.backend.grammar.Cap.to_diagram", false]], "to_diagram() (lambeq.backend.grammar.cup method)": [[34, "lambeq.backend.grammar.Cup.to_diagram", false]], "to_diagram() (lambeq.backend.grammar.daggered method)": [[34, "lambeq.backend.grammar.Daggered.to_diagram", false]], "to_diagram() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.to_diagram", false]], "to_diagram() (lambeq.backend.grammar.diagrammable method)": [[34, "lambeq.backend.grammar.Diagrammable.to_diagram", false]], "to_diagram() (lambeq.backend.grammar.spider method)": [[34, "lambeq.backend.grammar.Spider.to_diagram", false]], "to_diagram() (lambeq.backend.grammar.swap method)": [[34, "lambeq.backend.grammar.Swap.to_diagram", false]], "to_diagram() (lambeq.backend.grammar.ty method)": [[34, "lambeq.backend.grammar.Ty.to_diagram", false]], "to_diagram() (lambeq.backend.grammar.word method)": [[34, "lambeq.backend.grammar.Word.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.anticonjugate method)": [[34, "lambeq.backend.quantum.AntiConjugate.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.bit method)": [[34, "lambeq.backend.quantum.Bit.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.box method)": [[34, "lambeq.backend.quantum.Box.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.bra method)": [[34, "lambeq.backend.quantum.Bra.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.controlled method)": [[34, "lambeq.backend.quantum.Controlled.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.daggered method)": [[34, "lambeq.backend.quantum.Daggered.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.discard method)": [[34, "lambeq.backend.quantum.Discard.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.encode method)": [[34, "lambeq.backend.quantum.Encode.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.ket method)": [[34, "lambeq.backend.quantum.Ket.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.measure method)": [[34, "lambeq.backend.quantum.Measure.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.mixedstate method)": [[34, "lambeq.backend.quantum.MixedState.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.parametrized method)": [[34, "lambeq.backend.quantum.Parametrized.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.rotation method)": [[34, "lambeq.backend.quantum.Rotation.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.rx method)": [[34, "lambeq.backend.quantum.Rx.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.ry method)": [[34, "lambeq.backend.quantum.Ry.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.rz method)": [[34, "lambeq.backend.quantum.Rz.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.scalar method)": [[34, "lambeq.backend.quantum.Scalar.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.selfconjugate method)": [[34, "lambeq.backend.quantum.SelfConjugate.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.sqrt method)": [[34, "lambeq.backend.quantum.Sqrt.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.swap method)": [[34, "lambeq.backend.quantum.Swap.to_diagram", false]], "to_diagram() (lambeq.backend.quantum.ty method)": [[34, "lambeq.backend.quantum.Ty.to_diagram", false]], "to_diagram() (lambeq.backend.tensor.box method)": [[34, "lambeq.backend.tensor.Box.to_diagram", false]], "to_diagram() (lambeq.backend.tensor.cap method)": [[34, "lambeq.backend.tensor.Cap.to_diagram", false]], "to_diagram() (lambeq.backend.tensor.cup method)": [[34, "lambeq.backend.tensor.Cup.to_diagram", false]], "to_diagram() (lambeq.backend.tensor.daggered method)": [[34, "lambeq.backend.tensor.Daggered.to_diagram", false]], "to_diagram() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.to_diagram", false]], "to_diagram() (lambeq.backend.tensor.dim method)": [[34, "lambeq.backend.tensor.Dim.to_diagram", false]], "to_diagram() (lambeq.backend.tensor.spider method)": [[34, "lambeq.backend.tensor.Spider.to_diagram", false]], "to_diagram() (lambeq.backend.tensor.swap method)": [[34, "lambeq.backend.tensor.Swap.to_diagram", false]], "to_diagram() (lambeq.ccgtree method)": [[53, "lambeq.CCGTree.to_diagram", false]], "to_diagram() (lambeq.text2diagram.ccgtree method)": [[37, "lambeq.text2diagram.CCGTree.to_diagram", false]], "to_dict() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.to_dict", false]], "to_discopy() (in module lambeq.backend.converters.discopy)": [[34, "lambeq.backend.converters.discopy.to_discopy", false]], "to_discopy() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.to_discopy", false]], "to_discopy() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.to_discopy", false]], "to_discopy() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.to_discopy", false]], "to_empty() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.to_empty", false]], "to_empty() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.to_empty", false]], "to_empty() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.to_empty", false]], "to_file() (lambeq.checkpoint method)": [[53, "lambeq.Checkpoint.to_file", false]], "to_file() (lambeq.training.checkpoint method)": [[39, "lambeq.training.Checkpoint.to_file", false]], "to_gif() (in module lambeq.backend.drawing)": [[34, "lambeq.backend.drawing.to_gif", false]], "to_grammar() (lambeq.ccgtype method)": [[53, "lambeq.CCGType.to_grammar", false]], "to_grammar() (lambeq.text2diagram.ccgtype method)": [[37, "lambeq.text2diagram.CCGType.to_grammar", false]], "to_json() (lambeq.backend.grammar.box method)": [[34, "lambeq.backend.grammar.Box.to_json", false]], "to_json() (lambeq.backend.grammar.cap method)": [[34, "lambeq.backend.grammar.Cap.to_json", false]], "to_json() (lambeq.backend.grammar.cup method)": [[34, "lambeq.backend.grammar.Cup.to_json", false]], "to_json() (lambeq.backend.grammar.daggered method)": [[34, "lambeq.backend.grammar.Daggered.to_json", false]], "to_json() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.to_json", false]], "to_json() (lambeq.backend.grammar.layer method)": [[34, "lambeq.backend.grammar.Layer.to_json", false]], "to_json() (lambeq.backend.grammar.spider method)": [[34, "lambeq.backend.grammar.Spider.to_json", false]], "to_json() (lambeq.backend.grammar.swap method)": [[34, "lambeq.backend.grammar.Swap.to_json", false]], "to_json() (lambeq.backend.grammar.ty method)": [[34, "lambeq.backend.grammar.Ty.to_json", false]], "to_json() (lambeq.backend.grammar.word method)": [[34, "lambeq.backend.grammar.Word.to_json", false]], "to_json() (lambeq.backend.quantum.anticonjugate method)": [[34, "lambeq.backend.quantum.AntiConjugate.to_json", false]], "to_json() (lambeq.backend.quantum.bit method)": [[34, "lambeq.backend.quantum.Bit.to_json", false]], "to_json() (lambeq.backend.quantum.box method)": [[34, "lambeq.backend.quantum.Box.to_json", false]], "to_json() (lambeq.backend.quantum.bra method)": [[34, "lambeq.backend.quantum.Bra.to_json", false]], "to_json() (lambeq.backend.quantum.controlled method)": [[34, "lambeq.backend.quantum.Controlled.to_json", false]], "to_json() (lambeq.backend.quantum.daggered method)": [[34, "lambeq.backend.quantum.Daggered.to_json", false]], "to_json() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.to_json", false]], "to_json() (lambeq.backend.quantum.discard method)": [[34, "lambeq.backend.quantum.Discard.to_json", false]], "to_json() (lambeq.backend.quantum.encode method)": [[34, "lambeq.backend.quantum.Encode.to_json", false]], "to_json() (lambeq.backend.quantum.ket method)": [[34, "lambeq.backend.quantum.Ket.to_json", false]], "to_json() (lambeq.backend.quantum.layer method)": [[34, "lambeq.backend.quantum.Layer.to_json", false]], "to_json() (lambeq.backend.quantum.measure method)": [[34, "lambeq.backend.quantum.Measure.to_json", false]], "to_json() (lambeq.backend.quantum.mixedstate method)": [[34, "lambeq.backend.quantum.MixedState.to_json", false]], "to_json() (lambeq.backend.quantum.parametrized method)": [[34, "lambeq.backend.quantum.Parametrized.to_json", false]], "to_json() (lambeq.backend.quantum.rotation method)": [[34, "lambeq.backend.quantum.Rotation.to_json", false]], "to_json() (lambeq.backend.quantum.rx method)": [[34, "lambeq.backend.quantum.Rx.to_json", false]], "to_json() (lambeq.backend.quantum.ry method)": [[34, "lambeq.backend.quantum.Ry.to_json", false]], "to_json() (lambeq.backend.quantum.rz method)": [[34, "lambeq.backend.quantum.Rz.to_json", false]], "to_json() (lambeq.backend.quantum.scalar method)": [[34, "lambeq.backend.quantum.Scalar.to_json", false]], "to_json() (lambeq.backend.quantum.selfconjugate method)": [[34, "lambeq.backend.quantum.SelfConjugate.to_json", false]], "to_json() (lambeq.backend.quantum.sqrt method)": [[34, "lambeq.backend.quantum.Sqrt.to_json", false]], "to_json() (lambeq.backend.quantum.swap method)": [[34, "lambeq.backend.quantum.Swap.to_json", false]], "to_json() (lambeq.backend.quantum.ty method)": [[34, "lambeq.backend.quantum.Ty.to_json", false]], "to_json() (lambeq.backend.tensor.box method)": [[34, "lambeq.backend.tensor.Box.to_json", false]], "to_json() (lambeq.backend.tensor.cap method)": [[34, "lambeq.backend.tensor.Cap.to_json", false]], "to_json() (lambeq.backend.tensor.cup method)": [[34, "lambeq.backend.tensor.Cup.to_json", false]], "to_json() (lambeq.backend.tensor.daggered method)": [[34, "lambeq.backend.tensor.Daggered.to_json", false]], "to_json() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.to_json", false]], "to_json() (lambeq.backend.tensor.dim method)": [[34, "lambeq.backend.tensor.Dim.to_json", false]], "to_json() (lambeq.backend.tensor.layer method)": [[34, "lambeq.backend.tensor.Layer.to_json", false]], "to_json() (lambeq.backend.tensor.spider method)": [[34, "lambeq.backend.tensor.Spider.to_json", false]], "to_json() (lambeq.backend.tensor.swap method)": [[34, "lambeq.backend.tensor.Swap.to_json", false]], "to_json() (lambeq.ccgtree method)": [[53, "lambeq.CCGTree.to_json", false]], "to_json() (lambeq.text2diagram.ccgtree method)": [[37, "lambeq.text2diagram.CCGTree.to_json", false]], "to_latex_file() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.to_latex_file", false]], "to_left() (lambeq.backend.grammar.cap class method)": [[34, "lambeq.backend.grammar.Cap.to_left", false]], "to_left() (lambeq.backend.grammar.cup class method)": [[34, "lambeq.backend.grammar.Cup.to_left", false]], "to_left() (lambeq.backend.tensor.cap class method)": [[34, "lambeq.backend.tensor.Cap.to_left", false]], "to_left() (lambeq.backend.tensor.cup class method)": [[34, "lambeq.backend.tensor.Cup.to_left", false]], "to_pennylane() (in module lambeq.backend.pennylane)": [[34, "lambeq.backend.pennylane.to_pennylane", false]], "to_pennylane() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.to_pennylane", false]], "to_right() (lambeq.backend.grammar.cap class method)": [[34, "lambeq.backend.grammar.Cap.to_right", false]], "to_right() (lambeq.backend.grammar.cup class method)": [[34, "lambeq.backend.grammar.Cup.to_right", false]], "to_right() (lambeq.backend.tensor.cap class method)": [[34, "lambeq.backend.tensor.Cap.to_right", false]], "to_right() (lambeq.backend.tensor.cup class method)": [[34, "lambeq.backend.tensor.Cup.to_right", false]], "to_string() (lambeq.ccgtype method)": [[53, "lambeq.CCGType.to_string", false]], "to_string() (lambeq.text2diagram.ccgtype method)": [[37, "lambeq.text2diagram.CCGType.to_string", false]], "to_tk() (in module lambeq.backend.converters.tk)": [[34, "lambeq.backend.converters.tk.to_tk", false]], "to_tk() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.to_tk", false]], "to_tn() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.to_tn", false]], "to_tn() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.to_tn", false]], "tokenise_sentence() (lambeq.tokeniser method)": [[53, "lambeq.Tokeniser.tokenise_sentence", false]], "tokenise_sentence() (lambeq.tokeniser.spacytokeniser method)": [[38, "lambeq.tokeniser.SpacyTokeniser.tokenise_sentence", false]], "tokenise_sentence() (lambeq.tokeniser.tokeniser method)": [[38, "lambeq.tokeniser.Tokeniser.tokenise_sentence", false]], "tokenise_sentences() (lambeq.spacytokeniser method)": [[53, "lambeq.SpacyTokeniser.tokenise_sentences", false]], "tokenise_sentences() (lambeq.tokeniser method)": [[53, "lambeq.Tokeniser.tokenise_sentences", false]], "tokenise_sentences() (lambeq.tokeniser.spacytokeniser method)": [[38, "lambeq.tokeniser.SpacyTokeniser.tokenise_sentences", false]], "tokenise_sentences() (lambeq.tokeniser.tokeniser method)": [[38, "lambeq.tokeniser.Tokeniser.tokenise_sentences", false]], "tokeniser (class in lambeq)": [[53, "lambeq.Tokeniser", false]], "tokeniser (class in lambeq.tokeniser)": [[38, "lambeq.tokeniser.Tokeniser", false]], "train() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.train", false]], "train() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.train", false]], "train() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.train", false]], "train_costs (lambeq.pytorchtrainer attribute)": [[53, "lambeq.PytorchTrainer.train_costs", false]], "train_costs (lambeq.quantumtrainer attribute)": [[53, "lambeq.QuantumTrainer.train_costs", false]], "train_durations (lambeq.pytorchtrainer attribute)": [[53, "lambeq.PytorchTrainer.train_durations", false]], "train_durations (lambeq.quantumtrainer attribute)": [[53, "lambeq.QuantumTrainer.train_durations", false]], "train_epoch_costs (lambeq.pytorchtrainer attribute)": [[53, "lambeq.PytorchTrainer.train_epoch_costs", false]], "train_epoch_costs (lambeq.quantumtrainer attribute)": [[53, "lambeq.QuantumTrainer.train_epoch_costs", false]], "train_epoch_durations (lambeq.pytorchtrainer attribute)": [[53, "lambeq.PytorchTrainer.train_epoch_durations", false]], "train_epoch_durations (lambeq.quantumtrainer attribute)": [[53, "lambeq.QuantumTrainer.train_epoch_durations", false]], "train_eval_results (lambeq.pytorchtrainer attribute)": [[53, "lambeq.PytorchTrainer.train_eval_results", false]], "train_eval_results (lambeq.quantumtrainer attribute)": [[53, "lambeq.QuantumTrainer.train_eval_results", false]], "trainer": [[29, "term-trainer", true]], "trainer (class in lambeq)": [[53, "lambeq.Trainer", false]], "trainer (class in lambeq.training)": [[39, "lambeq.training.Trainer", false]], "training (lambeq.bobcat.bertforchartclassification attribute)": [[35, "lambeq.bobcat.BertForChartClassification.training", false]], "training (lambeq.pennylanemodel attribute)": [[53, "lambeq.PennyLaneModel.training", false]], "training (lambeq.pytorchmodel attribute)": [[53, "lambeq.PytorchModel.training", false]], "training (lambeq.training.pennylanemodel attribute)": [[39, "lambeq.training.PennyLaneModel.training", false]], "training (lambeq.training.pytorchmodel attribute)": [[39, "lambeq.training.PytorchModel.training", false]], "training_step() (lambeq.pytorchtrainer method)": [[53, "lambeq.PytorchTrainer.training_step", false]], "training_step() (lambeq.quantumtrainer method)": [[53, "lambeq.QuantumTrainer.training_step", false]], "training_step() (lambeq.trainer method)": [[53, "lambeq.Trainer.training_step", false]], "training_step() (lambeq.training.pytorchtrainer method)": [[39, "lambeq.training.PytorchTrainer.training_step", false]], "training_step() (lambeq.training.quantumtrainer method)": [[39, "lambeq.training.QuantumTrainer.training_step", false]], "training_step() (lambeq.training.trainer method)": [[39, "lambeq.training.Trainer.training_step", false]], "translate() (lambeq.bobcat.category method)": [[35, "lambeq.bobcat.Category.translate", false]], "translate() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.translate", false]], "transpose() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.transpose", false]], "transpose() (lambeq.backend.grammar.diagram method)": [[34, "lambeq.backend.grammar.Diagram.transpose", false]], "transpose() (lambeq.backend.quantum.diagram method)": [[34, "lambeq.backend.quantum.Diagram.transpose", false]], "transpose() (lambeq.backend.tensor.diagram method)": [[34, "lambeq.backend.tensor.Diagram.transpose", false]], "tree reader": [[29, "term-tree-reader", true]], "tree2diagram() (lambeq.text2diagram.treereader static method)": [[37, "lambeq.text2diagram.TreeReader.tree2diagram", false]], "tree2diagram() (lambeq.treereader static method)": [[53, "lambeq.TreeReader.tree2diagram", false]], "treereader (class in lambeq)": [[53, "lambeq.TreeReader", false]], "treereader (class in lambeq.text2diagram)": [[37, "lambeq.text2diagram.TreeReader", false]], "treereadermode (class in lambeq)": [[53, "lambeq.TreeReaderMode", false]], "treereadermode (class in lambeq.text2diagram)": [[37, "lambeq.text2diagram.TreeReaderMode", false]], "ty (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Ty", false]], "ty (class in lambeq.backend.quantum)": [[34, "lambeq.backend.quantum.Ty", false]], "ty (lambeq.backend.grammar.category attribute)": [[34, "lambeq.backend.grammar.Category.Ty", false]], "ty_d2l() (in module lambeq.backend.converters.discopy)": [[34, "lambeq.backend.converters.discopy.ty_d2l", false]], "ty_l2d() (in module lambeq.backend.converters.discopy)": [[34, "lambeq.backend.converters.discopy.ty_l2d", false]], "type (lambeq.backend.grammar.spider attribute)": [[34, "lambeq.backend.grammar.Spider.type", false]], "type (lambeq.backend.quantum.swap attribute)": [[34, "lambeq.backend.quantum.Swap.type", false]], "type (lambeq.backend.tensor.spider attribute)": [[34, "lambeq.backend.tensor.Spider.type", false]], "type() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.type", false]], "type() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.type", false]], "type() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.type", false]], "type_changing_rules (lambeq.bobcat.grammar attribute)": [[35, "lambeq.bobcat.Grammar.type_changing_rules", false]], "type_raising_dep_var (lambeq.bobcat.category attribute)": [[35, "lambeq.bobcat.Category.type_raising_dep_var", false]], "type_raising_rules (lambeq.bobcat.grammar attribute)": [[35, "lambeq.bobcat.Grammar.type_raising_rules", false]], "u1() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.U1", false]], "u2() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.U2", false]], "u3() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.U3", false]], "unary (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.UNARY", false]], "unary (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.UNARY", false]], "under() (lambeq.ccgtype method)": [[53, "lambeq.CCGType.under", false]], "under() (lambeq.text2diagram.ccgtype method)": [[37, "lambeq.text2diagram.CCGType.under", false]], "unfilled_deps (lambeq.bobcat.parsetree attribute)": [[35, "lambeq.bobcat.ParseTree.unfilled_deps", false]], "unifycodomainrewriter (class in lambeq)": [[53, "lambeq.UnifyCodomainRewriter", false]], "unifycodomainrewriter (class in lambeq.rewrite)": [[36, "lambeq.rewrite.UnifyCodomainRewriter", false]], "unknown (lambeq.ccgrule attribute)": [[53, "lambeq.CCGRule.UNKNOWN", false]], "unknown (lambeq.text2diagram.ccgrule attribute)": [[37, "lambeq.text2diagram.CCGRule.UNKNOWN", false]], "unknownwordsrewriterule (class in lambeq)": [[53, "lambeq.UnknownWordsRewriteRule", false]], "unknownwordsrewriterule (class in lambeq.rewrite)": [[36, "lambeq.rewrite.UnknownWordsRewriteRule", false]], "unpack() (lambeq.backend.grammar.layer method)": [[34, "lambeq.backend.grammar.Layer.unpack", false]], "unpack() (lambeq.backend.quantum.layer method)": [[34, "lambeq.backend.quantum.Layer.unpack", false]], "unpack() (lambeq.backend.tensor.layer method)": [[34, "lambeq.backend.tensor.Layer.unpack", false]], "unwind() (lambeq.backend.grammar.box method)": [[34, "lambeq.backend.grammar.Box.unwind", false]], "unwind() (lambeq.backend.grammar.cap method)": [[34, "lambeq.backend.grammar.Cap.unwind", false]], "unwind() (lambeq.backend.grammar.cup method)": [[34, "lambeq.backend.grammar.Cup.unwind", false]], "unwind() (lambeq.backend.grammar.daggered method)": [[34, "lambeq.backend.grammar.Daggered.unwind", false]], "unwind() (lambeq.backend.grammar.spider method)": [[34, "lambeq.backend.grammar.Spider.unwind", false]], "unwind() (lambeq.backend.grammar.swap method)": [[34, "lambeq.backend.grammar.Swap.unwind", false]], "unwind() (lambeq.backend.grammar.ty method)": [[34, "lambeq.backend.grammar.Ty.unwind", false]], "unwind() (lambeq.backend.grammar.word method)": [[34, "lambeq.backend.grammar.Word.unwind", false]], "unwind() (lambeq.backend.quantum.anticonjugate method)": [[34, "lambeq.backend.quantum.AntiConjugate.unwind", false]], "unwind() (lambeq.backend.quantum.bit method)": [[34, "lambeq.backend.quantum.Bit.unwind", false]], "unwind() (lambeq.backend.quantum.box method)": [[34, "lambeq.backend.quantum.Box.unwind", false]], "unwind() (lambeq.backend.quantum.bra method)": [[34, "lambeq.backend.quantum.Bra.unwind", false]], "unwind() (lambeq.backend.quantum.controlled method)": [[34, "lambeq.backend.quantum.Controlled.unwind", false]], "unwind() (lambeq.backend.quantum.daggered method)": [[34, "lambeq.backend.quantum.Daggered.unwind", false]], "unwind() (lambeq.backend.quantum.discard method)": [[34, "lambeq.backend.quantum.Discard.unwind", false]], "unwind() (lambeq.backend.quantum.encode method)": [[34, "lambeq.backend.quantum.Encode.unwind", false]], "unwind() (lambeq.backend.quantum.ket method)": [[34, "lambeq.backend.quantum.Ket.unwind", false]], "unwind() (lambeq.backend.quantum.measure method)": [[34, "lambeq.backend.quantum.Measure.unwind", false]], "unwind() (lambeq.backend.quantum.mixedstate method)": [[34, "lambeq.backend.quantum.MixedState.unwind", false]], "unwind() (lambeq.backend.quantum.parametrized method)": [[34, "lambeq.backend.quantum.Parametrized.unwind", false]], "unwind() (lambeq.backend.quantum.rotation method)": [[34, "lambeq.backend.quantum.Rotation.unwind", false]], "unwind() (lambeq.backend.quantum.rx method)": [[34, "lambeq.backend.quantum.Rx.unwind", false]], "unwind() (lambeq.backend.quantum.ry method)": [[34, "lambeq.backend.quantum.Ry.unwind", false]], "unwind() (lambeq.backend.quantum.rz method)": [[34, "lambeq.backend.quantum.Rz.unwind", false]], "unwind() (lambeq.backend.quantum.scalar method)": [[34, "lambeq.backend.quantum.Scalar.unwind", false]], "unwind() (lambeq.backend.quantum.selfconjugate method)": [[34, "lambeq.backend.quantum.SelfConjugate.unwind", false]], "unwind() (lambeq.backend.quantum.sqrt method)": [[34, "lambeq.backend.quantum.Sqrt.unwind", false]], "unwind() (lambeq.backend.quantum.swap method)": [[34, "lambeq.backend.quantum.Swap.unwind", false]], "unwind() (lambeq.backend.quantum.ty method)": [[34, "lambeq.backend.quantum.Ty.unwind", false]], "unwind() (lambeq.backend.tensor.box method)": [[34, "lambeq.backend.tensor.Box.unwind", false]], "unwind() (lambeq.backend.tensor.cap method)": [[34, "lambeq.backend.tensor.Cap.unwind", false]], "unwind() (lambeq.backend.tensor.cup method)": [[34, "lambeq.backend.tensor.Cup.unwind", false]], "unwind() (lambeq.backend.tensor.daggered method)": [[34, "lambeq.backend.tensor.Daggered.unwind", false]], "unwind() (lambeq.backend.tensor.dim method)": [[34, "lambeq.backend.tensor.Dim.unwind", false]], "unwind() (lambeq.backend.tensor.spider method)": [[34, "lambeq.backend.tensor.Spider.unwind", false]], "unwind() (lambeq.backend.tensor.swap method)": [[34, "lambeq.backend.tensor.Swap.unwind", false]], "update_hyper_params() (lambeq.neldermeadoptimizer method)": [[53, "lambeq.NelderMeadOptimizer.update_hyper_params", false]], "update_hyper_params() (lambeq.spsaoptimizer method)": [[53, "lambeq.SPSAOptimizer.update_hyper_params", false]], "update_hyper_params() (lambeq.training.neldermeadoptimizer method)": [[39, "lambeq.training.NelderMeadOptimizer.update_hyper_params", false]], "update_hyper_params() (lambeq.training.spsaoptimizer method)": [[39, "lambeq.training.SPSAOptimizer.update_hyper_params", false]], "upgrade() (lambeq.backend.converters.tk.circuit static method)": [[34, "lambeq.backend.converters.tk.Circuit.upgrade", false]], "upper() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.upper", false]], "v() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.V", false]], "val_costs (lambeq.pytorchtrainer attribute)": [[53, "lambeq.PytorchTrainer.val_costs", false]], "val_costs (lambeq.quantumtrainer attribute)": [[53, "lambeq.QuantumTrainer.val_costs", false]], "val_durations (lambeq.pytorchtrainer attribute)": [[53, "lambeq.PytorchTrainer.val_durations", false]], "val_durations (lambeq.quantumtrainer attribute)": [[53, "lambeq.QuantumTrainer.val_durations", false]], "val_eval_results (lambeq.pytorchtrainer attribute)": [[53, "lambeq.PytorchTrainer.val_eval_results", false]], "val_eval_results (lambeq.quantumtrainer attribute)": [[53, "lambeq.QuantumTrainer.val_eval_results", false]], "valid_connectivity() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.valid_connectivity", false]], "validation_step() (lambeq.pytorchtrainer method)": [[53, "lambeq.PytorchTrainer.validation_step", false]], "validation_step() (lambeq.quantumtrainer method)": [[53, "lambeq.QuantumTrainer.validation_step", false]], "validation_step() (lambeq.trainer method)": [[53, "lambeq.Trainer.validation_step", false]], "validation_step() (lambeq.training.pytorchtrainer method)": [[39, "lambeq.training.PytorchTrainer.validation_step", false]], "validation_step() (lambeq.training.quantumtrainer method)": [[39, "lambeq.training.QuantumTrainer.validation_step", false]], "validation_step() (lambeq.training.trainer method)": [[39, "lambeq.training.Trainer.validation_step", false]], "values() (lambeq.training.checkpoint method)": [[39, "lambeq.training.Checkpoint.values", false]], "var (lambeq.bobcat.category attribute)": [[35, "lambeq.bobcat.Category.var", false]], "var_map (lambeq.bobcat.parsetree attribute)": [[35, "lambeq.bobcat.ParseTree.var_map", false]], "variable (lambeq.bobcat.parsetree property)": [[35, "lambeq.bobcat.ParseTree.variable", false]], "vdg() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.Vdg", false]], "verbositylevel (class in lambeq)": [[53, "lambeq.VerbosityLevel", false]], "warn_if_padding_and_no_attention_mask() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.warn_if_padding_and_no_attention_mask", false]], "webparseerror": [[37, "lambeq.text2diagram.WebParseError", false], [53, "lambeq.WebParseError", false]], "webparser (class in lambeq)": [[53, "lambeq.WebParser", false]], "webparser (class in lambeq.text2diagram)": [[37, "lambeq.text2diagram.WebParser", false]], "weights (lambeq.numpymodel attribute)": [[53, "lambeq.NumpyModel.weights", false]], "weights (lambeq.pennylanemodel attribute)": [[53, "lambeq.PennyLaneModel.weights", false]], "weights (lambeq.pytorchmodel attribute)": [[53, "lambeq.PytorchModel.weights", false]], "weights (lambeq.quantummodel attribute)": [[53, "lambeq.QuantumModel.weights", false]], "weights (lambeq.tketmodel attribute)": [[53, "lambeq.TketModel.weights", false]], "weights (lambeq.training.numpymodel attribute)": [[39, "lambeq.training.NumpyModel.weights", false]], "weights (lambeq.training.pennylanemodel attribute)": [[39, "lambeq.training.PennyLaneModel.weights", false]], "weights (lambeq.training.pytorchmodel attribute)": [[39, "lambeq.training.PytorchModel.weights", false]], "weights (lambeq.training.quantummodel attribute)": [[39, "lambeq.training.QuantumModel.weights", false]], "weights (lambeq.training.tketmodel attribute)": [[39, "lambeq.training.TketModel.weights", false]], "wire_endpoints (lambeq.backend.drawing.drawablediagram attribute)": [[34, "lambeq.backend.drawing.DrawableDiagram.wire_endpoints", false]], "wires (lambeq.backend.drawing.drawablediagram attribute)": [[34, "lambeq.backend.drawing.DrawableDiagram.wires", false]], "with_traceback() (lambeq.backend.snake_removal.interchangererror method)": [[34, "lambeq.backend.snake_removal.InterchangerError.with_traceback", false]], "with_traceback() (lambeq.text2diagram.bobcatparseerror method)": [[37, "lambeq.text2diagram.BobcatParseError.with_traceback", false]], "with_traceback() (lambeq.text2diagram.ccgbankparseerror method)": [[37, "lambeq.text2diagram.CCGBankParseError.with_traceback", false]], "with_traceback() (lambeq.text2diagram.ccgruleuseerror method)": [[37, "lambeq.text2diagram.CCGRuleUseError.with_traceback", false]], "with_traceback() (lambeq.text2diagram.depccgparseerror method)": [[37, "lambeq.text2diagram.DepCCGParseError.with_traceback", false]], "with_traceback() (lambeq.text2diagram.webparseerror method)": [[37, "lambeq.text2diagram.WebParseError.with_traceback", false]], "without_trivial_unary_rules() (lambeq.ccgtree method)": [[53, "lambeq.CCGTree.without_trivial_unary_rules", false]], "without_trivial_unary_rules() (lambeq.text2diagram.ccgtree method)": [[37, "lambeq.text2diagram.CCGTree.without_trivial_unary_rules", false]], "word (class in lambeq.backend.grammar)": [[34, "lambeq.backend.grammar.Word", false]], "word (lambeq.bobcat.parsetree property)": [[35, "lambeq.bobcat.ParseTree.word", false]], "word-sequence model": [[29, "term-word-sequence-model", true]], "word_sequence_reader (in module lambeq.text2diagram)": [[37, "lambeq.text2diagram.word_sequence_reader", false]], "words (lambeq.bobcat.sentence attribute)": [[35, "lambeq.bobcat.Sentence.words", false]], "x() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.X", false]], "xpu() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.xpu", false]], "xpu() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.xpu", false]], "xpu() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.xpu", false]], "xxphase() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.XXPhase", false]], "xxphase3() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.XXPhase3", false]], "y() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.Y", false]], "yyphase() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.YYPhase", false]], "z (lambeq.backend.grammar.box attribute)": [[34, "lambeq.backend.grammar.Box.z", false]], "z (lambeq.backend.grammar.cap attribute)": [[34, "lambeq.backend.grammar.Cap.z", false]], "z (lambeq.backend.grammar.cup attribute)": [[34, "lambeq.backend.grammar.Cup.z", false]], "z (lambeq.backend.grammar.daggered attribute)": [[34, "lambeq.backend.grammar.Daggered.z", false]], "z (lambeq.backend.grammar.spider attribute)": [[34, "lambeq.backend.grammar.Spider.z", false]], "z (lambeq.backend.grammar.swap attribute)": [[34, "lambeq.backend.grammar.Swap.z", false]], "z (lambeq.backend.grammar.ty attribute)": [[34, "lambeq.backend.grammar.Ty.z", false]], "z (lambeq.backend.grammar.word attribute)": [[34, "lambeq.backend.grammar.Word.z", false]], "z (lambeq.backend.quantum.anticonjugate attribute)": [[34, "lambeq.backend.quantum.AntiConjugate.z", false]], "z (lambeq.backend.quantum.bit attribute)": [[34, "lambeq.backend.quantum.Bit.z", false]], "z (lambeq.backend.quantum.box attribute)": [[34, "lambeq.backend.quantum.Box.z", false]], "z (lambeq.backend.quantum.bra attribute)": [[34, "lambeq.backend.quantum.Bra.z", false]], "z (lambeq.backend.quantum.controlled attribute)": [[34, "lambeq.backend.quantum.Controlled.z", false]], "z (lambeq.backend.quantum.daggered attribute)": [[34, "lambeq.backend.quantum.Daggered.z", false]], "z (lambeq.backend.quantum.discard attribute)": [[34, "lambeq.backend.quantum.Discard.z", false]], "z (lambeq.backend.quantum.encode attribute)": [[34, "lambeq.backend.quantum.Encode.z", false]], "z (lambeq.backend.quantum.ket attribute)": [[34, "lambeq.backend.quantum.Ket.z", false]], "z (lambeq.backend.quantum.measure attribute)": [[34, "lambeq.backend.quantum.Measure.z", false]], "z (lambeq.backend.quantum.mixedstate attribute)": [[34, "lambeq.backend.quantum.MixedState.z", false]], "z (lambeq.backend.quantum.parametrized attribute)": [[34, "lambeq.backend.quantum.Parametrized.z", false]], "z (lambeq.backend.quantum.rotation attribute)": [[34, "lambeq.backend.quantum.Rotation.z", false]], "z (lambeq.backend.quantum.rx attribute)": [[34, "lambeq.backend.quantum.Rx.z", false]], "z (lambeq.backend.quantum.ry attribute)": [[34, "lambeq.backend.quantum.Ry.z", false]], "z (lambeq.backend.quantum.rz attribute)": [[34, "lambeq.backend.quantum.Rz.z", false]], "z (lambeq.backend.quantum.scalar attribute)": [[34, "lambeq.backend.quantum.Scalar.z", false]], "z (lambeq.backend.quantum.selfconjugate attribute)": [[34, "lambeq.backend.quantum.SelfConjugate.z", false]], "z (lambeq.backend.quantum.sqrt attribute)": [[34, "lambeq.backend.quantum.Sqrt.z", false]], "z (lambeq.backend.quantum.swap attribute)": [[34, "lambeq.backend.quantum.Swap.z", false]], "z (lambeq.backend.quantum.ty attribute)": [[34, "lambeq.backend.quantum.Ty.z", false]], "z (lambeq.backend.tensor.box attribute)": [[34, "lambeq.backend.tensor.Box.z", false]], "z (lambeq.backend.tensor.cap attribute)": [[34, "lambeq.backend.tensor.Cap.z", false]], "z (lambeq.backend.tensor.cup attribute)": [[34, "lambeq.backend.tensor.Cup.z", false]], "z (lambeq.backend.tensor.daggered attribute)": [[34, "lambeq.backend.tensor.Daggered.z", false]], "z (lambeq.backend.tensor.dim attribute)": [[34, "lambeq.backend.tensor.Dim.z", false]], "z (lambeq.backend.tensor.spider attribute)": [[34, "lambeq.backend.tensor.Spider.z", false]], "z (lambeq.backend.tensor.swap attribute)": [[34, "lambeq.backend.tensor.Swap.z", false]], "z() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.Z", false]], "zero_grad() (lambeq.bobcat.bertforchartclassification method)": [[35, "lambeq.bobcat.BertForChartClassification.zero_grad", false]], "zero_grad() (lambeq.optimizer method)": [[53, "lambeq.Optimizer.zero_grad", false]], "zero_grad() (lambeq.training.neldermeadoptimizer method)": [[39, "lambeq.training.NelderMeadOptimizer.zero_grad", false]], "zero_grad() (lambeq.training.optimizer method)": [[39, "lambeq.training.Optimizer.zero_grad", false]], "zero_grad() (lambeq.training.pennylanemodel method)": [[39, "lambeq.training.PennyLaneModel.zero_grad", false]], "zero_grad() (lambeq.training.pytorchmodel method)": [[39, "lambeq.training.PytorchModel.zero_grad", false]], "zero_grad() (lambeq.training.rotosolveoptimizer method)": [[39, "lambeq.training.RotosolveOptimizer.zero_grad", false]], "zero_grad() (lambeq.training.spsaoptimizer method)": [[39, "lambeq.training.SPSAOptimizer.zero_grad", false]], "zfill() (lambeq.text2diagram.ccgrule method)": [[37, "lambeq.text2diagram.CCGRule.zfill", false]], "zzmax() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.ZZMax", false]], "zzphase() (lambeq.backend.converters.tk.circuit method)": [[34, "lambeq.backend.converters.tk.Circuit.ZZPhase", false]]}, "objects": {"": [[53, 0, 0, "-", "lambeq"]], "lambeq": [[53, 1, 1, "", "AtomicType"], [53, 1, 1, "", "BaseAnsatz"], [53, 1, 1, "", "BinaryCrossEntropyLoss"], [53, 4, 1, "", "BobcatParseError"], [53, 1, 1, "", "BobcatParser"], [53, 4, 1, "", "CCGBankParseError"], [53, 1, 1, "", "CCGBankParser"], [53, 1, 1, "", "CCGParser"], [53, 1, 1, "", "CCGRule"], [53, 4, 1, "", "CCGRuleUseError"], [53, 1, 1, "", "CCGTree"], [53, 1, 1, "", "CCGType"], [53, 1, 1, "", "Checkpoint"], [53, 1, 1, "", "CircuitAnsatz"], [53, 1, 1, "", "CoordinationRewriteRule"], [53, 1, 1, "", "CrossEntropyLoss"], [53, 1, 1, "", "CurryRewriteRule"], [53, 1, 1, "", "Dataset"], [53, 4, 1, "", "DepCCGParseError"], [53, 1, 1, "", "DepCCGParser"], [53, 1, 1, "", "DiagramRewriter"], [53, 1, 1, "", "IQPAnsatz"], [53, 1, 1, "", "LinearReader"], [53, 1, 1, "", "LossFunction"], [53, 1, 1, "", "MPSAnsatz"], [53, 1, 1, "", "MSELoss"], [53, 1, 1, "", "Model"], [53, 1, 1, "", "NelderMeadOptimizer"], [53, 1, 1, "", "NumpyModel"], [53, 1, 1, "", "Optimizer"], [53, 1, 1, "", "PennyLaneModel"], [53, 1, 1, "", "PytorchModel"], [53, 1, 1, "", "PytorchTrainer"], [53, 1, 1, "", "QuantumModel"], [53, 1, 1, "", "QuantumTrainer"], [53, 1, 1, "", "Reader"], [53, 1, 1, "", "RemoveCupsRewriter"], [53, 1, 1, "", "RemoveSwapsRewriter"], [53, 1, 1, "", "RewriteRule"], [53, 1, 1, "", "Rewriter"], [53, 1, 1, "", "RotosolveOptimizer"], [53, 1, 1, "", "SPSAOptimizer"], [53, 1, 1, "", "Sim14Ansatz"], [53, 1, 1, "", "Sim15Ansatz"], [53, 1, 1, "", "Sim4Ansatz"], [53, 1, 1, "", "SimpleRewriteRule"], [53, 1, 1, "", "SpacyTokeniser"], [53, 1, 1, "", "SpiderAnsatz"], [53, 1, 1, "", "StronglyEntanglingAnsatz"], [53, 1, 1, "", "Symbol"], [53, 1, 1, "", "TensorAnsatz"], [53, 1, 1, "", "TketModel"], [53, 1, 1, "", "Tokeniser"], [53, 1, 1, "", "Trainer"], [53, 1, 1, "", "TreeReader"], [53, 1, 1, "", "TreeReaderMode"], [53, 1, 1, "", "UnifyCodomainRewriter"], [53, 1, 1, "", "UnknownWordsRewriteRule"], [53, 1, 1, "", "VerbosityLevel"], [53, 4, 1, "", "WebParseError"], [53, 1, 1, "", "WebParser"], [33, 0, 0, "-", "ansatz"], [35, 0, 0, "-", "bobcat"], [36, 0, 0, "-", "rewrite"], [37, 0, 0, "-", "text2diagram"], [38, 0, 0, "-", "tokeniser"], [39, 0, 0, "-", "training"]], "lambeq.AtomicType": [[53, 2, 1, "", "CONJUNCTION"], [53, 2, 1, "", "NOUN"], [53, 2, 1, "", "NOUN_PHRASE"], [53, 2, 1, "", "PREPOSITIONAL_PHRASE"], [53, 2, 1, "", "PUNCTUATION"], [53, 2, 1, "", "SENTENCE"]], "lambeq.BaseAnsatz": [[53, 3, 1, "", "__call__"], [53, 3, 1, "", "__init__"]], "lambeq.BinaryCrossEntropyLoss": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "calculate_loss"]], "lambeq.BobcatParseError": [[53, 3, 1, "", "__init__"]], "lambeq.BobcatParser": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "available_models"], [53, 3, 1, "", "sentences2trees"]], "lambeq.CCGBankParseError": [[53, 3, 1, "", "__init__"]], "lambeq.CCGBankParser": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "section2diagrams"], [53, 3, 1, "", "section2diagrams_gen"], [53, 3, 1, "", "section2trees"], [53, 3, 1, "", "section2trees_gen"], [53, 3, 1, "", "sentences2trees"]], "lambeq.CCGParser": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "sentence2diagram"], [53, 3, 1, "", "sentence2tree"], [53, 3, 1, "", "sentences2diagrams"], [53, 3, 1, "", "sentences2trees"]], "lambeq.CCGRule": [[53, 2, 1, "", "BACKWARD_APPLICATION"], [53, 2, 1, "", "BACKWARD_COMPOSITION"], [53, 2, 1, "", "BACKWARD_CROSSED_COMPOSITION"], [53, 2, 1, "", "BACKWARD_TYPE_RAISING"], [53, 2, 1, "", "CONJUNCTION"], [53, 2, 1, "", "FORWARD_APPLICATION"], [53, 2, 1, "", "FORWARD_COMPOSITION"], [53, 2, 1, "", "FORWARD_CROSSED_COMPOSITION"], [53, 2, 1, "", "FORWARD_TYPE_RAISING"], [53, 2, 1, "", "GENERALIZED_BACKWARD_COMPOSITION"], [53, 2, 1, "", "GENERALIZED_BACKWARD_CROSSED_COMPOSITION"], [53, 2, 1, "", "GENERALIZED_FORWARD_COMPOSITION"], [53, 2, 1, "", "GENERALIZED_FORWARD_CROSSED_COMPOSITION"], [53, 2, 1, "", "LEXICAL"], [53, 2, 1, "", "REMOVE_PUNCTUATION_LEFT"], [53, 2, 1, "", "REMOVE_PUNCTUATION_RIGHT"], [53, 2, 1, "", "UNARY"], [53, 2, 1, "", "UNKNOWN"], [53, 3, 1, "", "__call__"], [53, 3, 1, "", "apply"], [53, 3, 1, "", "check_match"], [53, 3, 1, "", "infer_rule"], [53, 3, 1, "", "resolve"], [53, 5, 1, "", "symbol"]], "lambeq.CCGRuleUseError": [[53, 3, 1, "", "__init__"]], "lambeq.CCGTree": [[53, 3, 1, "", "__init__"], [53, 5, 1, "", "child"], [53, 3, 1, "", "collapse_noun_phrases"], [53, 3, 1, "", "deriv"], [53, 3, 1, "", "from_json"], [53, 5, 1, "", "left"], [53, 5, 1, "", "right"], [53, 5, 1, "", "text"], [53, 3, 1, "", "to_diagram"], [53, 3, 1, "", "to_json"], [53, 3, 1, "", "without_trivial_unary_rules"]], "lambeq.CCGType": [[53, 2, 1, "", "CONJUNCTION"], [53, 2, 1, "", "CONJ_TAG"], [53, 2, 1, "", "NOUN"], [53, 2, 1, "", "NOUN_PHRASE"], [53, 2, 1, "", "PREPOSITIONAL_PHRASE"], [53, 2, 1, "", "PUNCTUATION"], [53, 2, 1, "", "SENTENCE"], [53, 3, 1, "", "__init__"], [53, 5, 1, "", "argument"], [53, 5, 1, "", "direction"], [53, 2, 1, "", "is_atomic"], [53, 2, 1, "", "is_complex"], [53, 5, 1, "", "is_conjoinable"], [53, 2, 1, "", "is_empty"], [53, 2, 1, "", "is_over"], [53, 2, 1, "", "is_under"], [53, 5, 1, "", "left"], [53, 5, 1, "", "name"], [53, 3, 1, "", "over"], [53, 3, 1, "", "parse"], [53, 3, 1, "", "replace"], [53, 3, 1, "", "replace_result"], [53, 5, 1, "", "result"], [53, 5, 1, "", "right"], [53, 3, 1, "", "slash"], [53, 3, 1, "", "split"], [53, 3, 1, "", "to_grammar"], [53, 3, 1, "", "to_string"], [53, 3, 1, "", "under"]], "lambeq.Checkpoint": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "add_many"], [53, 3, 1, "", "from_file"], [53, 3, 1, "", "to_file"]], "lambeq.CircuitAnsatz": [[53, 3, 1, "", "__call__"], [53, 3, 1, "", "__init__"], [53, 3, 1, "", "ob_size"], [53, 3, 1, "", "params_shape"]], "lambeq.CoordinationRewriteRule": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "matches"], [53, 3, 1, "", "rewrite"]], "lambeq.CrossEntropyLoss": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "calculate_loss"]], "lambeq.CurryRewriteRule": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "matches"], [53, 3, 1, "", "rewrite"]], "lambeq.Dataset": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "shuffle_data"]], "lambeq.DepCCGParseError": [[53, 3, 1, "", "__init__"]], "lambeq.DepCCGParser": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "sentence2diagram"], [53, 3, 1, "", "sentence2tree"], [53, 3, 1, "", "sentences2trees"]], "lambeq.DiagramRewriter": [[53, 3, 1, "", "__call__"], [53, 3, 1, "", "matches"], [53, 3, 1, "", "rewrite"]], "lambeq.IQPAnsatz": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "circuit"], [53, 3, 1, "", "params_shape"]], "lambeq.LinearReader": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "sentence2diagram"]], "lambeq.LossFunction": [[53, 3, 1, "", "__call__"], [53, 3, 1, "", "__init__"], [53, 3, 1, "", "calculate_loss"]], "lambeq.MPSAnsatz": [[53, 2, 1, "", "BOND_TYPE"], [53, 3, 1, "", "__call__"], [53, 3, 1, "", "__init__"]], "lambeq.MSELoss": [[53, 3, 1, "", "calculate_loss"]], "lambeq.Model": [[53, 3, 1, "", "__call__"], [53, 3, 1, "", "__init__"], [53, 3, 1, "", "forward"], [53, 3, 1, "", "from_checkpoint"], [53, 3, 1, "", "from_diagrams"], [53, 3, 1, "", "get_diagram_output"], [53, 3, 1, "", "initialise_weights"], [53, 3, 1, "", "load"], [53, 3, 1, "", "save"]], "lambeq.NelderMeadOptimizer": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "backward"], [53, 2, 1, "", "bounds"], [53, 3, 1, "", "load_state_dict"], [53, 2, 1, "", "model"], [53, 3, 1, "", "objective"], [53, 3, 1, "", "project"], [53, 3, 1, "", "state_dict"], [53, 3, 1, "", "step"], [53, 3, 1, "", "update_hyper_params"]], "lambeq.NumpyModel": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "forward"], [53, 3, 1, "", "get_diagram_output"], [53, 2, 1, "", "lambdas"], [53, 2, 1, "", "symbols"], [53, 2, 1, "", "weights"]], "lambeq.Optimizer": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "backward"], [53, 3, 1, "", "load_state_dict"], [53, 3, 1, "", "state_dict"], [53, 3, 1, "", "step"], [53, 3, 1, "", "zero_grad"]], "lambeq.PennyLaneModel": [[53, 3, 1, "", "__init__"], [53, 2, 1, "", "circuit_map"], [53, 3, 1, "", "forward"], [53, 3, 1, "", "from_diagrams"], [53, 3, 1, "", "get_diagram_output"], [53, 3, 1, "", "initialise_weights"], [53, 2, 1, "", "symbol_weight_map"], [53, 2, 1, "", "symbols"], [53, 2, 1, "", "training"], [53, 2, 1, "", "weights"]], "lambeq.PytorchModel": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "forward"], [53, 3, 1, "", "get_diagram_output"], [53, 3, 1, "", "initialise_weights"], [53, 2, 1, "", "symbols"], [53, 2, 1, "", "training"], [53, 2, 1, "", "weights"]], "lambeq.PytorchTrainer": [[53, 3, 1, "", "__init__"], [53, 2, 1, "", "model"], [53, 2, 1, "", "train_costs"], [53, 2, 1, "", "train_durations"], [53, 2, 1, "", "train_epoch_costs"], [53, 2, 1, "", "train_epoch_durations"], [53, 2, 1, "", "train_eval_results"], [53, 3, 1, "", "training_step"], [53, 2, 1, "", "val_costs"], [53, 2, 1, "", "val_durations"], [53, 2, 1, "", "val_eval_results"], [53, 3, 1, "", "validation_step"]], "lambeq.QuantumModel": [[53, 3, 1, "", "__call__"], [53, 3, 1, "", "__init__"], [53, 3, 1, "", "forward"], [53, 3, 1, "", "get_diagram_output"], [53, 3, 1, "", "initialise_weights"], [53, 2, 1, "", "symbols"], [53, 2, 1, "", "weights"]], "lambeq.QuantumTrainer": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "fit"], [53, 2, 1, "", "model"], [53, 2, 1, "", "train_costs"], [53, 2, 1, "", "train_durations"], [53, 2, 1, "", "train_epoch_costs"], [53, 2, 1, "", "train_epoch_durations"], [53, 2, 1, "", "train_eval_results"], [53, 3, 1, "", "training_step"], [53, 2, 1, "", "val_costs"], [53, 2, 1, "", "val_durations"], [53, 2, 1, "", "val_eval_results"], [53, 3, 1, "", "validation_step"]], "lambeq.Reader": [[53, 3, 1, "", "sentence2diagram"], [53, 3, 1, "", "sentences2diagrams"]], "lambeq.RemoveCupsRewriter": [[53, 3, 1, "", "matches"], [53, 3, 1, "", "rewrite"]], "lambeq.RemoveSwapsRewriter": [[53, 3, 1, "", "matches"], [53, 3, 1, "", "rewrite"]], "lambeq.RewriteRule": [[53, 3, 1, "", "__call__"], [53, 3, 1, "", "matches"], [53, 3, 1, "", "rewrite"]], "lambeq.Rewriter": [[53, 3, 1, "", "__call__"], [53, 3, 1, "", "__init__"], [53, 3, 1, "", "add_rules"], [53, 3, 1, "", "available_rules"]], "lambeq.RotosolveOptimizer": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "backward"], [53, 3, 1, "", "load_state_dict"], [53, 2, 1, "", "model"], [53, 3, 1, "", "project"], [53, 3, 1, "", "state_dict"], [53, 3, 1, "", "step"]], "lambeq.SPSAOptimizer": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "backward"], [53, 3, 1, "", "load_state_dict"], [53, 2, 1, "", "model"], [53, 2, 1, "", "project"], [53, 3, 1, "", "state_dict"], [53, 3, 1, "", "step"], [53, 3, 1, "", "update_hyper_params"]], "lambeq.Sim14Ansatz": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "circuit"], [53, 3, 1, "", "params_shape"]], "lambeq.Sim15Ansatz": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "circuit"], [53, 3, 1, "", "params_shape"]], "lambeq.Sim4Ansatz": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "circuit"], [53, 3, 1, "", "params_shape"]], "lambeq.SimpleRewriteRule": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "matches"], [53, 3, 1, "", "placeholder"], [53, 3, 1, "", "rewrite"]], "lambeq.SpacyTokeniser": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "split_sentences"], [53, 3, 1, "", "tokenise_sentences"]], "lambeq.SpiderAnsatz": [[53, 3, 1, "", "__call__"], [53, 3, 1, "", "__init__"]], "lambeq.StronglyEntanglingAnsatz": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "circuit"], [53, 3, 1, "", "params_shape"]], "lambeq.Symbol": [[53, 2, 1, "", "default_assumptions"], [53, 2, 1, "", "directed_cod"], [53, 2, 1, "", "directed_dom"], [53, 2, 1, "", "name"], [53, 5, 1, "", "size"], [53, 3, 1, "", "sort_key"]], "lambeq.TensorAnsatz": [[53, 3, 1, "", "__call__"], [53, 3, 1, "", "__init__"]], "lambeq.TketModel": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "forward"], [53, 3, 1, "", "get_diagram_output"], [53, 2, 1, "", "symbols"], [53, 2, 1, "", "weights"]], "lambeq.Tokeniser": [[53, 3, 1, "", "split_sentences"], [53, 3, 1, "", "tokenise_sentence"], [53, 3, 1, "", "tokenise_sentences"]], "lambeq.Trainer": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "fit"], [53, 3, 1, "", "load_training_checkpoint"], [53, 3, 1, "", "save_checkpoint"], [53, 3, 1, "", "training_step"], [53, 3, 1, "", "validation_step"]], "lambeq.TreeReader": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "available_modes"], [53, 3, 1, "", "sentence2diagram"], [53, 3, 1, "", "tree2diagram"]], "lambeq.TreeReaderMode": [[53, 2, 1, "", "HEIGHT"], [53, 2, 1, "", "NO_TYPE"], [53, 2, 1, "", "RULE_ONLY"], [53, 2, 1, "", "RULE_TYPE"]], "lambeq.UnifyCodomainRewriter": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "matches"], [53, 2, 1, "", "output_type"], [53, 3, 1, "", "rewrite"]], "lambeq.UnknownWordsRewriteRule": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "from_diagrams"], [53, 3, 1, "", "matches"], [53, 3, 1, "", "rewrite"]], "lambeq.VerbosityLevel": [[53, 2, 1, "", "PROGRESS"], [53, 2, 1, "", "SUPPRESS"], [53, 2, 1, "", "TEXT"], [53, 3, 1, "", "has_value"]], "lambeq.WebParseError": [[53, 3, 1, "", "__init__"]], "lambeq.WebParser": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "sentences2trees"]], "lambeq.ansatz": [[33, 1, 1, "", "BaseAnsatz"], [33, 1, 1, "", "CircuitAnsatz"], [33, 1, 1, "", "IQPAnsatz"], [33, 1, 1, "", "MPSAnsatz"], [33, 1, 1, "", "Sim14Ansatz"], [33, 1, 1, "", "Sim15Ansatz"], [33, 1, 1, "", "Sim4Ansatz"], [33, 1, 1, "", "SpiderAnsatz"], [33, 1, 1, "", "StronglyEntanglingAnsatz"], [33, 1, 1, "", "Symbol"], [33, 1, 1, "", "TensorAnsatz"]], "lambeq.ansatz.BaseAnsatz": [[33, 3, 1, "", "__call__"], [33, 3, 1, "", "__init__"]], "lambeq.ansatz.CircuitAnsatz": [[33, 3, 1, "", "__call__"], [33, 3, 1, "", "__init__"], [33, 3, 1, "", "ob_size"], [33, 3, 1, "", "params_shape"]], "lambeq.ansatz.IQPAnsatz": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "circuit"], [33, 3, 1, "", "params_shape"]], "lambeq.ansatz.MPSAnsatz": [[33, 2, 1, "", "BOND_TYPE"], [33, 3, 1, "", "__call__"], [33, 3, 1, "", "__init__"]], "lambeq.ansatz.Sim14Ansatz": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "circuit"], [33, 3, 1, "", "params_shape"]], "lambeq.ansatz.Sim15Ansatz": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "circuit"], [33, 3, 1, "", "params_shape"]], "lambeq.ansatz.Sim4Ansatz": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "circuit"], [33, 3, 1, "", "params_shape"]], "lambeq.ansatz.SpiderAnsatz": [[33, 3, 1, "", "__call__"], [33, 3, 1, "", "__init__"]], "lambeq.ansatz.StronglyEntanglingAnsatz": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "circuit"], [33, 3, 1, "", "params_shape"]], "lambeq.ansatz.Symbol": [[33, 2, 1, "", "default_assumptions"], [33, 2, 1, "", "directed_cod"], [33, 2, 1, "", "directed_dom"], [33, 2, 1, "", "name"], [33, 5, 1, "", "size"], [33, 3, 1, "", "sort_key"]], "lambeq.ansatz.TensorAnsatz": [[33, 3, 1, "", "__call__"], [33, 3, 1, "", "__init__"]], "lambeq.backend": [[34, 0, 0, "-", "drawing"], [34, 0, 0, "-", "grammar"], [34, 0, 0, "-", "numerical_backend"], [34, 0, 0, "-", "pennylane"], [34, 0, 0, "-", "quantum"], [34, 0, 0, "-", "snake_removal"], [34, 0, 0, "-", "tensor"]], "lambeq.backend.converters": [[34, 0, 0, "-", "discopy"], [34, 0, 0, "-", "tk"]], "lambeq.backend.converters.discopy": [[34, 6, 1, "", "box_d2l"], [34, 6, 1, "", "box_l2d"], [34, 6, 1, "", "convert_grammar_d2l"], [34, 6, 1, "", "convert_grammar_l2d"], [34, 6, 1, "", "convert_quantum_d2l"], [34, 6, 1, "", "convert_quantum_l2d"], [34, 6, 1, "", "convert_tensor_d2l"], [34, 6, 1, "", "convert_tensor_l2d"], [34, 6, 1, "", "from_discopy"], [34, 6, 1, "", "to_discopy"], [34, 6, 1, "", "ty_d2l"], [34, 6, 1, "", "ty_l2d"]], "lambeq.backend.converters.tk": [[34, 1, 1, "", "Circuit"], [34, 6, 1, "", "from_tk"], [34, 6, 1, "", "to_tk"]], "lambeq.backend.converters.tk.Circuit": [[34, 3, 1, "", "AAMS"], [34, 3, 1, "", "CCX"], [34, 3, 1, "", "CH"], [34, 3, 1, "", "CRx"], [34, 3, 1, "", "CRy"], [34, 3, 1, "", "CRz"], [34, 3, 1, "", "CS"], [34, 3, 1, "", "CSWAP"], [34, 3, 1, "", "CSX"], [34, 3, 1, "", "CSXdg"], [34, 3, 1, "", "CSdg"], [34, 3, 1, "", "CU1"], [34, 3, 1, "", "CU3"], [34, 3, 1, "", "CV"], [34, 3, 1, "", "CVdg"], [34, 3, 1, "", "CX"], [34, 3, 1, "", "CY"], [34, 3, 1, "", "CZ"], [34, 3, 1, "", "ECR"], [34, 3, 1, "", "ESWAP"], [34, 3, 1, "", "FSim"], [34, 3, 1, "", "GPI"], [34, 3, 1, "", "GPI2"], [34, 3, 1, "", "H"], [34, 3, 1, "", "ISWAP"], [34, 3, 1, "", "ISWAPMax"], [34, 3, 1, "", "Measure"], [34, 3, 1, "", "Phase"], [34, 3, 1, "", "PhasedISWAP"], [34, 3, 1, "", "PhasedX"], [34, 3, 1, "", "Reset"], [34, 3, 1, "", "Rx"], [34, 3, 1, "", "Ry"], [34, 3, 1, "", "Rz"], [34, 3, 1, "", "S"], [34, 3, 1, "", "SWAP"], [34, 3, 1, "", "SX"], [34, 3, 1, "", "SXdg"], [34, 3, 1, "", "Sdg"], [34, 3, 1, "", "Sycamore"], [34, 3, 1, "", "T"], [34, 3, 1, "", "TK1"], [34, 3, 1, "", "TK2"], [34, 3, 1, "", "Tdg"], [34, 3, 1, "", "U1"], [34, 3, 1, "", "U2"], [34, 3, 1, "", "U3"], [34, 3, 1, "", "V"], [34, 3, 1, "", "Vdg"], [34, 3, 1, "", "X"], [34, 3, 1, "", "XXPhase"], [34, 3, 1, "", "XXPhase3"], [34, 3, 1, "", "Y"], [34, 3, 1, "", "YYPhase"], [34, 3, 1, "", "Z"], [34, 3, 1, "", "ZZMax"], [34, 3, 1, "", "ZZPhase"], [34, 3, 1, "", "__init__"], [34, 3, 1, "", "add_assertion"], [34, 3, 1, "", "add_barrier"], [34, 3, 1, "", "add_bit"], [34, 3, 1, "", "add_blank_wires"], [34, 3, 1, "", "add_c_and"], [34, 3, 1, "", "add_c_and_to_registers"], [34, 3, 1, "", "add_c_copybits"], [34, 3, 1, "", "add_c_copyreg"], [34, 3, 1, "", "add_c_modifier"], [34, 3, 1, "", "add_c_not"], [34, 3, 1, "", "add_c_not_to_registers"], [34, 3, 1, "", "add_c_or"], [34, 3, 1, "", "add_c_or_to_registers"], [34, 3, 1, "", "add_c_predicate"], [34, 3, 1, "", "add_c_range_predicate"], [34, 3, 1, "", "add_c_register"], [34, 3, 1, "", "add_c_setbits"], [34, 3, 1, "", "add_c_setreg"], [34, 3, 1, "", "add_c_transform"], [34, 3, 1, "", "add_c_xor"], [34, 3, 1, "", "add_c_xor_to_registers"], [34, 3, 1, "", "add_circbox"], [34, 3, 1, "", "add_circbox_regwise"], [34, 3, 1, "", "add_circbox_with_regmap"], [34, 3, 1, "", "add_circuit"], [34, 3, 1, "", "add_classicalexpbox_bit"], [34, 3, 1, "", "add_classicalexpbox_register"], [34, 3, 1, "", "add_conditional_barrier"], [34, 3, 1, "", "add_conjugation_box"], [34, 3, 1, "", "add_custom_gate"], [34, 3, 1, "", "add_diagonal_box"], [34, 3, 1, "", "add_dummybox"], [34, 3, 1, "", "add_expbox"], [34, 3, 1, "", "add_gate"], [34, 3, 1, "", "add_multiplexed_tensored_u2"], [34, 3, 1, "", "add_multiplexedrotation"], [34, 3, 1, "", "add_multiplexedu2"], [34, 3, 1, "", "add_multiplexor"], [34, 3, 1, "", "add_pauliexpbox"], [34, 3, 1, "", "add_pauliexpcommutingsetbox"], [34, 3, 1, "", "add_pauliexppairbox"], [34, 3, 1, "", "add_phase"], [34, 3, 1, "", "add_phasepolybox"], [34, 3, 1, "", "add_q_register"], [34, 3, 1, "", "add_qcontrolbox"], [34, 3, 1, "", "add_qubit"], [34, 3, 1, "", "add_state_preparation_box"], [34, 3, 1, "", "add_termsequencebox"], [34, 3, 1, "", "add_toffolibox"], [34, 3, 1, "", "add_unitary1qbox"], [34, 3, 1, "", "add_unitary2qbox"], [34, 3, 1, "", "add_unitary3qbox"], [34, 3, 1, "", "add_wasm"], [34, 3, 1, "", "add_wasm_to_reg"], [34, 3, 1, "", "append"], [34, 5, 1, "", "bit_readout"], [34, 5, 1, "", "bits"], [34, 5, 1, "", "c_registers"], [34, 3, 1, "", "commands_of_type"], [34, 3, 1, "", "copy"], [34, 5, 1, "", "created_qubits"], [34, 3, 1, "", "dagger"], [34, 3, 1, "", "depth"], [34, 3, 1, "", "depth_2q"], [34, 3, 1, "", "depth_by_type"], [34, 5, 1, "", "discarded_qubits"], [34, 3, 1, "", "flatten_registers"], [34, 3, 1, "", "free_symbols"], [34, 3, 1, "", "from_dict"], [34, 3, 1, "", "get_c_register"], [34, 3, 1, "", "get_commands"], [34, 3, 1, "", "get_counts"], [34, 3, 1, "", "get_q_register"], [34, 3, 1, "", "get_resources"], [34, 3, 1, "", "get_statevector"], [34, 3, 1, "", "get_unitary"], [34, 3, 1, "", "get_unitary_times_other"], [34, 3, 1, "", "implicit_qubit_permutation"], [34, 5, 1, "", "is_simple"], [34, 3, 1, "", "is_symbolic"], [34, 3, 1, "", "measure_all"], [34, 3, 1, "", "measure_register"], [34, 3, 1, "", "n_1qb_gates"], [34, 3, 1, "", "n_2qb_gates"], [34, 5, 1, "", "n_bits"], [34, 5, 1, "", "n_gates"], [34, 3, 1, "", "n_gates_of_type"], [34, 3, 1, "", "n_nqb_gates"], [34, 5, 1, "", "n_qubits"], [34, 5, 1, "", "name"], [34, 5, 1, "", "opgroups"], [34, 3, 1, "", "ops_of_type"], [34, 5, 1, "", "phase"], [34, 3, 1, "", "post_process"], [34, 3, 1, "", "post_select"], [34, 5, 1, "", "q_registers"], [34, 3, 1, "", "qubit_create"], [34, 3, 1, "", "qubit_create_all"], [34, 3, 1, "", "qubit_discard"], [34, 3, 1, "", "qubit_discard_all"], [34, 3, 1, "", "qubit_is_created"], [34, 3, 1, "", "qubit_is_discarded"], [34, 5, 1, "", "qubit_readout"], [34, 5, 1, "", "qubit_to_bit_map"], [34, 5, 1, "", "qubits"], [34, 3, 1, "", "remove_blank_wires"], [34, 3, 1, "", "rename_units"], [34, 3, 1, "", "replace_SWAPs"], [34, 3, 1, "", "replace_implicit_wire_swaps"], [34, 3, 1, "", "scale"], [34, 3, 1, "", "substitute_named"], [34, 3, 1, "", "symbol_substitution"], [34, 3, 1, "", "to_dict"], [34, 3, 1, "", "to_latex_file"], [34, 3, 1, "", "transpose"], [34, 3, 1, "", "upgrade"], [34, 3, 1, "", "valid_connectivity"]], "lambeq.backend.drawing": [[34, 1, 1, "", "DrawableDiagram"], [34, 6, 1, "", "draw"], [34, 6, 1, "", "draw_equation"], [34, 6, 1, "", "draw_pregroup"], [34, 6, 1, "", "render_as_str"], [34, 6, 1, "", "to_gif"]], "lambeq.backend.drawing.DrawableDiagram": [[34, 3, 1, "", "__init__"], [34, 2, 1, "", "boxes"], [34, 3, 1, "", "from_diagram"], [34, 3, 1, "", "scale_and_pad"], [34, 2, 1, "", "wire_endpoints"], [34, 2, 1, "", "wires"]], "lambeq.backend.grammar": [[34, 1, 1, "", "Box"], [34, 1, 1, "", "Cap"], [34, 1, 1, "", "Category"], [34, 1, 1, "", "Cup"], [34, 1, 1, "", "Daggered"], [34, 1, 1, "", "Diagram"], [34, 1, 1, "", "Diagrammable"], [34, 1, 1, "", "Entity"], [34, 1, 1, "", "Functor"], [34, 6, 1, "", "Id"], [34, 1, 1, "", "Layer"], [34, 1, 1, "", "Spider"], [34, 1, 1, "", "Swap"], [34, 1, 1, "", "Ty"], [34, 1, 1, "", "Word"]], "lambeq.backend.grammar.Box": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "dom"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "l"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.grammar.Cap": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "dom"], [34, 3, 1, "", "from_json"], [34, 2, 1, "", "is_reversed"], [34, 5, 1, "", "l"], [34, 2, 1, "", "left"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 2, 1, "", "right"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "to_left"], [34, 3, 1, "", "to_right"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.grammar.Category": [[34, 2, 1, "", "Box"], [34, 2, 1, "", "Diagram"], [34, 2, 1, "", "Layer"], [34, 2, 1, "", "Ty"], [34, 3, 1, "", "__call__"], [34, 3, 1, "", "__init__"], [34, 3, 1, "", "from_json"], [34, 2, 1, "", "name"], [34, 3, 1, "", "set"]], "lambeq.backend.grammar.Cup": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "dom"], [34, 3, 1, "", "from_json"], [34, 2, 1, "", "is_reversed"], [34, 5, 1, "", "l"], [34, 2, 1, "", "left"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 2, 1, "", "right"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "to_left"], [34, 3, 1, "", "to_right"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.grammar.Daggered": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 2, 1, "", "box"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "dom"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "l"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.grammar.Diagram": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 3, 1, "", "ba"], [34, 3, 1, "", "bc"], [34, 5, 1, "", "boxes"], [34, 3, 1, "", "bx"], [34, 3, 1, "", "caps"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "create_pregroup_diagram"], [34, 3, 1, "", "cups"], [34, 3, 1, "", "curry"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "dom"], [34, 3, 1, "", "draw"], [34, 3, 1, "", "fa"], [34, 3, 1, "", "fc"], [34, 3, 1, "", "from_discopy"], [34, 3, 1, "", "from_json"], [34, 3, 1, "", "fx"], [34, 3, 1, "", "id"], [34, 5, 1, "", "is_id"], [34, 5, 1, "", "is_pregroup"], [34, 5, 1, "", "l"], [34, 2, 1, "", "layers"], [34, 3, 1, "", "lift"], [34, 3, 1, "", "normal_form"], [34, 5, 1, "", "offsets"], [34, 3, 1, "", "permutation"], [34, 3, 1, "", "permuted"], [34, 3, 1, "", "pregroup_normal_form"], [34, 5, 1, "", "r"], [34, 3, 1, "", "register_special_box"], [34, 3, 1, "", "render_as_str"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "special_boxes"], [34, 3, 1, "", "swap"], [34, 3, 1, "", "tensor"], [34, 3, 1, "", "then"], [34, 3, 1, "", "then_at"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_discopy"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "transpose"]], "lambeq.backend.grammar.Diagrammable": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "cod"], [34, 5, 1, "", "dom"], [34, 5, 1, "", "is_id"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"]], "lambeq.backend.grammar.Entity": [[34, 3, 1, "", "__init__"], [34, 2, 1, "", "category"]], "lambeq.backend.grammar.Functor": [[34, 3, 1, "", "__call__"], [34, 3, 1, "", "__init__"], [34, 3, 1, "", "ar"], [34, 3, 1, "", "ar_with_cache"], [34, 3, 1, "", "ob"], [34, 3, 1, "", "ob_with_cache"], [34, 2, 1, "", "target_category"]], "lambeq.backend.grammar.Layer": [[34, 3, 1, "", "__init__"], [34, 2, 1, "", "box"], [34, 2, 1, "", "category"], [34, 5, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 5, 1, "", "dom"], [34, 3, 1, "", "extend"], [34, 3, 1, "", "from_json"], [34, 2, 1, "", "left"], [34, 2, 1, "", "right"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unpack"]], "lambeq.backend.grammar.Spider": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "dom"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "l"], [34, 2, 1, "", "n_legs_in"], [34, 2, 1, "", "n_legs_out"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 2, 1, "", "type"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.grammar.Swap": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "dom"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "l"], [34, 2, 1, "", "left"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 2, 1, "", "right"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.grammar.Ty": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 2, 1, "", "category"], [34, 3, 1, "", "count"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_atomic"], [34, 5, 1, "", "is_complex"], [34, 5, 1, "", "is_empty"], [34, 5, 1, "", "l"], [34, 2, 1, "", "name"], [34, 2, 1, "", "objects"], [34, 5, 1, "", "r"], [34, 3, 1, "", "repeat"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "tensor"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.grammar.Word": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "dom"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "l"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.numerical_backend": [[34, 1, 1, "", "Backend"], [34, 1, 1, "", "JAX"], [34, 1, 1, "", "NumPy"], [34, 1, 1, "", "PyTorch"], [34, 1, 1, "", "TensorFlow"], [34, 6, 1, "", "backend"], [34, 6, 1, "", "get_backend"], [34, 6, 1, "", "set_backend"]], "lambeq.backend.numerical_backend.Backend": [[34, 3, 1, "", "__init__"], [34, 5, 1, "", "name"]], "lambeq.backend.numerical_backend.JAX": [[34, 3, 1, "", "__init__"], [34, 5, 1, "", "name"]], "lambeq.backend.numerical_backend.NumPy": [[34, 3, 1, "", "__init__"], [34, 5, 1, "", "name"]], "lambeq.backend.numerical_backend.PyTorch": [[34, 3, 1, "", "__init__"], [34, 5, 1, "", "name"]], "lambeq.backend.numerical_backend.TensorFlow": [[34, 3, 1, "", "__init__"], [34, 5, 1, "", "name"]], "lambeq.backend.pennylane": [[34, 1, 1, "", "PennyLaneCircuit"], [34, 6, 1, "", "extract_ops_from_tk"], [34, 6, 1, "", "get_post_selection_dict"], [34, 6, 1, "", "tk_op_to_pennylane"], [34, 6, 1, "", "to_pennylane"]], "lambeq.backend.pennylane.PennyLaneCircuit": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "contains_sympy"], [34, 3, 1, "", "draw"], [34, 3, 1, "", "eval"], [34, 3, 1, "", "get_device"], [34, 3, 1, "", "get_valid_states"], [34, 3, 1, "", "initialise_concrete_params"], [34, 3, 1, "", "initialise_device_and_circuit"], [34, 3, 1, "", "make_circuit"], [34, 3, 1, "", "param_substitution"], [34, 3, 1, "", "post_selected_circuit"]], "lambeq.backend.quantum": [[34, 1, 1, "", "AntiConjugate"], [34, 1, 1, "", "Bit"], [34, 1, 1, "", "Box"], [34, 1, 1, "", "Bra"], [34, 6, 1, "", "CRx"], [34, 6, 1, "", "CRy"], [34, 6, 1, "", "CRz"], [34, 1, 1, "", "Controlled"], [34, 1, 1, "", "Daggered"], [34, 1, 1, "", "Diagram"], [34, 1, 1, "", "Discard"], [34, 1, 1, "", "Encode"], [34, 6, 1, "", "Id"], [34, 1, 1, "", "Ket"], [34, 1, 1, "", "Layer"], [34, 1, 1, "", "Measure"], [34, 1, 1, "", "MixedState"], [34, 1, 1, "", "Parametrized"], [34, 1, 1, "", "Rotation"], [34, 1, 1, "", "Rx"], [34, 1, 1, "", "Ry"], [34, 1, 1, "", "Rz"], [34, 1, 1, "", "Scalar"], [34, 1, 1, "", "SelfConjugate"], [34, 1, 1, "", "Sqrt"], [34, 1, 1, "", "Swap"], [34, 1, 1, "", "Ty"], [34, 6, 1, "", "generate_cap"], [34, 6, 1, "", "generate_cup"], [34, 6, 1, "", "generate_spider"]], "lambeq.backend.quantum.AntiConjugate": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Bit": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Box": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Bra": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Controlled": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 3, 1, "", "decompose"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 5, 1, "", "modules"], [34, 2, 1, "", "name"], [34, 5, 1, "", "phase"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Daggered": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "box"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Diagram": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 3, 1, "", "apply_gate"], [34, 3, 1, "", "apply_parametrized_gate"], [34, 3, 1, "", "ba"], [34, 3, 1, "", "bc"], [34, 5, 1, "", "boxes"], [34, 3, 1, "", "bx"], [34, 3, 1, "", "caps"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "create_pregroup_diagram"], [34, 3, 1, "", "cups"], [34, 3, 1, "", "curry"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "dom"], [34, 3, 1, "", "draw"], [34, 3, 1, "", "eval"], [34, 3, 1, "", "fa"], [34, 3, 1, "", "fc"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_discopy"], [34, 3, 1, "", "from_json"], [34, 3, 1, "", "fx"], [34, 3, 1, "", "id"], [34, 3, 1, "", "init_and_discard"], [34, 5, 1, "", "is_id"], [34, 5, 1, "", "is_mixed"], [34, 5, 1, "", "is_pregroup"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "layers"], [34, 3, 1, "", "lift"], [34, 3, 1, "", "normal_form"], [34, 5, 1, "", "offsets"], [34, 3, 1, "", "permutation"], [34, 3, 1, "", "permuted"], [34, 3, 1, "", "pregroup_normal_form"], [34, 5, 1, "", "r"], [34, 3, 1, "", "register_special_box"], [34, 3, 1, "", "render_as_str"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "special_boxes"], [34, 3, 1, "", "swap"], [34, 3, 1, "", "tensor"], [34, 3, 1, "", "then"], [34, 3, 1, "", "then_at"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_discopy"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "to_pennylane"], [34, 3, 1, "", "to_tk"], [34, 3, 1, "", "to_tn"], [34, 3, 1, "", "transpose"]], "lambeq.backend.quantum.Discard": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Encode": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Ket": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Layer": [[34, 3, 1, "", "__init__"], [34, 2, 1, "", "box"], [34, 2, 1, "", "category"], [34, 5, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 5, 1, "", "dom"], [34, 3, 1, "", "extend"], [34, 3, 1, "", "from_json"], [34, 2, 1, "", "left"], [34, 2, 1, "", "right"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unpack"]], "lambeq.backend.quantum.Measure": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.MixedState": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Parametrized": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 5, 1, "", "modules"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Rotation": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 5, 1, "", "modules"], [34, 2, 1, "", "name"], [34, 5, 1, "", "phase"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Rx": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 5, 1, "", "modules"], [34, 2, 1, "", "name"], [34, 5, 1, "", "phase"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Ry": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 5, 1, "", "modules"], [34, 2, 1, "", "name"], [34, 5, 1, "", "phase"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Rz": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 5, 1, "", "modules"], [34, 2, 1, "", "name"], [34, 5, 1, "", "phase"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Scalar": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.SelfConjugate": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Sqrt": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Swap": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_classical"], [34, 2, 1, "", "is_mixed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "left"], [34, 2, 1, "", "n_legs_in"], [34, 2, 1, "", "n_legs_out"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 2, 1, "", "right"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "self_adjoint"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 2, 1, "", "type"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.quantum.Ty": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 2, 1, "", "category"], [34, 3, 1, "", "count"], [34, 5, 1, "", "dim"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_atomic"], [34, 5, 1, "", "is_complex"], [34, 5, 1, "", "is_empty"], [34, 5, 1, "", "l"], [34, 2, 1, "", "name"], [34, 2, 1, "", "objects"], [34, 5, 1, "", "product"], [34, 5, 1, "", "r"], [34, 3, 1, "", "repeat"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "tensor"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.snake_removal": [[34, 4, 1, "", "InterchangerError"], [34, 6, 1, "", "interchange"], [34, 6, 1, "", "normalize"], [34, 6, 1, "", "snake_removal"]], "lambeq.backend.snake_removal.InterchangerError": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "add_note"], [34, 2, 1, "", "args"], [34, 3, 1, "", "with_traceback"]], "lambeq.backend.tensor": [[34, 1, 1, "", "Box"], [34, 1, 1, "", "Cap"], [34, 1, 1, "", "Cup"], [34, 1, 1, "", "Daggered"], [34, 1, 1, "", "Diagram"], [34, 1, 1, "", "Dim"], [34, 1, 1, "", "Layer"], [34, 1, 1, "", "Spider"], [34, 1, 1, "", "Swap"]], "lambeq.backend.tensor.Box": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.tensor.Cap": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 2, 1, "", "is_reversed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "left"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 2, 1, "", "right"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "to_left"], [34, 3, 1, "", "to_right"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.tensor.Cup": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 2, 1, "", "is_reversed"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "left"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 2, 1, "", "right"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "to_left"], [34, 3, 1, "", "to_right"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.tensor.Daggered": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "box"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.tensor.Diagram": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 3, 1, "", "ba"], [34, 3, 1, "", "bc"], [34, 5, 1, "", "boxes"], [34, 3, 1, "", "bx"], [34, 3, 1, "", "caps"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "create_pregroup_diagram"], [34, 3, 1, "", "cups"], [34, 3, 1, "", "curry"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "dom"], [34, 3, 1, "", "draw"], [34, 3, 1, "", "eval"], [34, 3, 1, "", "fa"], [34, 3, 1, "", "fc"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_discopy"], [34, 3, 1, "", "from_json"], [34, 3, 1, "", "fx"], [34, 3, 1, "", "id"], [34, 5, 1, "", "is_id"], [34, 5, 1, "", "is_pregroup"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "layers"], [34, 3, 1, "", "lift"], [34, 3, 1, "", "normal_form"], [34, 5, 1, "", "offsets"], [34, 3, 1, "", "permutation"], [34, 3, 1, "", "permuted"], [34, 3, 1, "", "pregroup_normal_form"], [34, 5, 1, "", "r"], [34, 3, 1, "", "register_special_box"], [34, 3, 1, "", "render_as_str"], [34, 3, 1, "", "rotate"], [34, 2, 1, "", "special_boxes"], [34, 3, 1, "", "swap"], [34, 3, 1, "", "tensor"], [34, 3, 1, "", "then"], [34, 3, 1, "", "then_at"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_discopy"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "to_tn"], [34, 3, 1, "", "transpose"]], "lambeq.backend.tensor.Dim": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 2, 1, "", "category"], [34, 3, 1, "", "count"], [34, 5, 1, "", "dim"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "is_atomic"], [34, 5, 1, "", "is_complex"], [34, 5, 1, "", "is_empty"], [34, 5, 1, "", "l"], [34, 2, 1, "", "name"], [34, 2, 1, "", "objects"], [34, 5, 1, "", "product"], [34, 5, 1, "", "r"], [34, 3, 1, "", "repeat"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "tensor"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.tensor.Layer": [[34, 3, 1, "", "__init__"], [34, 2, 1, "", "box"], [34, 2, 1, "", "category"], [34, 5, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 5, 1, "", "dom"], [34, 3, 1, "", "extend"], [34, 3, 1, "", "from_json"], [34, 2, 1, "", "left"], [34, 2, 1, "", "right"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unpack"]], "lambeq.backend.tensor.Spider": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "n_legs_in"], [34, 2, 1, "", "n_legs_out"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 2, 1, "", "type"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.backend.tensor.Swap": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "apply_functor"], [34, 5, 1, "", "array"], [34, 2, 1, "", "category"], [34, 2, 1, "", "cod"], [34, 3, 1, "", "dagger"], [34, 2, 1, "", "data"], [34, 2, 1, "", "dom"], [34, 5, 1, "", "free_symbols"], [34, 3, 1, "", "from_json"], [34, 5, 1, "", "l"], [34, 3, 1, "", "lambdify"], [34, 2, 1, "", "left"], [34, 2, 1, "", "name"], [34, 5, 1, "", "r"], [34, 2, 1, "", "right"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "to_diagram"], [34, 3, 1, "", "to_json"], [34, 3, 1, "", "unwind"], [34, 2, 1, "", "z"]], "lambeq.bobcat": [[35, 1, 1, "", "BertForChartClassification"], [35, 1, 1, "", "Category"], [35, 1, 1, "", "ChartParser"], [35, 1, 1, "", "Grammar"], [35, 1, 1, "", "ParseTree"], [35, 1, 1, "", "Sentence"], [35, 1, 1, "", "Supertag"], [35, 1, 1, "", "Tagger"]], "lambeq.bobcat.BertForChartClassification": [[35, 2, 1, "", "T_destination"], [35, 3, 1, "", "__call__"], [35, 3, 1, "", "__init__"], [35, 3, 1, "", "active_adapter"], [35, 3, 1, "", "active_adapters"], [35, 3, 1, "", "add_adapter"], [35, 3, 1, "", "add_memory_hooks"], [35, 3, 1, "", "add_model_tags"], [35, 3, 1, "", "add_module"], [35, 3, 1, "", "apply"], [35, 5, 1, "", "base_model"], [35, 2, 1, "", "base_model_prefix"], [35, 3, 1, "", "bfloat16"], [35, 3, 1, "", "buffers"], [35, 2, 1, "", "call_super_init"], [35, 3, 1, "", "can_generate"], [35, 3, 1, "", "children"], [35, 3, 1, "", "compile"], [35, 3, 1, "", "compute_transition_scores"], [35, 2, 1, "", "config_class"], [35, 3, 1, "", "contrastive_search"], [35, 3, 1, "", "cpu"], [35, 3, 1, "", "create_extended_attention_mask_for_decoder"], [35, 3, 1, "", "cuda"], [35, 3, 1, "", "dequantize"], [35, 5, 1, "", "device"], [35, 3, 1, "", "disable_adapters"], [35, 3, 1, "", "disable_input_require_grads"], [35, 3, 1, "", "double"], [35, 5, 1, "", "dtype"], [35, 5, 1, "", "dummy_inputs"], [35, 2, 1, "", "dump_patches"], [35, 3, 1, "", "enable_adapters"], [35, 3, 1, "", "enable_input_require_grads"], [35, 3, 1, "", "estimate_tokens"], [35, 3, 1, "", "eval"], [35, 3, 1, "", "extra_repr"], [35, 3, 1, "", "float"], [35, 3, 1, "", "floating_point_ops"], [35, 3, 1, "", "forward"], [35, 5, 1, "", "framework"], [35, 3, 1, "", "from_pretrained"], [35, 3, 1, "", "generate"], [35, 3, 1, "", "get_adapter_state_dict"], [35, 3, 1, "", "get_buffer"], [35, 3, 1, "", "get_extended_attention_mask"], [35, 3, 1, "", "get_extra_state"], [35, 3, 1, "", "get_head_mask"], [35, 3, 1, "", "get_input_embeddings"], [35, 3, 1, "", "get_memory_footprint"], [35, 3, 1, "", "get_output_embeddings"], [35, 3, 1, "", "get_parameter"], [35, 3, 1, "", "get_position_embeddings"], [35, 3, 1, "", "get_submodule"], [35, 3, 1, "", "gradient_checkpointing_disable"], [35, 3, 1, "", "gradient_checkpointing_enable"], [35, 3, 1, "", "half"], [35, 3, 1, "", "heal_tokens"], [35, 3, 1, "", "init_weights"], [35, 3, 1, "", "invert_attention_mask"], [35, 3, 1, "", "ipu"], [35, 5, 1, "", "is_gradient_checkpointing"], [35, 2, 1, "", "is_parallelizable"], [35, 3, 1, "", "load_adapter"], [35, 3, 1, "", "load_state_dict"], [35, 3, 1, "", "load_tf_weights"], [35, 2, 1, "", "main_input_name"], [35, 2, 1, "", "model_tags"], [35, 3, 1, "", "modules"], [35, 3, 1, "", "named_buffers"], [35, 3, 1, "", "named_children"], [35, 3, 1, "", "named_modules"], [35, 3, 1, "", "named_parameters"], [35, 3, 1, "", "num_parameters"], [35, 3, 1, "", "parameters"], [35, 3, 1, "", "post_init"], [35, 3, 1, "", "prepare_inputs_for_generation"], [35, 3, 1, "", "prune_heads"], [35, 3, 1, "", "push_to_hub"], [35, 3, 1, "", "register_backward_hook"], [35, 3, 1, "", "register_buffer"], [35, 3, 1, "", "register_for_auto_class"], [35, 3, 1, "", "register_forward_hook"], [35, 3, 1, "", "register_forward_pre_hook"], [35, 3, 1, "", "register_full_backward_hook"], [35, 3, 1, "", "register_full_backward_pre_hook"], [35, 3, 1, "", "register_load_state_dict_post_hook"], [35, 3, 1, "", "register_module"], [35, 3, 1, "", "register_parameter"], [35, 3, 1, "", "register_state_dict_pre_hook"], [35, 3, 1, "", "requires_grad_"], [35, 3, 1, "", "reset_memory_hooks_state"], [35, 3, 1, "", "resize_position_embeddings"], [35, 3, 1, "", "resize_token_embeddings"], [35, 3, 1, "", "retrieve_modules_from_names"], [35, 3, 1, "", "reverse_bettertransformer"], [35, 3, 1, "", "save_pretrained"], [35, 3, 1, "", "set_adapter"], [35, 3, 1, "", "set_extra_state"], [35, 3, 1, "", "set_input_embeddings"], [35, 3, 1, "", "share_memory"], [35, 3, 1, "", "state_dict"], [35, 2, 1, "", "supports_gradient_checkpointing"], [35, 3, 1, "", "tie_weights"], [35, 3, 1, "", "to"], [35, 3, 1, "", "to_bettertransformer"], [35, 3, 1, "", "to_empty"], [35, 3, 1, "", "train"], [35, 2, 1, "", "training"], [35, 3, 1, "", "type"], [35, 3, 1, "", "warn_if_padding_and_no_attention_mask"], [35, 3, 1, "", "xpu"], [35, 3, 1, "", "zero_grad"]], "lambeq.bobcat.Category": [[35, 3, 1, "", "__init__"], [35, 2, 1, "", "argument"], [35, 2, 1, "", "atom"], [35, 5, 1, "", "bwd"], [35, 2, 1, "", "dir"], [35, 2, 1, "", "feature"], [35, 5, 1, "", "fwd"], [35, 3, 1, "", "matches"], [35, 3, 1, "", "parse"], [35, 2, 1, "", "relation"], [35, 2, 1, "", "result"], [35, 3, 1, "", "slash"], [35, 3, 1, "", "translate"], [35, 2, 1, "", "type_raising_dep_var"], [35, 2, 1, "", "var"]], "lambeq.bobcat.ChartParser": [[35, 3, 1, "", "__call__"], [35, 3, 1, "", "__init__"], [35, 3, 1, "", "calc_score_binary"], [35, 3, 1, "", "calc_score_unary"], [35, 3, 1, "", "filter_root"], [35, 3, 1, "", "get_span_score"], [35, 3, 1, "", "set_root_cats"]], "lambeq.bobcat.Grammar": [[35, 3, 1, "", "__init__"], [35, 2, 1, "", "binary_rules"], [35, 2, 1, "", "categories"], [35, 3, 1, "", "load"], [35, 3, 1, "", "save"], [35, 2, 1, "", "type_changing_rules"], [35, 2, 1, "", "type_raising_rules"]], "lambeq.bobcat.ParseTree": [[35, 3, 1, "", "__init__"], [35, 5, 1, "", "bwd_comp"], [35, 2, 1, "", "cat"], [35, 5, 1, "", "coordinated"], [35, 5, 1, "", "coordinated_or_type_raised"], [35, 5, 1, "", "deps"], [35, 5, 1, "", "deps_and_tags"], [35, 2, 1, "", "filled_deps"], [35, 5, 1, "", "fwd_comp"], [35, 5, 1, "", "is_leaf"], [35, 2, 1, "", "left"], [35, 2, 1, "", "right"], [35, 2, 1, "", "rule"], [35, 2, 1, "", "score"], [35, 2, 1, "", "unfilled_deps"], [35, 2, 1, "", "var_map"], [35, 5, 1, "", "variable"], [35, 5, 1, "", "word"]], "lambeq.bobcat.Sentence": [[35, 3, 1, "", "__init__"], [35, 2, 1, "", "input_supertags"], [35, 2, 1, "", "span_scores"], [35, 2, 1, "", "words"]], "lambeq.bobcat.Supertag": [[35, 3, 1, "", "__init__"], [35, 2, 1, "", "category"], [35, 2, 1, "", "probability"]], "lambeq.bobcat.Tagger": [[35, 3, 1, "", "__call__"], [35, 3, 1, "", "__init__"], [35, 3, 1, "", "parse"], [35, 3, 1, "", "prepare_inputs"]], "lambeq.rewrite": [[36, 1, 1, "", "CoordinationRewriteRule"], [36, 1, 1, "", "CurryRewriteRule"], [36, 1, 1, "", "DiagramRewriter"], [36, 1, 1, "", "RemoveCupsRewriter"], [36, 1, 1, "", "RemoveSwapsRewriter"], [36, 1, 1, "", "RewriteRule"], [36, 1, 1, "", "Rewriter"], [36, 1, 1, "", "SimpleRewriteRule"], [36, 1, 1, "", "UnifyCodomainRewriter"], [36, 1, 1, "", "UnknownWordsRewriteRule"]], "lambeq.rewrite.CoordinationRewriteRule": [[36, 3, 1, "", "__call__"], [36, 3, 1, "", "__init__"], [36, 3, 1, "", "matches"], [36, 3, 1, "", "rewrite"]], "lambeq.rewrite.CurryRewriteRule": [[36, 3, 1, "", "__call__"], [36, 3, 1, "", "__init__"], [36, 3, 1, "", "matches"], [36, 3, 1, "", "rewrite"]], "lambeq.rewrite.DiagramRewriter": [[36, 3, 1, "", "__call__"], [36, 3, 1, "", "matches"], [36, 3, 1, "", "rewrite"]], "lambeq.rewrite.RemoveCupsRewriter": [[36, 3, 1, "", "__call__"], [36, 3, 1, "", "matches"], [36, 3, 1, "", "rewrite"]], "lambeq.rewrite.RemoveSwapsRewriter": [[36, 3, 1, "", "__call__"], [36, 3, 1, "", "matches"], [36, 3, 1, "", "rewrite"]], "lambeq.rewrite.RewriteRule": [[36, 3, 1, "", "__call__"], [36, 3, 1, "", "matches"], [36, 3, 1, "", "rewrite"]], "lambeq.rewrite.Rewriter": [[36, 3, 1, "", "__call__"], [36, 3, 1, "", "__init__"], [36, 3, 1, "", "add_rules"], [36, 3, 1, "", "available_rules"]], "lambeq.rewrite.SimpleRewriteRule": [[36, 3, 1, "", "__call__"], [36, 3, 1, "", "__init__"], [36, 3, 1, "", "matches"], [36, 3, 1, "", "placeholder"], [36, 3, 1, "", "rewrite"]], "lambeq.rewrite.UnifyCodomainRewriter": [[36, 3, 1, "", "__call__"], [36, 3, 1, "", "__init__"], [36, 3, 1, "", "matches"], [36, 2, 1, "", "output_type"], [36, 3, 1, "", "rewrite"]], "lambeq.rewrite.UnknownWordsRewriteRule": [[36, 3, 1, "", "__call__"], [36, 3, 1, "", "__init__"], [36, 3, 1, "", "from_diagrams"], [36, 3, 1, "", "matches"], [36, 3, 1, "", "rewrite"]], "lambeq.text2diagram": [[37, 4, 1, "", "BobcatParseError"], [37, 1, 1, "", "BobcatParser"], [37, 4, 1, "", "CCGBankParseError"], [37, 1, 1, "", "CCGBankParser"], [37, 1, 1, "", "CCGParser"], [37, 1, 1, "", "CCGRule"], [37, 4, 1, "", "CCGRuleUseError"], [37, 1, 1, "", "CCGTree"], [37, 1, 1, "", "CCGType"], [37, 4, 1, "", "DepCCGParseError"], [37, 1, 1, "", "DepCCGParser"], [37, 1, 1, "", "LinearReader"], [37, 1, 1, "", "Reader"], [37, 1, 1, "", "TreeReader"], [37, 1, 1, "", "TreeReaderMode"], [37, 4, 1, "", "WebParseError"], [37, 1, 1, "", "WebParser"], [37, 7, 1, "", "bag_of_words_reader"], [37, 7, 1, "", "cups_reader"], [37, 7, 1, "", "spiders_reader"], [37, 7, 1, "", "stairs_reader"], [37, 7, 1, "", "word_sequence_reader"]], "lambeq.text2diagram.BobcatParseError": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "add_note"], [37, 2, 1, "", "args"], [37, 3, 1, "", "with_traceback"]], "lambeq.text2diagram.BobcatParser": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "available_models"], [37, 3, 1, "", "sentence2diagram"], [37, 3, 1, "", "sentence2tree"], [37, 3, 1, "", "sentences2diagrams"], [37, 3, 1, "", "sentences2trees"]], "lambeq.text2diagram.CCGBankParseError": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "add_note"], [37, 2, 1, "", "args"], [37, 3, 1, "", "with_traceback"]], "lambeq.text2diagram.CCGBankParser": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "section2diagrams"], [37, 3, 1, "", "section2diagrams_gen"], [37, 3, 1, "", "section2trees"], [37, 3, 1, "", "section2trees_gen"], [37, 3, 1, "", "sentence2diagram"], [37, 3, 1, "", "sentence2tree"], [37, 3, 1, "", "sentences2diagrams"], [37, 3, 1, "", "sentences2trees"]], "lambeq.text2diagram.CCGParser": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "sentence2diagram"], [37, 3, 1, "", "sentence2tree"], [37, 3, 1, "", "sentences2diagrams"], [37, 3, 1, "", "sentences2trees"]], "lambeq.text2diagram.CCGRule": [[37, 2, 1, "", "BACKWARD_APPLICATION"], [37, 2, 1, "", "BACKWARD_COMPOSITION"], [37, 2, 1, "", "BACKWARD_CROSSED_COMPOSITION"], [37, 2, 1, "", "BACKWARD_TYPE_RAISING"], [37, 2, 1, "", "CONJUNCTION"], [37, 2, 1, "", "FORWARD_APPLICATION"], [37, 2, 1, "", "FORWARD_COMPOSITION"], [37, 2, 1, "", "FORWARD_CROSSED_COMPOSITION"], [37, 2, 1, "", "FORWARD_TYPE_RAISING"], [37, 2, 1, "", "GENERALIZED_BACKWARD_COMPOSITION"], [37, 2, 1, "", "GENERALIZED_BACKWARD_CROSSED_COMPOSITION"], [37, 2, 1, "", "GENERALIZED_FORWARD_COMPOSITION"], [37, 2, 1, "", "GENERALIZED_FORWARD_CROSSED_COMPOSITION"], [37, 2, 1, "", "LEXICAL"], [37, 2, 1, "", "REMOVE_PUNCTUATION_LEFT"], [37, 2, 1, "", "REMOVE_PUNCTUATION_RIGHT"], [37, 2, 1, "", "UNARY"], [37, 2, 1, "", "UNKNOWN"], [37, 3, 1, "", "__call__"], [37, 3, 1, "", "__init__"], [37, 3, 1, "", "apply"], [37, 3, 1, "", "capitalize"], [37, 3, 1, "", "casefold"], [37, 3, 1, "", "center"], [37, 3, 1, "", "check_match"], [37, 3, 1, "", "count"], [37, 3, 1, "", "encode"], [37, 3, 1, "", "endswith"], [37, 3, 1, "", "expandtabs"], [37, 3, 1, "", "find"], [37, 3, 1, "", "format"], [37, 3, 1, "", "format_map"], [37, 3, 1, "", "index"], [37, 3, 1, "", "infer_rule"], [37, 3, 1, "", "isalnum"], [37, 3, 1, "", "isalpha"], [37, 3, 1, "", "isascii"], [37, 3, 1, "", "isdecimal"], [37, 3, 1, "", "isdigit"], [37, 3, 1, "", "isidentifier"], [37, 3, 1, "", "islower"], [37, 3, 1, "", "isnumeric"], [37, 3, 1, "", "isprintable"], [37, 3, 1, "", "isspace"], [37, 3, 1, "", "istitle"], [37, 3, 1, "", "isupper"], [37, 3, 1, "", "join"], [37, 3, 1, "", "ljust"], [37, 3, 1, "", "lower"], [37, 3, 1, "", "lstrip"], [37, 3, 1, "", "maketrans"], [37, 3, 1, "", "partition"], [37, 3, 1, "", "removeprefix"], [37, 3, 1, "", "removesuffix"], [37, 3, 1, "", "replace"], [37, 3, 1, "", "resolve"], [37, 3, 1, "", "rfind"], [37, 3, 1, "", "rindex"], [37, 3, 1, "", "rjust"], [37, 3, 1, "", "rpartition"], [37, 3, 1, "", "rsplit"], [37, 3, 1, "", "rstrip"], [37, 3, 1, "", "split"], [37, 3, 1, "", "splitlines"], [37, 3, 1, "", "startswith"], [37, 3, 1, "", "strip"], [37, 3, 1, "", "swapcase"], [37, 5, 1, "", "symbol"], [37, 3, 1, "", "title"], [37, 3, 1, "", "translate"], [37, 3, 1, "", "upper"], [37, 3, 1, "", "zfill"]], "lambeq.text2diagram.CCGRuleUseError": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "add_note"], [37, 2, 1, "", "args"], [37, 3, 1, "", "with_traceback"]], "lambeq.text2diagram.CCGTree": [[37, 3, 1, "", "__init__"], [37, 5, 1, "", "child"], [37, 3, 1, "", "collapse_noun_phrases"], [37, 3, 1, "", "deriv"], [37, 3, 1, "", "from_json"], [37, 5, 1, "", "left"], [37, 5, 1, "", "right"], [37, 5, 1, "", "text"], [37, 3, 1, "", "to_diagram"], [37, 3, 1, "", "to_json"], [37, 3, 1, "", "without_trivial_unary_rules"]], "lambeq.text2diagram.CCGType": [[37, 2, 1, "", "CONJUNCTION"], [37, 2, 1, "", "CONJ_TAG"], [37, 2, 1, "", "NOUN"], [37, 2, 1, "", "NOUN_PHRASE"], [37, 2, 1, "", "PREPOSITIONAL_PHRASE"], [37, 2, 1, "", "PUNCTUATION"], [37, 2, 1, "", "SENTENCE"], [37, 3, 1, "", "__init__"], [37, 5, 1, "", "argument"], [37, 5, 1, "", "direction"], [37, 2, 1, "", "is_atomic"], [37, 2, 1, "", "is_complex"], [37, 5, 1, "", "is_conjoinable"], [37, 2, 1, "", "is_empty"], [37, 2, 1, "", "is_over"], [37, 2, 1, "", "is_under"], [37, 5, 1, "", "left"], [37, 5, 1, "", "name"], [37, 3, 1, "", "over"], [37, 3, 1, "", "parse"], [37, 3, 1, "", "replace"], [37, 3, 1, "", "replace_result"], [37, 5, 1, "", "result"], [37, 5, 1, "", "right"], [37, 3, 1, "", "slash"], [37, 3, 1, "", "split"], [37, 3, 1, "", "to_grammar"], [37, 3, 1, "", "to_string"], [37, 3, 1, "", "under"]], "lambeq.text2diagram.DepCCGParseError": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "add_note"], [37, 2, 1, "", "args"], [37, 3, 1, "", "with_traceback"]], "lambeq.text2diagram.DepCCGParser": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "sentence2diagram"], [37, 3, 1, "", "sentence2tree"], [37, 3, 1, "", "sentences2diagrams"], [37, 3, 1, "", "sentences2trees"]], "lambeq.text2diagram.LinearReader": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "sentence2diagram"], [37, 3, 1, "", "sentences2diagrams"]], "lambeq.text2diagram.Reader": [[37, 3, 1, "", "sentence2diagram"], [37, 3, 1, "", "sentences2diagrams"]], "lambeq.text2diagram.TreeReader": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "available_modes"], [37, 3, 1, "", "sentence2diagram"], [37, 3, 1, "", "sentences2diagrams"], [37, 3, 1, "", "tree2diagram"]], "lambeq.text2diagram.TreeReaderMode": [[37, 2, 1, "", "HEIGHT"], [37, 2, 1, "", "NO_TYPE"], [37, 2, 1, "", "RULE_ONLY"], [37, 2, 1, "", "RULE_TYPE"]], "lambeq.text2diagram.WebParseError": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "add_note"], [37, 2, 1, "", "args"], [37, 2, 1, "", "characters_written"], [37, 2, 1, "", "errno"], [37, 2, 1, "", "filename"], [37, 2, 1, "", "filename2"], [37, 2, 1, "", "strerror"], [37, 3, 1, "", "with_traceback"]], "lambeq.text2diagram.WebParser": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "sentence2diagram"], [37, 3, 1, "", "sentence2tree"], [37, 3, 1, "", "sentences2diagrams"], [37, 3, 1, "", "sentences2trees"]], "lambeq.tokeniser": [[38, 1, 1, "", "SpacyTokeniser"], [38, 1, 1, "", "Tokeniser"]], "lambeq.tokeniser.SpacyTokeniser": [[38, 3, 1, "", "__init__"], [38, 3, 1, "", "split_sentences"], [38, 3, 1, "", "tokenise_sentence"], [38, 3, 1, "", "tokenise_sentences"]], "lambeq.tokeniser.Tokeniser": [[38, 3, 1, "", "split_sentences"], [38, 3, 1, "", "tokenise_sentence"], [38, 3, 1, "", "tokenise_sentences"]], "lambeq.training": [[39, 1, 1, "", "BinaryCrossEntropyLoss"], [39, 1, 1, "", "Checkpoint"], [39, 1, 1, "", "CrossEntropyLoss"], [39, 1, 1, "", "Dataset"], [39, 1, 1, "", "LossFunction"], [39, 1, 1, "", "MSELoss"], [39, 1, 1, "", "Model"], [39, 1, 1, "", "NelderMeadOptimizer"], [39, 1, 1, "", "NumpyModel"], [39, 1, 1, "", "Optimizer"], [39, 1, 1, "", "PennyLaneModel"], [39, 1, 1, "", "PytorchModel"], [39, 1, 1, "", "PytorchTrainer"], [39, 1, 1, "", "QuantumModel"], [39, 1, 1, "", "QuantumTrainer"], [39, 1, 1, "", "RotosolveOptimizer"], [39, 1, 1, "", "SPSAOptimizer"], [39, 1, 1, "", "TketModel"], [39, 1, 1, "", "Trainer"]], "lambeq.training.BinaryCrossEntropyLoss": [[39, 3, 1, "", "__call__"], [39, 3, 1, "", "__init__"], [39, 3, 1, "", "calculate_loss"]], "lambeq.training.Checkpoint": [[39, 3, 1, "", "__init__"], [39, 3, 1, "", "add_many"], [39, 3, 1, "", "from_file"], [39, 3, 1, "", "get"], [39, 3, 1, "", "items"], [39, 3, 1, "", "keys"], [39, 3, 1, "", "to_file"], [39, 3, 1, "", "values"]], "lambeq.training.CrossEntropyLoss": [[39, 3, 1, "", "__call__"], [39, 3, 1, "", "__init__"], [39, 3, 1, "", "calculate_loss"]], "lambeq.training.Dataset": [[39, 3, 1, "", "__init__"], [39, 3, 1, "", "shuffle_data"]], "lambeq.training.LossFunction": [[39, 3, 1, "", "__call__"], [39, 3, 1, "", "__init__"], [39, 3, 1, "", "calculate_loss"]], "lambeq.training.MSELoss": [[39, 3, 1, "", "__call__"], [39, 3, 1, "", "__init__"], [39, 3, 1, "", "calculate_loss"]], "lambeq.training.Model": [[39, 3, 1, "", "__call__"], [39, 3, 1, "", "__init__"], [39, 3, 1, "", "forward"], [39, 3, 1, "", "from_checkpoint"], [39, 3, 1, "", "from_diagrams"], [39, 3, 1, "", "get_diagram_output"], [39, 3, 1, "", "initialise_weights"], [39, 3, 1, "", "load"], [39, 3, 1, "", "save"]], "lambeq.training.NelderMeadOptimizer": [[39, 3, 1, "", "__init__"], [39, 3, 1, "", "backward"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "load_state_dict"], [39, 2, 1, "", "model"], [39, 3, 1, "", "objective"], [39, 3, 1, "", "project"], [39, 3, 1, "", "state_dict"], [39, 3, 1, "", "step"], [39, 3, 1, "", "update_hyper_params"], [39, 3, 1, "", "zero_grad"]], "lambeq.training.NumpyModel": [[39, 3, 1, "", "__call__"], [39, 3, 1, "", "__init__"], [39, 3, 1, "", "forward"], [39, 3, 1, "", "from_checkpoint"], [39, 3, 1, "", "from_diagrams"], [39, 3, 1, "", "get_diagram_output"], [39, 3, 1, "", "initialise_weights"], [39, 3, 1, "", "load"], [39, 3, 1, "", "save"], [39, 2, 1, "", "weights"]], "lambeq.training.Optimizer": [[39, 3, 1, "", "__init__"], [39, 3, 1, "", "backward"], [39, 3, 1, "", "load_state_dict"], [39, 3, 1, "", "state_dict"], [39, 3, 1, "", "step"], [39, 3, 1, "", "zero_grad"]], "lambeq.training.PennyLaneModel": [[39, 2, 1, "", "T_destination"], [39, 3, 1, "", "__call__"], [39, 3, 1, "", "__init__"], [39, 3, 1, "", "add_module"], [39, 3, 1, "", "apply"], [39, 3, 1, "", "bfloat16"], [39, 3, 1, "", "buffers"], [39, 2, 1, "", "call_super_init"], [39, 3, 1, "", "children"], [39, 3, 1, "", "compile"], [39, 3, 1, "", "cpu"], [39, 3, 1, "", "cuda"], [39, 3, 1, "", "double"], [39, 2, 1, "", "dump_patches"], [39, 3, 1, "", "eval"], [39, 3, 1, "", "extra_repr"], [39, 3, 1, "", "float"], [39, 3, 1, "", "forward"], [39, 3, 1, "", "from_checkpoint"], [39, 3, 1, "", "from_diagrams"], [39, 3, 1, "", "get_buffer"], [39, 3, 1, "", "get_diagram_output"], [39, 3, 1, "", "get_extra_state"], [39, 3, 1, "", "get_parameter"], [39, 3, 1, "", "get_submodule"], [39, 3, 1, "", "half"], [39, 3, 1, "", "initialise_weights"], [39, 3, 1, "", "ipu"], [39, 3, 1, "", "load"], [39, 3, 1, "", "load_state_dict"], [39, 3, 1, "", "modules"], [39, 3, 1, "", "named_buffers"], [39, 3, 1, "", "named_children"], [39, 3, 1, "", "named_modules"], [39, 3, 1, "", "named_parameters"], [39, 3, 1, "", "parameters"], [39, 3, 1, "", "register_backward_hook"], [39, 3, 1, "", "register_buffer"], [39, 3, 1, "", "register_forward_hook"], [39, 3, 1, "", "register_forward_pre_hook"], [39, 3, 1, "", "register_full_backward_hook"], [39, 3, 1, "", "register_full_backward_pre_hook"], [39, 3, 1, "", "register_load_state_dict_post_hook"], [39, 3, 1, "", "register_module"], [39, 3, 1, "", "register_parameter"], [39, 3, 1, "", "register_state_dict_pre_hook"], [39, 3, 1, "", "requires_grad_"], [39, 3, 1, "", "save"], [39, 3, 1, "", "set_extra_state"], [39, 3, 1, "", "share_memory"], [39, 3, 1, "", "state_dict"], [39, 2, 1, "", "symbols"], [39, 3, 1, "", "to"], [39, 3, 1, "", "to_empty"], [39, 3, 1, "", "train"], [39, 2, 1, "", "training"], [39, 3, 1, "", "type"], [39, 2, 1, "", "weights"], [39, 3, 1, "", "xpu"], [39, 3, 1, "", "zero_grad"]], "lambeq.training.PytorchModel": [[39, 2, 1, "", "T_destination"], [39, 3, 1, "", "__call__"], [39, 3, 1, "", "__init__"], [39, 3, 1, "", "add_module"], [39, 3, 1, "", "apply"], [39, 3, 1, "", "bfloat16"], [39, 3, 1, "", "buffers"], [39, 2, 1, "", "call_super_init"], [39, 3, 1, "", "children"], [39, 3, 1, "", "compile"], [39, 3, 1, "", "cpu"], [39, 3, 1, "", "cuda"], [39, 3, 1, "", "double"], [39, 2, 1, "", "dump_patches"], [39, 3, 1, "", "eval"], [39, 3, 1, "", "extra_repr"], [39, 3, 1, "", "float"], [39, 3, 1, "", "forward"], [39, 3, 1, "", "from_checkpoint"], [39, 3, 1, "", "from_diagrams"], [39, 3, 1, "", "get_buffer"], [39, 3, 1, "", "get_diagram_output"], [39, 3, 1, "", "get_extra_state"], [39, 3, 1, "", "get_parameter"], [39, 3, 1, "", "get_submodule"], [39, 3, 1, "", "half"], [39, 3, 1, "", "initialise_weights"], [39, 3, 1, "", "ipu"], [39, 3, 1, "", "load"], [39, 3, 1, "", "load_state_dict"], [39, 3, 1, "", "modules"], [39, 3, 1, "", "named_buffers"], [39, 3, 1, "", "named_children"], [39, 3, 1, "", "named_modules"], [39, 3, 1, "", "named_parameters"], [39, 3, 1, "", "parameters"], [39, 3, 1, "", "register_backward_hook"], [39, 3, 1, "", "register_buffer"], [39, 3, 1, "", "register_forward_hook"], [39, 3, 1, "", "register_forward_pre_hook"], [39, 3, 1, "", "register_full_backward_hook"], [39, 3, 1, "", "register_full_backward_pre_hook"], [39, 3, 1, "", "register_load_state_dict_post_hook"], [39, 3, 1, "", "register_module"], [39, 3, 1, "", "register_parameter"], [39, 3, 1, "", "register_state_dict_pre_hook"], [39, 3, 1, "", "requires_grad_"], [39, 3, 1, "", "save"], [39, 3, 1, "", "set_extra_state"], [39, 3, 1, "", "share_memory"], [39, 3, 1, "", "state_dict"], [39, 2, 1, "", "symbols"], [39, 3, 1, "", "to"], [39, 3, 1, "", "to_empty"], [39, 3, 1, "", "train"], [39, 2, 1, "", "training"], [39, 3, 1, "", "type"], [39, 2, 1, "", "weights"], [39, 3, 1, "", "xpu"], [39, 3, 1, "", "zero_grad"]], "lambeq.training.PytorchTrainer": [[39, 3, 1, "", "__init__"], [39, 3, 1, "", "fit"], [39, 3, 1, "", "load_training_checkpoint"], [39, 2, 1, "", "model"], [39, 3, 1, "", "save_checkpoint"], [39, 3, 1, "", "training_step"], [39, 3, 1, "", "validation_step"]], "lambeq.training.QuantumModel": [[39, 3, 1, "", "__call__"], [39, 3, 1, "", "__init__"], [39, 3, 1, "", "forward"], [39, 3, 1, "", "from_checkpoint"], [39, 3, 1, "", "from_diagrams"], [39, 3, 1, "", "get_diagram_output"], [39, 3, 1, "", "initialise_weights"], [39, 3, 1, "", "load"], [39, 3, 1, "", "save"], [39, 2, 1, "", "weights"]], "lambeq.training.QuantumTrainer": [[39, 3, 1, "", "__init__"], [39, 3, 1, "", "fit"], [39, 3, 1, "", "load_training_checkpoint"], [39, 2, 1, "", "model"], [39, 3, 1, "", "save_checkpoint"], [39, 3, 1, "", "training_step"], [39, 3, 1, "", "validation_step"]], "lambeq.training.RotosolveOptimizer": [[39, 3, 1, "", "__init__"], [39, 3, 1, "", "backward"], [39, 3, 1, "", "load_state_dict"], [39, 2, 1, "", "model"], [39, 3, 1, "", "project"], [39, 3, 1, "", "state_dict"], [39, 3, 1, "", "step"], [39, 3, 1, "", "zero_grad"]], "lambeq.training.SPSAOptimizer": [[39, 3, 1, "", "__init__"], [39, 3, 1, "", "backward"], [39, 3, 1, "", "load_state_dict"], [39, 2, 1, "", "model"], [39, 3, 1, "", "state_dict"], [39, 3, 1, "", "step"], [39, 3, 1, "", "update_hyper_params"], [39, 3, 1, "", "zero_grad"]], "lambeq.training.TketModel": [[39, 3, 1, "", "__call__"], [39, 3, 1, "", "__init__"], [39, 3, 1, "", "forward"], [39, 3, 1, "", "from_checkpoint"], [39, 3, 1, "", "from_diagrams"], [39, 3, 1, "", "get_diagram_output"], [39, 3, 1, "", "initialise_weights"], [39, 3, 1, "", "load"], [39, 3, 1, "", "save"], [39, 2, 1, "", "symbols"], [39, 2, 1, "", "weights"]], "lambeq.training.Trainer": [[39, 3, 1, "", "__init__"], [39, 3, 1, "", "fit"], [39, 3, 1, "", "load_training_checkpoint"], [39, 3, 1, "", "save_checkpoint"], [39, 3, 1, "", "training_step"], [39, 3, 1, "", "validation_step"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"], "7": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:exception", "5": "py:property", "6": "py:function", "7": "py:data"}, "terms": {"": [0, 1, 2, 4, 5, 10, 11, 14, 15, 22, 23, 24, 27, 29, 32, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 46, 48, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69], "0": [1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 23, 32, 33, 34, 35, 37, 39, 41, 49, 50, 53, 56, 57, 58, 59, 63, 64, 65, 66, 67], "00": [9, 23, 49, 65], "000": [29, 49], "0000": [7, 8, 18, 37, 63, 64], "0001": [8, 18, 64], "0002": 18, "0003": [8, 64], "0004": [8, 64], "0005": [7, 8, 63, 64], "000635529821011005": 18, "0007": 18, "0007703642331762239": 18, "00097": 13, "001": [9, 15, 39, 53, 65], "0011": [8, 64], "0011570464266696945": 18, "0014": [8, 18, 64], "002": 15, "0021": 18, "0022": [8, 64], "0025011023972183466": [11, 67], "0029964144341647625": [11, 67], "003": 15, "0036874753423035145": [11, 67], "0038383470964618027": 18, "004": 15, "0041": [8, 64], "0046": 18, "004701168276369572": [11, 67], "0048": 18, "0051": 18, "0054": 18, "00569755": [8, 64], "0057": 18, "0058": 18, "0059": 18, "0060": 18, "0061": [8, 64], "006290055345743895": [11, 67], "0067": 18, "0071": 18, "0078": 18, "0079": [8, 64], "007f": 37, "009020495228469372": [11, 67], "00904": 35, "01": [13, 19, 20, 39, 53, 65], "010": [13, 35, 39, 53], "0108": [8, 64], "0109": 18, "0120": [8, 16, 64], "0126": [8, 64], "014427061192691326": [11, 67], "014470159949269146": 18, "0147": 18, "0165": [9, 65], "0178": [8, 64], "019": 13, "02": [9, 23, 65], "0205": [8, 64], "023": 13, "0235": [9, 65], "0239": 18, "0262": 18, "0262194201": 13, "0281": [8, 64], "0283": [7, 63], "0286": [8, 64], "029141228646039963": [11, 67], "03": [7, 16, 20, 63], "030": 13, "0308": [8, 64], "0309": [8, 64], "0314": [8, 64], "0329": [7, 63], "0364": [8, 64], "0368": 18, "0392": [8, 64], "04": [9, 20, 65], "0410": 18, "04152114": [8, 64], "0416": 18, "04236": [13, 32], "0434": 18, "0438": [7, 63], "0466": [8, 64], "0486": [8, 64], "05": [9, 19, 20, 34, 65], "0563": [7, 63], "0572": 18, "0594": [7, 63], "0595": 16, "05956625810358673": [8, 64], "06": [8, 9, 19, 20, 64, 65], "0604": 18, "0621": [8, 64], "0661": 18, "0662": 20, "0677": 18, "07832": 34, "08": [7, 8, 18, 20, 63, 64], "08361": 35, "0854": 18, "09": [7, 16, 39, 53, 63], "09003165": [10, 66], "0919": [8, 64], "0928": 18, "0944": [9, 65], "0980": 13, "0988": 18, "1": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 49, 50, 53, 54, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69], "10": [1, 2, 4, 7, 8, 9, 11, 13, 16, 18, 19, 20, 24, 32, 34, 35, 39, 52, 53, 57, 58, 60, 63, 64, 65, 67], "100": [0, 6, 8, 9, 18, 23, 25, 35, 39, 43, 62, 64, 65], "1000": [8, 39, 41, 53, 64, 69], "1002": 13, "1003": 13, "10044": 13, "1007": [13, 39, 53], "101": [52, 62], "1013182": 13, "1017": 19, "1026": 13, "1035": [8, 64], "1038": 13, "1054": [7, 63], "108": [19, 20], "10876": [33, 53], "1093": 13, "1098": [7, 63], "11": [5, 8, 18, 19, 52, 61, 64], "1100": 18, "1109": 13, "1110": 35, "11471": 35, "1150": [35, 39], "1156": 18, "1162": 13, "12": [2, 6, 7, 8, 9, 10, 13, 14, 18, 19, 20, 23, 25, 34, 35, 52, 58, 60, 62, 63, 64, 65, 66], "120": [19, 20], "120266": 35, "1207": [8, 64], "1274": 18, "128": 35, "1289": 18, "1293": 13, "13": [4, 5, 6, 7, 8, 9, 11, 13, 18, 34, 35, 60, 61, 62, 63, 64, 65, 67], "130": [63, 67], "1305": 13, "1306": 16, "1317": 13, "1318": 18, "1319636": 13, "1342": 13, "1346": [7, 63], "1350544": [8, 64], "14": [2, 6, 7, 8, 9, 16, 18, 23, 33, 35, 53, 58, 60, 62, 63, 64, 65], "14329": 13, "15": [4, 7, 8, 16, 18, 33, 34, 35, 53, 60, 63, 64], "1542": 18, "1599": 18, "16": [8, 10, 14, 18, 35, 39, 64, 66], "1604": 20, "1613": 13, "1623": [9, 65], "1645": [7, 63], "17": [8, 18, 19, 34, 64], "1780": 20, "18": [8, 10, 18, 19, 64, 66], "1804": 34, "181": 13, "183": 13, "1838509440422058": [11, 67], "1852": [9, 65], "18653": 13, "186747632920742": 18, "1879": 18, "19": [7, 13, 18, 60, 63], "1905": [33, 53], "1909": 18, "19097438035532832": [8, 64], "1913": [35, 39], "1914": [35, 39], "19278147350996733": 18, "1957": [7, 63], "1965": 13, "197": 13, "199": 13, "1998": 13, "1999": [13, 29, 57], "19th": 13, "1_a": 59, "1_b": 59, "1_i": 59, "1e": [8, 39, 41, 53, 64], "1l": [35, 39], "1m45": [9, 65], "1x": 35, "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 24, 27, 29, 30, 32, 33, 34, 35, 37, 39, 41, 42, 49, 50, 53, 54, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69], "20": [7, 8, 9, 11, 13, 16, 18, 23, 45, 63, 64, 65, 67], "200": [8, 18, 35, 39, 64], "2000": 13, "2001": 35, "2004": [13, 29], "2007": 13, "2010": [13, 35], "2012": [13, 39, 53], "2013": 13, "2014": 13, "2016": 13, "2017": 13, "2019": 13, "201900070": 13, "2021": [13, 32], "2023": [13, 52], "2024": 13, "20328544": [10, 66], "2048": 41, "209": 13, "20l": [35, 39], "21": [9, 13, 16, 18, 32, 65], "2109": 13, "2110": [13, 32], "212": 13, "21474883": 23, "217": 13, "22": [7, 8, 9, 18, 63, 64, 65], "221": 13, "222": 13, "22331": 13, "2271": 18, "22m20": 19, "23": [6, 9, 13, 16, 18, 20, 34, 62, 63, 65, 67], "2324": [35, 39], "2325": [35, 39], "2346": [7, 63], "2382": [35, 39], "24": [18, 19, 20, 35], "2415": [18, 64], "25": [7, 16, 18, 19, 20, 34, 63], "2500": 20, "250532507896423": 18, "256": [10, 24, 66], "259": [13, 39, 53], "26": [13, 18], "262": 35, "2642": [7, 63], "2696": 19, "27": [13, 16, 18], "2750": [9, 65], "277": [13, 39, 53], "2794": 16, "28": [13, 18, 19, 25], "2836": 20, "2858": 20, "287": 13, "2877": 18, "29": [13, 18, 19], "2910": 20, "2911": 20, "291878283023834": [8, 64], "2976": [9, 65], "2d": [34, 39, 53], "2e": 41, "2m10": 19, "2m11": 19, "2m12": 19, "2m14": 19, "2m16": 19, "2m17": 19, "2m21": 19, "2nd": 35, "3": [1, 2, 3, 4, 5, 6, 8, 9, 13, 14, 18, 19, 20, 22, 23, 24, 27, 30, 32, 33, 34, 35, 37, 39, 43, 44, 48, 49, 53, 56, 57, 58, 59, 61, 62, 63, 64, 65], "30": [7, 9, 11, 16, 18, 19, 20, 63, 64, 65, 67], "300": [8, 18, 64], "3004": 13, "3062": 20, "308": 13, "3091": 20, "31": [7, 13, 18, 52, 63], "3128": 35, "313": 13, "32": [7, 19, 63], "321199357509613": [8, 64], "3231": 20, "3280": 20, "33": [13, 35, 39], "3311": [7, 63], "333": 13, "3344": 19, "34": 13, "3420": [35, 39], "3476": [7, 63], "35": [9, 65], "35468656790908426": 18, "355": 13, "3554": 19, "356": 35, "3585": 20, "36": [19, 20, 35], "3690": 35, "37": 16, "3741": [35, 39], "38": [7, 13, 16, 63], "3833": [7, 63], "38510115444660187": [8, 64], "39": [7, 63], "391": 13, "396": 13, "3e": [7, 16, 20, 63], "3f": 35, "3fbe27d50ab2": 35, "4": [1, 2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 18, 24, 27, 30, 33, 34, 35, 37, 39, 41, 53, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69], "40": [7, 11, 35, 63, 67], "400": 52, "4012": 35, "41": 19, "4100": 20, "41043267399072647": 18, "41306384": [10, 66], "4138": 16, "414": 35, "415": 13, "42": [8, 13, 19, 64], "4204": 13, "4237": 19, "42397027": [8, 64], "425": 13, "4273": 19, "43": 19, "4333": [7, 63], "4394": 13, "4414": 19, "4443": [35, 39], "45": 18, "4518": 19, "4571": [9, 65], "4577": [7, 63], "4580": [7, 63], "46": 18, "460": 35, "4602": [7, 63], "4609": 19, "4615": 20, "4667": [7, 19, 63], "47": [7, 8, 16, 18, 19, 63, 64], "4777": 19, "48": [8, 18, 19, 20, 64], "4827": [9, 65], "4834": 20, "4839": [9, 65], "4840": 19, "4883": [9, 65], "4898": 19, "49": [8, 16, 18, 20, 29, 49, 64], "4924": 16, "4d": [35, 39], "4m50": 19, "5": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 16, 18, 23, 24, 34, 35, 37, 53, 57, 58, 59, 61, 62, 63, 64, 65, 66], "50": [8, 11, 18, 35, 64, 67], "500": 34, "508": 35, "51": [13, 39, 53], "5112": [35, 39], "5113": [35, 39], "5143": [9, 65], "5161": [9, 65], "5167": 19, "52": [8, 16, 18, 64], "525": [8, 64], "5280": 16, "5286": 19, "53": [7, 8, 18, 63, 64], "5321": 20, "5333": [16, 18], "5333333333333333": [8, 64], "5390": 19, "54": [8, 18, 64], "5429": 20, "545": 18, "5488135": [11, 67], "55": [8, 64], "5500": [7, 19, 63], "5571": [9, 18, 65], "5593": [35, 39], "55th": 13, "56": [7, 18, 63], "5643": [7, 63], "5645": [9, 65], "567": 13, "56822": 35, "57": [8, 18, 64], "5714": [7, 9, 63, 65], "57602973": [8, 64], "57768928": [10, 66], "5786": [9, 16, 19, 65], "58": [18, 35], "5804": [7, 63], "5833": 16, "5857": [16, 19], "59": [7, 18, 63], "5929": [9, 19, 65], "5d": 35, "5gb": 35, "5l": [35, 39], "5mb": 35, "6": [1, 4, 5, 6, 7, 8, 9, 13, 16, 18, 19, 20, 23, 27, 35, 57, 60, 61, 62, 63, 64, 65], "60": [8, 11, 16, 19, 20, 45, 64, 67], "6000": 18, "609": 35, "6122": [35, 39], "6167": [7, 63], "618": 35, "6194": 20, "6197": [7, 63], "62": [8, 18, 64], "628978729248047": [8, 64], "6290": [9, 65], "6337871": [10, 66], "6386": 16, "6392": 16, "6429": [7, 9, 20, 63, 65], "65": 18, "6500": 19, "6518": [7, 63], "65196735": [8, 64], "6571": [9, 65], "661": 13, "6613": [9, 65], "66545": 13, "6667": 18, "6729": [7, 63], "68": [16, 19], "6856217": [10, 66], "6881": 20, "6_6": 13, "7": [4, 8, 9, 13, 16, 18, 20, 25, 34, 35, 60, 64, 65], "70": [11, 67], "7000": 20, "701": 13, "7057": [9, 65], "705889": [13, 39, 53], "71": [8, 64], "7119": [7, 63], "7143": 20, "71518937": [11, 67], "7189": 16, "72": [19, 20], "7258": [9, 65], "73": [9, 20, 65], "7333": [7, 18, 19, 20, 63], "7419354838709677": [9, 65], "7471": [9, 65], "75": [9, 65], "7500": [7, 16, 63], "7571": 19, "7573": 19, "7581": [9, 65], "76": [13, 18], "7657": [9, 65], "7667": [7, 19, 20, 63], "7692": 19, "77": [8, 64], "7714": 20, "7742": [9, 65], "7747": 13, "78": [9, 65], "7803": [9, 65], "785": 13, "7857": [8, 19, 64], "7965": [7, 63], "8": [0, 1, 2, 3, 8, 9, 10, 11, 15, 18, 23, 24, 34, 35, 37, 57, 58, 59, 64, 65, 66, 67], "80": [11, 67], "8000": [18, 19, 20], "8054": 19, "8071": 19, "81": [9, 65], "815": 13, "8166666666666667": 19, "817": 13, "8189": 19, "8192": [9, 19, 51, 65, 69], "823": 13, "825": 18, "8286": [7, 19, 63], "83": [9, 19, 20, 65], "8333": [18, 19, 20], "8344": 19, "835998997092247": [8, 64], "84": [19, 20], "8429": [18, 20], "8571": 18, "859": 35, "86": [9, 65], "8643": [7, 63], "8666666666666667": [11, 67], "8667": [8, 18, 64], "87": [9, 19, 65], "8714": 19, "875": 18, "88": [9, 18, 65], "8844525068998337": 18, "8857": 18, "89": [7, 9, 18, 63, 65], "8901": 19, "8952": [9, 65], "9": [2, 5, 8, 9, 18, 19, 20, 34, 39, 52, 53, 58, 61, 64, 65], "90": [11, 67], "9000": [8, 18, 64], "9036": 19, "91": [9, 65], "9143": 20, "9286": [8, 18, 20, 64], "93": [7, 63], "9327": [9, 65], "9329": [13, 39, 53], "9333": [7, 8, 18, 63, 64], "9333333333333333": 18, "94": [9, 65], "9429": [7, 8, 18, 20, 63, 64], "945": [8, 64], "95": 18, "9500": [7, 16, 63], "9513051249086857": [8, 64], "955": [8, 64], "95847886": [8, 64], "96": [19, 20], "9657": [9, 65], "96666664": 20, "9666666666666667": [8, 18, 64], "9667": [8, 18, 64], "96it": 23, "9714": 18, "978": 13, "9833": 16, "9833333492279053": 16, "9857": [7, 8, 16, 63, 64], "9929": [7, 16, 63], "9993979": [8, 64], "A": [0, 3, 9, 13, 14, 18, 19, 20, 25, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 46, 50, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 69], "AND": 34, "And": [35, 39], "As": [0, 18, 35, 59, 63, 64, 69], "At": [32, 40], "BE": 34, "Be": 34, "By": [25, 33, 34, 35, 37, 41, 42, 44, 45, 53, 62, 65, 69], "For": [0, 3, 14, 27, 29, 34, 35, 37, 39, 41, 42, 43, 46, 49, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "IT": [63, 67], "If": [0, 14, 31, 32, 34, 35, 36, 37, 39, 41, 53, 56, 58, 63, 64, 65, 67, 69], "In": [0, 1, 13, 14, 18, 25, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69], "It": [6, 14, 18, 25, 29, 33, 34, 35, 37, 39, 42, 43, 44, 45, 52, 53, 55, 57, 62, 64, 69], "Its": [35, 39], "NOT": [2, 34, 35, 58], "No": 53, "Not": [6, 14, 37, 53, 62], "OR": 34, "On": [42, 43], "One": [35, 41, 42, 43, 45, 69], "The": [0, 2, 13, 14, 23, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "Then": 34, "There": [14, 18, 35, 44, 45, 62, 64], "These": [27, 34, 35, 39, 42, 43, 44, 57, 59, 61], "To": [12, 14, 25, 31, 32, 35, 39, 41, 42, 49, 57, 58, 60, 62, 63, 64, 65, 66, 69], "Will": 35, "With": [37, 41, 44, 52], "_": [1, 23, 33, 34, 35, 53, 57, 63], "_00263": 13, "____": 14, "_____": 14, "______": 14, "_______": 14, "_____________": 14, "__call__": [30, 33, 34, 35, 36, 37, 39, 53], "__getitem__": 37, "__hash__": [33, 34, 53], "__init__": [2, 7, 8, 18, 30, 33, 34, 35, 36, 37, 38, 39, 41, 53, 58, 63, 64], "__repr__": 34, "__traceback__": [34, 37], "__version__": 35, "_a": 13, "_ar": [2, 58], "_cach": 34, "_cod": 63, "_data": 52, "_diagrammablefactori": 34, "_diagrammablefactoryt": 34, "_discopy_box_var": 34, "_discopy_ty_var": 34, "_entitytyp": 34, "_fast_init": 35, "_init_weight": 35, "_lambeq_box_var": 34, "_lambeq_ty_var": 34, "_nestedsequ": [39, 53], "_ob": 52, "_require_grads_hook": 35, "_stack": 34, "_summarise_box": [2, 58], "_supportsarrai": [39, 53], "_tket": 34, "_tket_reg_width": 34, "a_det": 43, "a_i": 34, "aam": 34, "ab": [13, 33, 35, 37, 53], "abc": [33, 34, 36, 37, 38, 39, 48, 53], "abcd": [3, 59], "abcxi": [37, 53], "abhinav": 13, "abil": [29, 44, 52, 54], "abl": [35, 43, 44, 61, 64], "about": [0, 13, 14, 18, 32, 35, 46, 58, 62, 64], "abov": [0, 14, 34, 35, 36, 39, 43, 44, 52, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69], "abramski": [13, 29], "absolut": [37, 39, 53], "abstract": [21, 29, 33, 34, 36, 37, 38, 39, 44, 48, 50, 53, 54, 55, 58, 59, 60, 69], "ac": 13, "ac04": [13, 29], "academ": 13, "acc": [7, 8, 9, 16, 18, 19, 20, 63, 64, 65], "acceler": 35, "accept": [0, 14, 34, 35, 39, 52, 53], "access": [13, 14, 35, 37, 39, 41, 44, 53, 61, 64, 66, 69], "accommod": [29, 58, 62], "accompani": [0, 32], "accord": [34, 37, 53, 54, 55, 62], "accordingli": [35, 44], "account": [27, 29, 34, 41, 43, 52, 64, 69], "account_email": [8, 64], "accross": 55, "accumul": 58, "accur": [25, 42, 43, 44, 45, 62, 64], "accuraci": [7, 8, 9, 11, 16, 19, 20, 41, 42, 44, 47, 55, 63, 65, 67], "achiev": [35, 39, 54], "aclanthologi": 13, "aclweb": 13, "across": [44, 61], "act": [29, 34, 61], "action": [0, 51, 52], "activ": [18, 31, 35, 64, 68], "active_adapt": 35, "actual": [0, 1, 25, 34, 36, 42, 53, 57, 58, 59, 62, 66, 69], "acycl": 29, "ad": [0, 14, 27, 34, 35, 36, 39, 52, 53, 55, 60, 62], "adam": [8, 18, 63, 64], "adamw": [7, 16, 39, 53, 63], "adapt": [13, 33, 34, 35, 39, 53, 60], "adapter_config": 35, "adapter_kwarg": 35, "adapter_nam": 35, "adapter_state_dict": 35, "add": [0, 1, 2, 14, 34, 35, 36, 37, 39, 52, 53, 57, 58, 63], "add_adapt": 35, "add_assert": 34, "add_barri": 34, "add_bit": 34, "add_blank_wir": 34, "add_c_and": 34, "add_c_and_to_regist": 34, "add_c_copybit": 34, "add_c_copyreg": 34, "add_c_modifi": 34, "add_c_not": 34, "add_c_not_to_regist": 34, "add_c_or": 34, "add_c_or_to_regist": 34, "add_c_pred": 34, "add_c_range_pred": 34, "add_c_regist": 34, "add_c_setbit": 34, "add_c_setreg": 34, "add_c_transform": 34, "add_c_xor": 34, "add_c_xor_to_regist": 34, "add_circbox": 34, "add_circbox_regwis": 34, "add_circbox_with_regmap": 34, "add_circuit": 34, "add_classicalexpbox_bit": 34, "add_classicalexpbox_regist": 34, "add_conditional_barri": 34, "add_conjugation_box": 34, "add_custom_g": 34, "add_diagonal_box": 34, "add_dummybox": 34, "add_expbox": 34, "add_gat": 34, "add_gate_method": 34, "add_mani": [30, 39, 53], "add_memory_hook": 35, "add_model_tag": 35, "add_modul": [35, 39], "add_multiplexed_tensored_u2": 34, "add_multiplexedrot": 34, "add_multiplexedu2": 34, "add_multiplexor": 34, "add_not": [34, 37], "add_pauliexpbox": 34, "add_pauliexpcommutingsetbox": 34, "add_pauliexppairbox": 34, "add_phas": 34, "add_phasepolybox": 34, "add_prefix": 35, "add_q_regist": 34, "add_qcontrolbox": 34, "add_qubit": 34, "add_rul": [30, 36, 53], "add_state_preparation_box": 34, "add_termsequencebox": 34, "add_toffolibox": 34, "add_unitary1qbox": 34, "add_unitary2qbox": 34, "add_unitary3qbox": 34, "add_wasm": 34, "add_wasm_to_reg": 34, "addit": [14, 29, 34, 35, 37, 39, 46, 49, 52, 53, 54, 57, 58, 60, 63], "addition": [29, 45, 49, 63], "address": [42, 49, 60, 61, 64, 69], "adj": [1, 2, 57, 58], "adjac": [33, 34, 53, 60], "adject": [1, 27, 43, 57], "adjectiv": 52, "adjoint": [29, 34, 52, 54, 57, 59, 61], "adjunct": 34, "adjust": [39, 45, 52, 53, 55], "admit": [37, 53], "advanc": [13, 29, 30, 35, 55, 59, 63, 64, 65], "advantag": [41, 61, 62], "advent": 43, "adverb": [47, 61], "aer": 41, "aerbackend": [9, 19, 41, 65], "aerospac": 13, "affect": [33, 35, 37, 39, 41, 52, 53], "after": [1, 10, 12, 31, 34, 35, 37, 39, 41, 44, 45, 53, 57, 61, 66], "afterward": 35, "again": [34, 39, 53, 59, 61, 62, 64], "against": [35, 36, 39, 53, 56], "aggreg": 69, "agnost": 29, "ahm": 52, "ai": [29, 44, 69], "ailab": 35, "aim": [14, 44, 45, 69], "al": [33, 39, 52, 53, 67], "alain": 13, "albert": 35, "alexi": [13, 32], "algebra": [13, 29, 59, 69], "algorithm": [13, 29, 34, 35, 39, 44, 53, 55], "alia": [35, 39], "alic": [15, 23, 24, 27], "alice__n_0": 15, "alice__n_1": 15, "alice__n_2": 15, "align": 0, "all": [0, 1, 14, 18, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 50, 52, 53, 55, 57, 58, 60, 62, 63, 64, 65], "all_circuit": [7, 8, 9, 11, 16, 18, 19, 20, 41, 63, 64, 65, 67, 69], "all_pair_circuit": [8, 18, 64], "allclos": 35, "alloc": [35, 41], "allow": [14, 18, 29, 32, 34, 35, 37, 39, 41, 43, 49, 52, 53, 54, 59, 60, 61, 64, 69], "allow_bridg": 34, "almost": 69, "along": [3, 29, 34, 35, 59], "alongsid": [35, 37, 39, 53], "alpha": [23, 37], "alphabet": 37, "alpin": 69, "alreadi": [0, 14, 34, 35, 37, 39, 53, 58, 65], "also": [0, 14, 18, 27, 29, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69], "alter": 29, "altern": [18, 49, 51, 52, 57, 64, 67], "although": [27, 35, 49], "alwai": [29, 35, 39, 52, 53, 58, 69], "always_cal": [35, 39], "al\u00e1n": 13, "am": [36, 43, 53], "amaz": 43, "amazon": 69, "amen": [29, 50], "among": [42, 58], "amount": [1, 34, 41, 54, 57, 64], "amplifi": 34, "amplitud": 52, "an": [1, 11, 13, 14, 20, 25, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69], "analogu": 29, "analys": [42, 43, 55, 69], "analysi": [25, 42, 43, 44, 62], "analyt": [39, 53], "analyz": 44, "anatomi": 13, "ancilla": 34, "angl": [29, 34, 40, 66], "angle0": 34, "angle1": 34, "angle2": 34, "ani": [0, 3, 14, 27, 29, 32, 33, 34, 35, 36, 37, 39, 43, 44, 45, 50, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65], "anim": 42, "anna": [13, 32], "anneal": 69, "annot": [0, 29, 35, 37, 49, 53, 54, 60], "announc": 32, "annual": 13, "anoth": [1, 6, 25, 29, 34, 35, 46, 57, 59, 60, 61, 62, 69], "ansatz": [2, 4, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 23, 29, 30, 41, 52, 53, 60, 63, 64, 65, 66, 67], "ansatz_opt": 14, "answer": 0, "ans\u00e4tz": [0, 29, 30, 32, 39, 48, 50, 52, 53, 60], "anthologi": 13, "anti": 34, "anticonjug": [34, 48], "antonio": 13, "anymor": [49, 52], "anyth": 35, "aound": 34, "apach": [32, 33, 53], "apart": 46, "api": [35, 44, 48, 49, 50, 52, 58, 64], "appar": 0, "appear": [1, 27, 34, 35, 37, 43, 53, 57], "append": [7, 8, 9, 11, 16, 18, 19, 20, 23, 34, 36, 53, 63, 64, 65, 67], "appli": [0, 1, 5, 10, 14, 27, 29, 30, 31, 33, 34, 35, 36, 37, 39, 44, 52, 53, 57, 58, 59, 60, 61, 64, 65, 66, 67], "applic": [11, 13, 14, 29, 30, 35, 37, 39, 42, 50, 53, 54, 57, 62, 67], "apply_functor": 34, "apply_g": 34, "apply_parametrized_g": 34, "approach": [18, 44, 45, 64], "appropri": [0, 34, 35, 45, 50, 58, 62, 69], "approx": 65, "approxim": [35, 39, 52, 53, 63, 64, 67, 69], "april": 13, "ar": [0, 1, 2, 3, 14, 15, 18, 23, 25, 27, 29, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "ar_with_cach": 34, "aram": 13, "arang": [7, 8, 9, 16, 19, 20, 63, 64, 65], "arbitrari": 49, "arch": 34, "architectur": [33, 34, 41, 53, 69], "archiv": 56, "area": 46, "arg": [34, 35, 37, 39, 53], "arg0": 34, "arg0_in": 34, "arg1": 34, "arg1_in": 34, "arg_in": 34, "arg_inout": 34, "arg_out": 34, "argmax": [8, 9, 11, 18, 64, 65, 67], "args_in": 34, "args_out": 34, "args_wasm": 34, "argument": [25, 29, 30, 34, 35, 37, 39, 52, 53, 57, 58, 62, 65], "aris": 56, "ariti": 34, "around": 34, "arrai": [1, 2, 8, 10, 11, 20, 23, 24, 33, 34, 39, 52, 53, 57, 58, 63, 64, 65, 66, 67], "arrang": 61, "arraylik": [39, 53], "arrow": [3, 29, 37, 53, 58, 59], "art": [29, 31, 48, 49, 50, 52], "artefact": 29, "articl": [13, 32, 46], "artifact": 35, "artifici": 13, "arxiv": [13, 32, 33, 34, 35, 53], "ascii": [14, 34, 37, 52, 53], "ask": [14, 32, 35, 61], "aspect": [13, 34, 42], "aspuru": 13, "assembli": 54, "assert": [1, 3, 34, 35, 57, 59], "assess": 69, "assign": [11, 14, 34, 35, 39, 40, 42, 46, 52, 54, 57, 60, 64, 66, 67], "assist": [35, 44], "assistant_model": 35, "associ": [3, 13, 14, 29, 34, 35, 36, 37, 39, 40, 53, 59, 60, 66, 67, 68], "assum": [14, 25, 34, 35, 37, 39, 43, 51, 53, 62], "assumpt": [33, 53], "asymmetri": [3, 9, 34, 59, 65], "asynchron": [35, 39], "atom": [4, 10, 14, 29, 34, 35, 36, 37, 52, 53, 54, 58, 60, 66, 69], "atomic_cat": [37, 53], "atomictyp": [2, 4, 5, 7, 8, 9, 10, 11, 15, 16, 18, 19, 20, 22, 23, 24, 30, 37, 41, 52, 53, 58, 60, 61, 63, 64, 65, 66, 67], "attach": 35, "attempt": [18, 35, 37, 53], "attend": 35, "attent": 35, "attention_mask": 35, "attn_implement": 35, "attr": [37, 53], "attribut": [0, 33, 34, 35, 36, 37, 39, 52, 53, 55, 57, 66, 68, 69], "attributeerror": [35, 39], "augment": [33, 53], "august": 13, "authent": 35, "author": [0, 32, 35], "auto": [24, 34, 35, 37, 53], "auto_class": 35, "autograd": [18, 34, 35, 39, 52, 64], "autom": 42, "automat": [34, 35, 37, 43, 49, 51, 52, 53, 64, 67], "automodel": 35, "automodelforcausallm": 35, "autoregress": 35, "auxiliari": [14, 43, 47, 58, 61], "avail": [12, 14, 32, 34, 35, 37, 46, 49, 52, 55, 57, 58, 61, 63, 65, 69], "available_mod": [30, 37, 53], "available_model": [30, 37, 53], "available_rul": [30, 36, 53], "averag": [35, 39, 55, 67], "avoid": [14, 18, 34, 35, 39, 45, 52, 64], "awar": [13, 34, 41, 69], "ax": [7, 8, 9, 16, 19, 20, 23, 34, 63, 64, 65], "ax_bl": [7, 8, 9, 16, 19, 20, 63, 64, 65], "ax_br": [7, 8, 9, 16, 19, 20, 63, 64, 65], "ax_tl": [7, 8, 9, 16, 19, 20, 63, 64, 65], "ax_tr": [7, 8, 9, 16, 19, 20, 63, 64, 65], "axi": [3, 23, 29, 34, 35, 59], "azur": 69, "b": [3, 8, 14, 18, 29, 33, 37, 53, 54, 57, 59, 64], "ba": [34, 37, 53, 62], "back": [34, 35, 52], "backend": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 22, 24, 29, 30, 33, 35, 36, 37, 39, 40, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69], "backend_config": [8, 9, 19, 34, 39, 41, 53, 64, 65, 69], "backpropag": [34, 41], "backward": [8, 18, 30, 35, 39, 53, 59, 62, 64], "backward_appl": [30, 37, 53], "backward_composit": [30, 37, 53], "backward_crossed_composit": [30, 37, 53], "backward_pr": [35, 39], "backward_type_rais": [30, 37, 53], "bad": [1, 57], "badg": 52, "bag": [27, 29, 30, 44, 52], "bag_of_words_read": [37, 48], "bake": [7, 8, 11, 63, 64, 67], "balanc": 42, "ball": 27, "ban": 0, "bar": [35, 37, 52, 53], "barrier": 34, "barrier_arg": 34, "barrier_bit": 34, "barrier_qubit": 34, "bart": 35, "base": [6, 13, 25, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 47, 48, 49, 50, 52, 53, 55, 57, 58, 60, 65, 66, 67], "base_model": 35, "base_model_prefix": 35, "baseansatz": [30, 33, 48, 53, 58], "baselin": 69, "basestream": 35, "basi": [33, 34, 52, 53], "basic": [29, 30, 45, 52, 55, 57], "batch": [14, 34, 35, 37, 39, 53, 55, 63, 64, 65], "batch_id": 35, "batch_siz": [7, 8, 9, 16, 18, 19, 20, 35, 37, 39, 53, 63, 64, 65], "batchnorm": [35, 39], "bc": [34, 37, 53], "bce": [9, 19, 20, 39, 53, 65], "bcewithlogitsloss": [7, 16, 63], "beam": [35, 37, 53], "beam_indic": 35, "beam_siz": [35, 37, 53], "bearer": 35, "becaus": [27, 31, 35, 37, 42, 53, 63, 66], "becom": [1, 36, 37, 39, 43, 52, 53, 57, 58, 59, 60, 61], "bed": 22, "been": [14, 34, 35, 37, 44, 52, 53, 57, 64, 66], "befor": [0, 1, 10, 14, 27, 34, 35, 36, 37, 39, 53, 57, 58, 65, 66], "begin": [37, 62], "beginn": 46, "behav": [35, 59], "behavior": [34, 35, 39], "behaviour": [0, 34, 35, 36, 44, 52, 53, 64], "behind": [1, 45, 57], "being": [18, 27, 29, 34, 35, 37, 39, 44, 52, 53, 64], "believ": 43, "bell_test": 34, "belong": [34, 42], "below": [8, 14, 25, 35, 37, 39, 41, 42, 49, 53, 55, 57, 58, 60, 62, 64, 65, 67, 69], "benchmark": [35, 58, 69], "bend": 22, "benedetti": 13, "benefit": 35, "bent": 59, "berlin": 13, "bert": [35, 37, 44, 48, 53], "bertconfig": 35, "bertforchartclassif": [35, 48], "bertmodel": 35, "bertpretrainedmodel": [35, 48], "best": [8, 9, 14, 18, 30, 32, 34, 35, 39, 44, 52, 53, 64, 65], "best_epoch": [9, 65], "best_model": [9, 65], "better": [0, 44, 52, 62], "bettertransform": 35, "between": [29, 33, 34, 35, 37, 39, 42, 44, 49, 50, 53, 54, 55, 57, 59, 64, 69], "bfloat16": [35, 39], "bia": [35, 39, 45], "bibliographi": 30, "biclos": [52, 57, 62], "biclosed_typ": [37, 52, 53], "big": [1, 35, 57, 69], "big_model": 35, "bigger": 35, "biggest": 35, "bin": 35, "binari": [9, 11, 19, 20, 30, 34, 35, 37, 39, 41, 51, 53, 63, 64, 65, 67], "binary_cross_entropi": [8, 18, 64], "binary_rul": 35, "binarycrossentropyloss": [9, 19, 20, 30, 39, 42, 48, 52, 53, 55, 65], "bird": 42, "bit": [29, 34, 41, 48, 68], "bit_index": 34, "bit_readout": 34, "bit_valu": 34, "bitlogicexp": 34, "bitregist": 34, "bitsandbyt": 35, "bitstr": 34, "bitwis": 34, "black": [9, 65], "blank": [34, 37, 53], "bloch": 34, "block": [29, 33, 43, 52, 53, 60], "blog": 35, "bnc": 43, "bob": [13, 23, 27, 29, 32], "bobcat": [14, 25, 29, 30, 31, 37, 49, 52, 53, 62], "bobcat_pars": [37, 48, 53], "bobcatpars": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 30, 37, 41, 48, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67], "bobcatparseerror": [30, 37, 53], "bodi": 35, "bond": [33, 53, 60], "bond_dim": [4, 14, 24, 33, 53, 60], "bond_typ": [30, 33, 53], "book": [22, 43, 46], "bool": [33, 34, 35, 36, 37, 39, 53], "boolean": 35, "booltensor": 35, "bos_token_id": 35, "both": [8, 11, 14, 18, 27, 29, 32, 34, 35, 36, 37, 39, 42, 44, 50, 53, 58, 64, 67], "bottleneck": 52, "bottom": 34, "bound": [30, 34, 35, 39, 53], "boundari": [37, 53], "box": [1, 2, 3, 10, 29, 30, 33, 34, 35, 36, 37, 41, 42, 48, 52, 53, 54, 57, 58, 59, 62, 63, 66, 68], "box0": 34, "box1": 34, "box_d2l": 34, "box_l2d": 34, "boxnod": 34, "bra": [1, 34, 41, 48, 52, 57], "brace": 37, "bracket_cat": [37, 53], "bracketed_cat": [37, 53], "braket": 69, "branch": 35, "break": [8, 18, 25, 35, 37, 39, 43, 62, 64], "bridg": [29, 34, 61], "briefli": 44, "british": 43, "brittl": 52, "broad": [46, 69], "broadcast": 35, "broader": [44, 46, 61], "broken": 52, "brought": 35, "brown": 43, "bsd": [34, 48], "btr": [37, 53], "buf": [35, 39], "buffer": [35, 39], "bug": [32, 52], "build": [29, 34, 35, 39, 41, 43, 52, 53, 59], "built": [35, 59], "builtin": [9, 19, 20, 65], "bump": 52, "bundl": 55, "bwd": 35, "bwd_comp": 35, "bx": [14, 34, 37, 53], "by_kei": [7, 8, 9, 16, 19, 20, 23, 63, 64, 65], "byte": [35, 39, 53], "c": [3, 9, 11, 13, 14, 19, 20, 34, 37, 39, 52, 53, 57, 59, 65, 67], "c_regist": 34, "cach": [34, 35, 37, 53], "cache_dir": [35, 37, 53], "calc_score_binari": 35, "calc_score_unari": 35, "calcul": [23, 33, 34, 35, 39, 41, 42, 53, 55], "calculate_loss": [30, 39, 53], "calculu": 59, "call": [25, 29, 34, 35, 36, 37, 39, 43, 49, 50, 53, 57, 59, 62, 65], "call_super_init": [35, 39], "callabl": [33, 34, 35, 37, 39, 53, 63, 65], "caller": [35, 39], "cambridg": [13, 29], "can": [0, 1, 3, 6, 14, 18, 21, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69], "can_gener": 35, "candc": [37, 53], "candid": [35, 36, 53], "cannot": [0, 14, 37, 53, 57, 59, 67], "cap": [1, 3, 29, 34, 48, 57, 59, 61], "capabl": [13, 14, 35, 41, 43, 44, 52, 69], "capit": 37, "capitalis": [37, 53], "captur": [34, 44], "card": 35, "care": [35, 45], "carri": [34, 43], "carrier": 29, "case": [0, 14, 18, 25, 27, 29, 30, 34, 35, 36, 37, 39, 40, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 61, 62, 66], "case_sensit": [36, 53], "casefold": 37, "caseless": 37, "cast": [35, 39], "cat": [8, 18, 27, 35, 37, 42, 53, 64], "cat_id": 35, "catalog": 49, "categor": [13, 29, 37, 42, 53, 57], "categori": [1, 12, 13, 14, 29, 30, 33, 35, 37, 42, 43, 48, 49, 52, 53, 54, 57, 63, 65, 67, 69], "categoris": [29, 42], "caus": [29, 36, 37, 45, 52, 53, 64], "causal": [34, 35], "ccg": [13, 14, 29, 35, 36, 37, 48, 49, 50, 52, 53, 57, 62], "ccg2discocat": 52, "ccg_parser": [26, 37, 48, 53], "ccg_rule": 48, "ccg_tree": 48, "ccg_type": 48, "ccgbank": [13, 29, 37, 52, 53], "ccgbank_pars": 48, "ccgbankpars": [30, 37, 48, 49, 52, 53], "ccgbankparseerror": [30, 37, 53], "ccgparseerror": [37, 53], "ccgparser": [0, 30, 37, 48, 49, 52, 53, 57], "ccgrule": [30, 37, 48, 52, 53], "ccgruleuseerror": [30, 37, 53], "ccgtree": [14, 30, 37, 48, 49, 52, 53], "ccgtype": [30, 37, 48, 52, 53], "ccx": 34, "cdot": [29, 42, 54, 57, 61, 66], "cdoubl": [35, 39], "ce": [39, 53], "cell": [37, 52, 53, 62, 64], "center": [9, 37, 65], "certain": [14, 29, 32, 35, 39, 43, 44, 58, 60, 61, 62], "certif": [52, 56], "cfg": [35, 52], "ch": [13, 34], "chain": [29, 35, 41, 63, 67], "challeng": [43, 46], "cham": 13, "chang": [0, 14, 29, 34, 35, 36, 37, 39, 52, 53, 56, 58, 62], "channels_last": [35, 39], "chapter": 57, "char": 37, "charact": [14, 34, 35, 37, 52, 53], "characteris": 29, "characters_written": 37, "charli": 27, "chart": [37, 53], "chartclassifierconfig": 35, "chartclassifieroutput": 35, "chartpars": [35, 48], "chat": 32, "chatbot": 44, "chatgpt": 44, "check": [3, 34, 35, 36, 37, 39, 52, 53, 59], "check_match": [30, 37, 53], "checker": 34, "checkpoint": [30, 35, 39, 48, 52, 53, 63, 64, 65], "checkpoint_path": [39, 53], "chees": 22, "chef": [63, 67], "child": [30, 35, 37, 39, 53], "children": [27, 35, 37, 39, 52, 53], "china": 35, "choic": [14, 29, 32, 41, 42, 50, 54, 60, 62, 65], "chomski": 29, "choos": [30, 35, 36, 45, 53, 55, 61, 63, 64], "chosen": 34, "chow": 13, "chri": 13, "chunk": [35, 43], "church": [9, 65], "circ": [8, 11, 18, 57, 59, 64, 67], "circbox": 34, "circl": [9, 65], "circuit": [0, 1, 2, 4, 8, 10, 12, 13, 14, 29, 30, 32, 33, 34, 36, 39, 40, 41, 44, 47, 48, 50, 52, 53, 54, 55, 58, 60], "circuit0": 34, "circuit1": [1, 34, 57], "circuit2": [1, 34, 57], "circuit3": 34, "circuit_map": [30, 39, 53], "circuitansatz": [0, 2, 30, 33, 48, 52, 53, 57, 60], "ckpt": 35, "cla21": [13, 29, 49, 52], "clair": 24, "clariti": 14, "clark": [13, 29, 32], "class": [0, 1, 2, 7, 8, 12, 14, 18, 21, 25, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69], "classic": [12, 13, 14, 20, 29, 30, 32, 34, 39, 40, 41, 44, 47, 48, 50, 52, 53, 54, 55, 58, 61, 64, 65, 67], "classicalexpbox": 34, "classicaltransform": 34, "classif": [13, 30, 41, 44, 52, 63, 65, 67], "classifi": [18, 42, 52, 63, 64, 67, 69], "classmethod": [34, 35, 36, 37, 39, 53], "classvar": [34, 37, 53], "claus": [13, 34, 48, 65], "clear": [0, 35, 39], "clearli": [43, 61], "cli": [35, 52], "click": 68, "clone": 35, "close": [0, 13, 29, 54, 57, 61, 69], "closer": 44, "closest": [49, 69], "cloud": [41, 69], "cnot": [1, 2, 33, 53, 57, 58, 60], "cnot_ar": [1, 57], "cnot_functor": [1, 57], "cnot_ob": [1, 57], "co": [34, 35], "cod": [1, 2, 3, 22, 33, 34, 36, 37, 52, 53, 57, 58, 59], "code": [29, 33, 34, 35, 37, 48, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "codebas": 52, "codec": 37, "codomain": [2, 3, 33, 34, 36, 37, 53, 58, 59, 61, 63], "coe21": [13, 58], "coeck": [13, 29, 32], "coerc": 57, "cognit": 13, "coher": 59, "coincid": 29, "colab": 35, "coli": 13, "coli_a_00263": 13, "collabor": 45, "collaps": 52, "collapse_noun_phras": [30, 37, 52, 53], "collect": [29, 33, 34, 37, 39, 43, 44, 48, 53, 56, 59], "color": [7, 8, 9, 16, 19, 20, 23, 34, 63, 64, 65, 68], "colour": [7, 8, 9, 16, 19, 20, 23, 63, 64, 65], "column": 34, "com": [0, 13, 32, 35, 49, 52], "combin": [3, 8, 14, 18, 29, 34, 35, 36, 37, 39, 41, 42, 43, 52, 53, 57, 58, 59, 62, 64, 69], "combinatori": [29, 37, 49, 53], "combining_diagram": [37, 53], "combread": [2, 58], "come": [31, 35, 36, 43, 49, 53, 60, 61], "comjnl": 13, "command": [30, 31, 32, 34, 37, 41, 51, 52, 53], "commands_of_typ": 34, "comment": 0, "commit": [0, 35], "commit_descript": 35, "commit_messag": 35, "common": [27, 29, 34, 41, 42, 43, 44, 52, 58], "commun": [0, 32, 35, 44, 49], "commut": [59, 62], "compact": [13, 29, 57, 61], "compani": [9, 65], "compar": [36, 37, 39, 42, 45, 52, 53, 54, 57, 59, 61, 69], "comparison": [35, 37, 39, 69], "compat": [34, 35, 37, 39, 41, 49, 52, 53, 64], "compet": 42, "compil": [9, 19, 29, 35, 39, 41, 50, 52, 53, 65, 67, 69], "complement": 35, "complet": [7, 8, 9, 16, 18, 19, 20, 30, 34, 40, 43, 45, 58, 61, 63, 64, 65, 68, 69], "complex": [29, 34, 35, 37, 39, 41, 44, 45, 53, 69], "complex128": [34, 35, 39], "complianc": 0, "complic": [14, 27, 43, 58, 59, 61], "compon": [0, 68], "compos": [3, 29, 35, 39, 53, 59, 62], "composit": [0, 13, 14, 29, 32, 34, 36, 37, 48, 50, 52, 53, 54, 57, 58, 59, 62], "compositon": 57, "compound": 58, "comprehens": [41, 46], "compress": 34, "compress_lay": 34, "comput": [11, 13, 18, 29, 30, 33, 34, 35, 39, 40, 41, 43, 46, 50, 52, 53, 54, 55, 57, 58, 62, 65, 66, 67], "computation": [45, 65], "compute_transition_scor": 35, "concaten": [37, 57, 64], "concav": 29, "concept": [44, 46, 52, 57, 69], "conceptu": 44, "concern": 44, "concis": 69, "concret": [27, 29, 34, 35, 40, 48, 50, 54, 55, 57, 58, 60, 67], "concretis": 34, "condit": [27, 29, 34, 35, 59, 69], "condition_bit": 34, "condition_valu": 34, "conect": 34, "conf": 14, "config": 35, "config_class": 35, "configr": 34, "configur": [30, 34, 35, 39, 52, 53, 64, 65, 69], "confirm": 34, "conflict": 52, "conform": [14, 36, 53], "confus": [35, 39], "cong": 29, "conj": [37, 52, 53], "conj_tag": [30, 37, 53], "conjoin": [37, 53], "conjug": [34, 52], "conjugationbox": 34, "conjunct": [30, 36, 37, 43, 52, 53, 60, 69], "connect": [29, 34, 49, 60], "connector": [14, 47, 61], "consecut": [57, 62], "consequ": 59, "consid": [14, 25, 27, 35, 36, 37, 39, 43, 50, 53, 56, 57, 62], "consist": [29, 34, 35, 37, 39, 43, 49, 52, 53, 57, 59, 61, 63, 65, 67], "consol": 14, "constant": [39, 53, 65], "constitu": [35, 43], "constitut": 54, "constrain": 35, "constraint": 35, "construct": [2, 33, 34, 35, 39, 41, 53, 54, 57, 58, 60, 64], "constructor": [33, 52, 53, 62], "consum": [42, 57], "consumpt": 35, "cont": [37, 53], "contact": 0, "contain": [14, 29, 34, 35, 36, 37, 38, 39, 41, 48, 50, 52, 53, 54, 55, 57, 58, 61, 65, 68], "contains_sympi": 34, "content": [39, 53], "context": [29, 34, 35, 39, 42, 43, 57, 61, 63, 67], "contigu": 34, "continu": [35, 37, 52, 53], "contract": [29, 34, 39, 40, 41, 43, 52, 53, 54, 57, 58, 63, 66, 69], "contractor": [24, 34, 57], "contrast": [42, 66], "contrastive_search": 35, "contrib": 31, "contribut": [12, 30, 32, 52, 68], "contributor": 0, "control": [1, 14, 34, 35, 37, 44, 48, 53, 57, 63], "control_0": 34, "control_1": 34, "control_qubit": 34, "contructor": 52, "conv": [35, 39], "conv2d": [35, 39], "conv4": [35, 39], "conv5": [35, 39], "conveni": [35, 49, 54, 55], "convent": [0, 34, 35, 37, 53], "converg": [39, 53], "convers": [32, 35, 36, 49, 50, 52, 53, 60, 62], "convert": [1, 4, 6, 11, 14, 29, 33, 35, 37, 39, 41, 43, 44, 49, 50, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67], "convert_grammar_d2l": 34, "convert_grammar_l2d": 34, "convert_quantum_d2l": 34, "convert_quantum_l2d": 34, "convert_tensor_d2l": 34, "convert_tensor_l2d": 34, "cook": [7, 8, 11, 18, 63, 64, 67], "coordin": [13, 14, 34, 35, 36, 39, 47, 52, 53, 58, 61], "coordinated_or_type_rais": 35, "coordinationrewriterul": [30, 36, 48, 53], "copi": [34, 35, 36, 37, 39, 53], "core": [34, 35, 37, 52, 53], "corpora": [30, 49], "corpu": [13, 29, 37, 43, 49, 53], "correct": [0, 34, 35, 42, 62], "correctli": [35, 39, 42, 53], "correspond": [0, 8, 14, 25, 27, 29, 34, 35, 36, 37, 39, 40, 41, 43, 52, 53, 54, 55, 57, 60, 62, 64, 69], "correspondingli": 52, "cost": [11, 42, 67], "could": [6, 18, 25, 27, 34, 35, 42, 43, 45, 62, 64, 65, 69], "counit": 34, "count": [7, 9, 16, 19, 20, 34, 35, 37, 41, 63, 65], "coupl": [18, 64, 69], "cours": 30, "coursera": 46, "cover": [34, 46, 50, 52, 55, 61, 69], "coverag": [0, 49, 52], "cow": 22, "cpu": [35, 37, 39, 53], "cqcl": [15, 52], "cqm": 29, "creat": [6, 11, 27, 29, 30, 32, 34, 35, 36, 37, 39, 40, 43, 44, 47, 49, 52, 53, 54, 55, 57, 59, 60, 61, 62, 66], "create_extended_attention_mask_for_decod": 35, "create_pr": 35, "create_pregroup_diagram": [5, 34, 57, 61], "created_qubit": 34, "creation": [52, 58], "credenti": 69, "credit": 52, "creg": 34, "creg_nam": 34, "cregmap": 34, "criteria": 35, "criterion": [39, 53], "cross": [9, 11, 14, 19, 20, 29, 30, 36, 37, 39, 42, 53, 63, 65, 67], "crossentropyloss": [30, 39, 42, 48, 52, 53, 55], "crucial": [45, 62], "crx": [33, 34, 53, 60], "cry": 34, "crz": [33, 34, 53, 60], "csc10": [13, 29, 57], "csdg": 34, "cswap": 34, "csx": 34, "csxdg": 34, "cu1": 34, "cu3": 34, "cuda": [35, 39, 53], "cup": [1, 3, 5, 6, 14, 29, 30, 34, 36, 47, 48, 52, 53, 54, 57, 59, 60, 61, 64, 65], "cups_diagram": [6, 62], "cups_read": [6, 21, 37, 48, 62], "current": [14, 29, 34, 35, 37, 39, 49, 52, 53, 55, 62, 69], "current_datetime_hostnam": [39, 53], "curri": [5, 14, 34, 47, 52, 61], "curried_diagram": [5, 61], "curry_functor": [5, 61], "curryrewriterul": [30, 36, 48, 52, 53, 61], "custom": [7, 34, 35, 39, 41, 44, 52, 55, 56, 57], "custom_model": [7, 63], "custom_model_train": [7, 63], "customg": 34, "customgatedef": 34, "customis": 52, "cv": 34, "cvdg": 34, "cx": [1, 2, 34, 57, 58], "cy": 34, "cycl": [33, 39, 53], "cz": 34, "d": [2, 3, 11, 13, 14, 24, 27, 34, 36, 37, 39, 53, 57, 58, 59, 60, 67], "d_": 60, "d_model": 35, "d_n": 60, "d_type": 18, "da": [37, 53], "dag": 34, "dagger": [3, 34, 48, 59], "dahal": 52, "dai": [6, 25, 35, 43, 62, 64], "dangl": 34, "dao": 35, "darwish": 52, "data": [1, 10, 11, 13, 14, 27, 29, 30, 34, 36, 37, 39, 40, 41, 42, 44, 45, 47, 52, 53, 54, 55, 57, 62, 66], "data1": [39, 53], "dataclass": [34, 35], "datapoint": [39, 53], "dataset": [7, 8, 9, 11, 14, 16, 19, 20, 23, 27, 30, 36, 39, 42, 44, 45, 46, 47, 48, 53, 55, 67], "datatyp": [35, 39, 52], "dbox0": 34, "dbox1": 34, "dcl": [35, 37, 53], "de": [13, 32], "deactiv": 35, "dead": 22, "deal": [35, 43, 44, 58, 65], "debug": [7, 8, 11, 63, 64, 67], "decai": [63, 65], "decid": 0, "decim": 37, "decis": [29, 42, 50, 54, 60], "declar": 59, "decod": [34, 35, 52], "decoder_": 35, "decompos": [34, 52], "decreas": 42, "dedic": 52, "deduct": 29, "deem": 0, "deep": [43, 44, 69], "deepen": 46, "deeplearn": 35, "deepspe": 35, "def": [1, 2, 7, 8, 9, 11, 16, 18, 19, 20, 23, 34, 35, 37, 39, 41, 57, 58, 63, 64, 65, 67], "default": [8, 14, 25, 29, 31, 33, 34, 35, 36, 37, 39, 41, 52, 53, 58, 62, 63, 64, 65, 69], "default_assumpt": [30, 33, 53], "default_compilation_pass": [9, 19, 41, 65, 69], "default_config": [8, 64, 69], "default_rnd": 52, "default_sort_kei": [2, 10, 11, 15, 24, 58, 66, 67], "defer": 52, "defin": [0, 4, 7, 10, 14, 29, 34, 35, 39, 40, 41, 44, 47, 50, 52, 54, 55, 57, 58, 59, 60, 66], "definit": [14, 34, 44, 52, 59, 61], "degre": [35, 39, 62, 68], "delai": 57, "delet": [37, 39, 53], "delici": [63, 67], "delimit": [25, 37, 62], "delta": 29, "demo": 30, "demonstr": [3, 55, 59, 61, 62, 65], "denot": [35, 54], "densiti": [34, 41, 52], "dep": 35, "depccg": [14, 29, 37, 49, 52, 53], "depccg_pars": 48, "depccgpars": [30, 37, 48, 52, 53], "depccgparseerror": [30, 37, 53], "depend": [0, 13, 14, 18, 27, 29, 31, 34, 35, 36, 40, 44, 45, 52, 53, 54, 55, 60, 62, 64, 69], "depict": 29, "deprec": [35, 39, 52], "deprecated_kwarg": 35, "deps_and_tag": 35, "depth": [12, 14, 34, 36, 53], "depth_2q": 34, "depth_by_typ": 34, "dequant": 35, "deriv": [13, 14, 29, 30, 35, 36, 37, 42, 48, 49, 52, 53, 57, 61, 62, 66], "descend": [35, 39], "descent": 67, "describ": [14, 29, 34, 35, 55, 67], "descript": [0, 35, 52, 53, 60, 61, 69], "design": [29, 35, 39, 43, 44, 53, 54, 69], "desir": [34, 35, 39, 52], "destin": [34, 35, 39], "detach": [8, 35, 36, 39, 53, 64], "detail": [0, 30, 34, 35, 39, 43, 45, 49, 50, 52, 53, 55, 57, 58, 61, 62, 69], "detect": [42, 58], "determin": [1, 5, 14, 29, 33, 34, 36, 37, 43, 44, 47, 52, 53, 54, 57, 60, 61, 63, 64, 66], "determinist": [35, 39, 69], "dev": [0, 8, 18, 64], "dev_acc": [8, 18, 64], "dev_circuit": [8, 16, 18, 19, 20, 64, 69], "dev_data": [8, 16, 18, 19, 20, 64], "dev_dataset": 16, "dev_diagram": [8, 16, 18, 19, 20, 64], "dev_label": [8, 16, 18, 19, 20, 64], "dev_pair_circuit": [8, 18, 64], "dev_pair_label": [8, 18, 64], "dev_sampl": [8, 18, 64], "develop": [0, 7, 8, 9, 16, 19, 20, 29, 32, 44, 45, 46, 52, 54, 63, 64, 65, 68], "deviat": 29, "devic": [8, 29, 34, 35, 37, 39, 41, 53, 57, 64, 69], "device_map": 35, "device_nam": [41, 69], "devis": 57, "dftc21": [13, 29], "diag": 34, "diagnosi": 42, "diagon": [29, 33, 53, 60], "diagonalbox": 34, "diagram": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 22, 24, 25, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 66, 69], "diagram_1": 14, "diagram_2": 14, "diagram_factori": 34, "diagram_nf": [1, 57], "diagram_pair": [8, 18, 64], "diagramm": [34, 36, 48, 53], "diagrammat": [14, 29, 34, 36, 37, 52, 53, 59], "diagramrewrit": [30, 36, 48, 52, 53, 61], "dict": [8, 33, 34, 35, 37, 39, 53, 64], "dictionari": [34, 35, 37, 39, 43, 53, 57, 58, 63, 65], "diff_method": [34, 39, 53], "differ": [8, 14, 18, 23, 27, 29, 33, 34, 35, 37, 39, 42, 43, 44, 45, 53, 58, 60, 61, 62, 64, 65, 67, 69], "differenti": [29, 34, 64, 67], "difficult": [14, 62], "digit": [35, 37], "dim": [1, 2, 4, 7, 8, 10, 11, 16, 18, 24, 33, 34, 41, 48, 53, 57, 58, 60, 63, 64, 66, 67], "dim_": 14, "dim_n": 14, "dimens": [11, 14, 29, 33, 34, 35, 39, 52, 53, 54, 57, 58, 60, 61, 63, 66, 67], "dimension": [29, 39, 41, 53, 60, 63, 64, 65, 66, 67], "dimitri": [13, 32], "dinner": [7, 8, 11, 63, 64, 67], "dir": 35, "direct": [29, 30, 34, 35, 36, 37, 39, 52, 53, 59, 62], "directed_cod": [30, 33, 53], "directed_dom": [30, 33, 53], "direction": [36, 53], "directli": [14, 23, 29, 35, 36, 37, 52, 53, 58, 59, 62, 69], "directori": [14, 35, 37, 53], "disabl": [35, 39, 65], "disable_adapt": 35, "disable_input_require_grad": 35, "disappear": [1, 57], "discard": [1, 2, 33, 34, 35, 37, 41, 48, 52, 53, 57, 58, 65], "discarded_qubit": 34, "discocat": [12, 13, 27, 29, 30, 37, 43, 49, 52, 53, 60, 61], "discocirc": 58, "disconnect": 29, "discontinu": 61, "discopi": [13, 29, 30, 33, 48, 52, 53], "discord": 32, "discuss": [0, 14, 35, 43], "disentangl": 52, "disk": [34, 35], "dislik": 27, "dispatch_model": 35, "displai": [4, 14, 15, 34, 53, 60], "disregard": 29, "distanc": [1, 34, 55, 57], "distinct": 34, "distribut": [13, 29, 35, 39, 45, 52, 53, 57, 63, 69], "divid": 42, "dl": 35, "do": [1, 5, 27, 34, 35, 36, 37, 39, 40, 42, 43, 45, 51, 52, 53, 57, 61, 62, 65, 66, 69], "do_sampl": 35, "doc": [35, 39, 43, 51, 52], "docstr": [0, 35, 39], "document": [0, 14, 34, 35, 37, 39, 43, 47, 52, 53, 58, 60], "doe": [1, 14, 15, 18, 23, 27, 29, 34, 35, 36, 37, 39, 43, 53, 57, 58, 64], "doesn": [27, 34, 35, 65], "dog": [27, 42, 43], "doi": 13, "dom": [1, 2, 3, 33, 34, 37, 52, 53, 57, 58, 59], "domain": [2, 3, 33, 34, 37, 43, 44, 53, 58, 59], "done": [14, 27, 35, 37, 43, 61, 64, 66, 69], "dot": 34, "doubl": [7, 9, 16, 18, 19, 20, 35, 39, 52, 57, 63, 65], "down": [25, 29, 43, 62], "download": [31, 35, 37, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "download_depccg_model": 31, "downstream": 35, "downward": 29, "dplantuml_limit_s": 51, "draw": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 37, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "draw_as_nod": 34, "draw_as_pregroup": [1, 3, 34, 57, 59], "draw_box_label": 34, "draw_equ": [1, 2, 3, 9, 34, 57, 58, 59, 65], "draw_pregroup": 34, "draw_type_label": [1, 34, 57], "drawabl": 34, "drawablediagram": 34, "drawn": [3, 34, 57, 59], "drive": 35, "driven": 43, "drop": [35, 52], "dropout": [35, 39], "dst_type": [35, 39], "dtype": [1, 8, 10, 11, 18, 23, 24, 34, 35, 39, 52, 53, 57, 64, 66, 67], "dual": [14, 29], "dualiti": [22, 36, 52, 53, 61], "duck": 34, "due": [7, 9, 16, 19, 20, 34, 35, 37, 49, 52, 53, 63, 65], "dummi": 35, "dummy_input": 35, "dummybox": 34, "dump_patch": [35, 39], "duplic": [34, 35, 39], "dure": [14, 27, 35, 36, 39, 42, 43, 45, 52, 53], "dx": 13, "dy": [18, 64], "e": [14, 21, 27, 32, 33, 34, 35, 36, 37, 39, 43, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 66, 69], "e07": 52, "each": [0, 14, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 57, 58, 59, 60, 61, 62, 64, 66, 68, 69], "eager": 35, "earli": [8, 9, 18, 35, 39, 52, 53, 64, 65, 69], "early_stopping_criterion": [9, 39, 52, 53, 65], "early_stopping_interv": [9, 39, 52, 53, 65], "easi": [14, 52, 54, 55], "easier": [34, 43, 44, 52], "easili": [35, 43], "eat": [6, 22, 25, 43, 62], "ecr": 34, "edg": [29, 34, 41], "edit": 0, "editor": 13, "edu": 49, "edward": 13, "effect": [14, 34, 35, 39, 44, 65, 69], "effici": [13, 34, 41, 43, 44, 52, 60, 64, 65], "effortless": 69, "egg": 22, "eigenvalu": 23, "eisner": [37, 53], "eisner_normal_form": [35, 37, 53], "either": [34, 35, 37, 39, 43, 53, 57, 58, 64], "ek": 13, "electron": [13, 29], "eleg": 59, "element": [34, 35, 39, 43, 53, 58, 60], "elif": [8, 18, 64], "elimin": [36, 52, 53, 61], "elmo": [37, 53], "elmo_rebank": [37, 53], "els": [1, 35, 39, 53, 57], "email": [0, 32, 42, 64, 69], "eman": 54, "embed": [35, 44, 69], "empti": [34, 37, 39, 52, 53], "emul": 41, "en": [35, 37, 53], "enabl": [29, 35, 39, 41, 44, 52, 53, 63, 64, 65], "enable_adapt": 35, "enable_input_require_grad": 35, "encapsul": 49, "encod": [14, 34, 35, 37, 41, 48, 49, 57, 59, 62], "encoder_attention_mask": 35, "encompass": 44, "encount": 56, "encourag": [56, 58], "encyclopedia": 46, "end": [34, 35, 37, 39, 52, 53, 64], "end_wire_idx": 34, "endian": 34, "endpoint": [34, 35], "endswith": 37, "enforc": [35, 39, 52, 59], "engin": 44, "english": [29, 37, 53], "enhanc": [13, 69], "enough": [14, 29], "enrich": [29, 54], "ensur": [35, 39, 44, 45, 57, 58, 62, 63], "entangl": [13, 29, 33, 44, 53], "enter": 64, "entir": [14, 35, 49, 62], "entireti": 61, "entiti": [34, 35, 44, 48], "entri": [8, 35, 37, 39, 53, 58, 64, 65], "entropi": [9, 11, 19, 20, 39, 42, 53, 63, 65, 67], "enum": [37, 48, 53], "enumer": [15, 35, 37, 39, 53], "env": [35, 39], "environ": [9, 16, 18, 19, 20, 35, 65], "environment": 69, "eos_token_id": 35, "ep": 14, "epoch": [7, 8, 9, 11, 16, 18, 19, 20, 23, 39, 53, 63, 64, 65, 67], "epoch_loss": [8, 18, 64], "epsilon": [39, 53], "eptc": 13, "eq": [7, 16, 63], "equal": [1, 27, 34, 35, 37, 42, 45, 57, 59], "equat": [3, 29, 34, 57, 59, 61], "equip": [14, 29, 50, 54, 59, 60], "equival": [27, 34, 35, 37, 39, 53, 63], "er": 43, "errno": 37, "erron": 52, "error": [9, 19, 20, 29, 35, 37, 39, 52, 53, 61, 64, 65, 69], "escap": 52, "especi": [0, 35, 54, 69], "essenti": [29, 67], "establish": [9, 65], "estim": [29, 35, 45], "estimate_token": 35, "eswap": 34, "et": [33, 39, 52, 53, 67], "etc": [34, 35, 39, 51, 55], "eval": [1, 2, 8, 10, 11, 24, 34, 35, 39, 57, 58, 64, 66, 67], "eval_interv": [7, 39, 53, 63], "eval_metr": [7, 9, 63, 65], "eval_mod": [39, 53], "evalfunct": [39, 53], "evalmod": [39, 53], "evalu": [13, 18, 27, 29, 30, 34, 35, 39, 40, 41, 43, 44, 45, 47, 52, 53, 55, 57], "evaluate_funct": [7, 8, 9, 16, 18, 19, 20, 39, 53, 63, 64, 65], "evaluate_on_train": [7, 8, 9, 16, 18, 19, 20, 23, 39, 53, 63, 64, 65], "evaluated_pair": [8, 18, 64], "evel": 32, "even": [14, 27, 36, 37, 40, 53, 59, 60, 62], "event": 29, "eventu": 0, "ever": 14, "everi": [6, 18, 25, 27, 29, 34, 35, 37, 39, 43, 53, 57, 59, 60, 62, 64, 69], "everyth": 35, "everywher": 52, "exact": [14, 20, 35, 37, 39, 41, 44, 45, 53, 64], "exactli": [14, 25, 34, 35, 39, 45, 62], "examin": [0, 27, 44, 62, 66], "exampl": [0, 7, 8, 9, 11, 12, 14, 15, 18, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 49, 50, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69], "except": [21, 34, 35, 37, 39, 52, 53], "excess": 61, "exchang": [34, 36, 53], "exclud": 34, "exclude_embed": 35, "exclus": 14, "excluss": 14, "execut": [29, 35, 39, 60, 61, 69], "exercis": 46, "exhibit": 44, "exist": [0, 29, 34, 35, 39, 44, 53, 57, 59, 63], "exit": 14, "exp": [11, 23, 35, 67], "expand": 37, "expandtab": 37, "expbox": 34, "expect": [0, 14, 18, 23, 29, 31, 34, 35, 39, 52, 53, 54, 61, 63, 64, 69], "expens": [18, 45, 63], "experi": [32, 36, 39, 40, 41, 50, 52, 53, 54, 58, 60, 61, 63, 64, 65, 67, 69], "experiment": [32, 35, 69], "explain": [59, 61, 63, 68], "explan": [35, 39, 69], "explicit": [29, 52, 62], "explicitli": [34, 40, 57], "explicitmodifi": 34, "explicitpred": 34, "exploit": [29, 44, 52, 69], "explor": 44, "export": [34, 57, 60], "expr": 34, "express": [13, 29, 34, 35, 37, 42, 52, 54, 58], "ext044": 13, "extend": [0, 30, 34, 35, 49, 52, 59, 60, 61, 62], "extens": [0, 4, 9, 19, 32, 35, 39, 41, 50, 52, 53, 60, 65, 69], "extern": [0, 49, 52, 68], "extra": [31, 33, 35, 39, 41, 52, 53, 59, 61, 62], "extra_repr": [35, 39], "extract": [13, 34, 40, 43, 44, 46, 52, 56, 65], "extract_ops_from_tk": 34, "extrem": [54, 60, 61], "exu027": 13, "ey": 0, "f": [1, 3, 7, 8, 9, 11, 14, 16, 18, 19, 20, 29, 34, 35, 37, 42, 53, 57, 59, 63, 64, 65, 67], "f1": [42, 44], "fa": [34, 37, 53, 62], "face": 35, "facilit": [32, 34, 58, 63, 64, 65], "fact": [44, 54, 57, 62, 66, 69], "factor": [13, 29, 34, 39, 40, 53, 65], "factori": 34, "fail": [34, 37, 52, 53], "failur": [37, 53], "fair": 0, "faith": 69, "faithfulli": [14, 49], "fals": [1, 2, 3, 7, 8, 9, 14, 16, 18, 19, 20, 27, 33, 34, 35, 36, 37, 39, 41, 42, 52, 53, 57, 58, 59, 62, 63, 64, 65], "famili": 35, "familiar": [0, 35], "familiaris": 12, "famou": 44, "fan": [13, 32], "far": [29, 57], "fashion": 62, "fast": [35, 49, 69], "faster": [35, 36, 41, 52, 53, 61], "fastpath": 35, "fatol": [39, 53], "fault": 29, "favor": [35, 39], "favorit": [6, 25, 43, 62], "fc": [34, 37, 53], "featur": [13, 14, 29, 31, 34, 35, 43, 44, 46, 48, 49, 50, 52, 59, 69], "februari": 13, "feed": 41, "feedback": 44, "felic": [13, 32], "few": [46, 67], "fewer": [34, 36, 53], "ff0000": 34, "ffffff": 34, "fficient": 32, "fhilb": 57, "field": [29, 35, 37, 39, 44, 46, 52, 53], "fig": [8, 9, 19, 20, 23, 49, 50, 54, 64, 65, 69], "fig1": [7, 16, 63], "fig_height": 14, "fig_width": 14, "figsiz": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 18, 19, 20, 23, 24, 25, 27, 34, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "figur": [14, 34, 69], "file": [14, 34, 35, 37, 39, 52, 53, 64, 69], "filehandl": 34, "filenam": [7, 8, 9, 16, 18, 19, 20, 34, 35, 37, 63, 64, 65], "filename2": 37, "filenotfounderror": [39, 53], "fill": [34, 37], "fill_": [35, 39], "fill_between": 23, "fillchar": 37, "filled_dep": 35, "fillstyl": [9, 65], "filter": [42, 55], "filter_root": 35, "filterwarn": [2, 9, 10, 11, 19, 20, 58, 65, 66, 67], "fin": [37, 53], "final": [2, 8, 25, 34, 37, 45, 47, 49, 53, 58, 62, 63, 64, 65, 67], "find": [37, 58], "find_adapter_config_fil": 35, "fine": 35, "finetun": [35, 39], "finish": 35, "fire": [35, 39], "firewal": 35, "first": [8, 18, 27, 29, 34, 35, 37, 40, 43, 44, 49, 50, 52, 53, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69], "first_d": [8, 64], "fit": [7, 8, 9, 16, 18, 19, 20, 23, 30, 35, 39, 52, 53, 55, 63, 64, 65], "five": 18, "fix": [0, 11, 35, 37, 52, 53, 54, 57, 66, 67], "flag": [14, 34, 35, 37, 39, 52, 53], "flake8": 52, "flash": 35, "flash_attention_2": 35, "flatten": [8, 18, 64], "flatten_regist": 34, "flax": 35, "flax_model": 35, "flexibl": [40, 61], "flight": 43, "float": [7, 8, 10, 11, 16, 18, 34, 35, 37, 39, 53, 63, 64, 66, 67], "float16": [35, 39], "float32": [8, 11, 23, 24, 34, 35, 64, 67], "float64": [35, 39], "floating_point_op": 35, "floattensor": [34, 35, 53], "flow": [29, 52, 63], "flower": [2, 6, 14, 24, 25, 43, 58, 62], "flower_n": 43, "fn": [35, 39], "fname": [11, 67], "focu": [44, 68], "focus": 44, "fold": [45, 58], "folder": [14, 31, 35, 43, 51], "foliat": [1, 34, 57], "follow": [0, 14, 25, 27, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69], "font": [14, 34], "fontsiz": [4, 5, 6, 9, 10, 11, 14, 25, 34, 60, 61, 62, 65, 66, 67], "fontsize_typ": 34, "foo": 35, "food": [2, 6, 25, 43, 58, 62, 63, 64, 67], "food_idx": [8, 64], "footnot": 49, "footprint": 35, "forc": [27, 35, 37, 53], "force_download": [35, 37, 53], "forecast": 35, "form": [0, 1, 14, 22, 27, 29, 34, 35, 36, 37, 39, 43, 49, 52, 53, 54, 57, 58, 59, 60, 61, 62, 65, 69], "formal": [14, 29, 36, 44, 49, 53, 54, 57], "format": [0, 8, 14, 18, 34, 35, 37, 39, 43, 44, 49, 53, 57, 60, 61, 64], "format_map": 37, "former": 35, "forward": [7, 8, 16, 18, 30, 35, 37, 39, 41, 52, 53, 55, 62, 63, 64], "forward_appl": [30, 37, 53], "forward_composit": [30, 37, 53], "forward_crossed_composit": [30, 37, 53], "forward_pr": [35, 39], "forward_type_rais": [30, 37, 53], "found": [0, 29, 32, 33, 35, 37, 39, 41, 43, 44, 53, 67], "foundat": [13, 29], "fox": 43, "fp32": 35, "frac": 42, "framework": [13, 29, 35, 57], "fran": 13, "fraud": 42, "free": [29, 34, 35, 37, 41, 46, 47, 53, 57, 59, 61, 63, 67, 69], "free_symbol": [2, 10, 11, 15, 24, 34, 58, 66, 67], "freeli": [57, 59], "freez": [35, 39], "frequenc": [27, 36, 53], "fresh": [2, 35, 58], "frobeniu": [13, 29], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69], "from_checkpoint": [30, 39, 53, 63, 65], "from_diagram": [7, 8, 9, 16, 18, 19, 20, 23, 27, 30, 34, 36, 39, 41, 52, 53, 63, 64, 65, 69], "from_dict": 34, "from_discopi": [34, 52], "from_fil": [30, 39, 53], "from_flax": 35, "from_json": [30, 34, 37, 53], "from_json_fil": 35, "from_pretrain": 35, "from_tf": 35, "from_tk": 34, "front": [37, 57], "fsim": 34, "ftr": [37, 53], "fuchang": [13, 39, 53], "full": [39, 45, 49, 53], "full_timing_report": [39, 53], "fulli": [31, 35, 39, 49, 50, 52, 62], "func": [1, 39, 53, 57], "funcnam": 34, "function": [0, 8, 13, 14, 18, 23, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 52, 53, 55, 56, 57, 58, 60, 61, 64, 69], "functor": [1, 2, 12, 29, 34, 47, 48], "functori": [29, 57, 61], "fundament": 42, "further": [12, 14, 27, 30, 34, 35, 42, 43, 54, 57, 60, 62, 69], "furthermor": [32, 52, 61, 64, 65, 69], "fusion": 35, "futur": [14, 35, 39, 52], "fvect": 57, "fwd": 35, "fwd_comp": 35, "fx": [34, 37, 53], "g": [3, 14, 27, 34, 35, 37, 39, 43, 51, 52, 53, 54, 55, 57, 58, 59, 69], "gain": 44, "gambetta": 13, "gan": [35, 39], "gao": [13, 39, 53], "gate": [29, 33, 34, 41, 52, 53, 54, 57, 58, 60, 69], "gate_depth": 34, "gave": [2, 6, 14, 25, 43, 58, 62], "gave_vb": 43, "gbc": [37, 53], "gbx": [37, 53], "gen": 34, "gener": [0, 14, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 57, 58, 59, 61, 62], "generalis": [37, 53, 62], "generalized_backward_composit": [30, 37, 53], "generalized_backward_crossed_composit": [30, 37, 53], "generalized_forward_composit": [30, 37, 53], "generalized_forward_crossed_composit": [30, 37, 53], "generate_cap": 34, "generate_cup": 34, "generate_spid": 34, "generatebeamdecoderonlyoutput": 35, "generatebeamencoderdecoderoutput": 35, "generated_token": 35, "generatedecoderonlyoutput": 35, "generateencoderdecoderoutput": 35, "generation_config": 35, "generation_strategi": 35, "generationconfig": 35, "generationmixin": 48, "genuin": [0, 34], "get": [0, 1, 4, 14, 16, 18, 19, 20, 23, 32, 34, 35, 37, 39, 40, 44, 45, 48, 52, 53, 57, 60, 61, 62, 64, 67, 69], "get_adapter_state_dict": 35, "get_backend": 34, "get_buff": [35, 39], "get_c_regist": 34, "get_command": 34, "get_count": 34, "get_devic": 34, "get_diagram_output": [7, 8, 18, 30, 39, 41, 53, 63, 64], "get_extended_attention_mask": 35, "get_extra_st": [35, 39], "get_head_mask": 35, "get_input_embed": 35, "get_memory_footprint": 35, "get_model_output": [39, 53], "get_output_embed": 35, "get_paramet": [35, 39], "get_position_embed": 35, "get_post_selection_dict": 34, "get_q_regist": 34, "get_resourc": 34, "get_span_scor": 35, "get_statevector": 34, "get_submodul": [35, 39], "get_swap_module_params_on_convers": [35, 39], "get_unitari": 34, "get_unitary_times_oth": 34, "get_valid_st": 34, "gfc": [37, 53], "gfx": [37, 53], "gh12": [13, 55], "gif": 34, "giovanni": [13, 32], "git": 35, "github": [15, 32, 35, 41, 43, 49, 51, 52], "give": [0, 18, 24, 41, 53, 57, 64, 69], "given": [14, 18, 29, 32, 33, 34, 35, 36, 37, 38, 39, 52, 53, 55, 57, 58, 62, 64, 69], "global": [8, 34, 35, 39, 52, 53, 64, 69], "glossari": [30, 52], "go": [2, 22, 32, 35, 40, 58, 61, 64], "goal": [23, 42, 44, 63, 65, 67], "goe": [1, 34, 50, 57], "gold": 49, "gone": 65, "good": [0, 14, 39, 42, 46, 53], "googl": [35, 69], "gopal": 52, "got": 52, "gpi": 34, "gpi2": 34, "gpt": [35, 44], "gpt2": 35, "gpt2token": 35, "gptq": 35, "gpu": [35, 37, 39, 41, 53], "gpu1": [35, 39], "gr": [11, 67], "grad": [11, 35, 39, 67], "grad_input": [35, 39], "grad_output": [35, 39], "gradient": [11, 18, 34, 35, 39, 40, 41, 52, 53, 55, 64, 67], "gradient_checkpointing_dis": 35, "gradient_checkpointing_en": 35, "gradient_checkpointing_kwarg": 35, "gramar": [36, 53], "grammar": [1, 2, 3, 5, 6, 12, 13, 14, 22, 29, 33, 35, 36, 37, 48, 49, 52, 53, 58, 59, 61, 62, 63, 67, 68], "grammat": [25, 27, 29, 43, 52, 54, 57, 62], "grant": 13, "graph": [29, 34], "graphic": [37, 53, 59], "grass": 22, "great": 46, "greater": [34, 39, 53, 60, 64], "greatli": [48, 50, 52, 59, 69], "greedi": 35, "groningen": 13, "ground": [39, 53], "group": [34, 46, 54], "guarante": [18, 34, 35, 39, 64], "guard": 56, "gui": 13, "guid": [0, 35, 46], "guidanc": 0, "guidelin": [0, 58], "guzik": 13, "h": [3, 14, 32, 34, 42, 59], "h1": [8, 41, 64, 69], "h_model": [8, 64], "ha": [2, 14, 27, 29, 34, 35, 37, 39, 41, 42, 44, 52, 53, 54, 57, 58, 59, 61, 64, 66], "had": [2, 52, 58], "hadamard": [29, 33, 34, 52, 53, 60], "half": [7, 9, 16, 19, 20, 34, 35, 39, 63, 65], "halfturn": 34, "ham": 22, "hamiltonian": [39, 53], "han": [13, 39, 53], "hand": [29, 37, 40, 42, 43, 44, 46, 50, 53, 55], "handl": [30, 35, 37, 39, 45, 47, 52, 62], "handler": 34, "hang": 35, "happen": [37, 53], "hard": [35, 54], "hardwar": [29, 34, 35, 39, 40, 41, 44, 53, 54, 57, 61, 67], "harm": 0, "harmon": 42, "harrow": 13, "has_valu": [30, 53], "hash": 52, "hate": 27, "have": [0, 1, 2, 12, 14, 18, 27, 29, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 49, 51, 52, 53, 54, 57, 58, 59, 63, 64, 65, 66, 69], "havl": 13, "havlivcekcorcolest": [13, 60], "head": [35, 52], "head_mask": 35, "heads_to_prun": 35, "heal_token": 35, "heart": 29, "heavili": [39, 43, 53], "heidelberg": 13, "height": [30, 37, 52, 53], "held": 44, "help": [0, 14, 18, 27, 32, 35, 39, 42, 44, 45, 46, 52, 53, 64], "helper": [35, 36, 52, 53], "henc": [36, 53, 65], "her": [1, 57], "here": [7, 25, 29, 32, 33, 35, 41, 42, 44, 46, 53, 56, 57, 58, 62, 63, 64, 65], "heunen": 13, "hf": 35, "hi": [1, 57], "hidden": [35, 52, 55, 64], "hide": 27, "hierarch": 29, "hierarchi": [29, 43, 45, 50, 52, 69], "hierarci": [25, 62], "high": [0, 13, 32, 35, 39, 42, 44, 46, 52, 53, 55, 58, 68, 69], "higher": [32, 34, 54, 60, 63], "highest": [37, 40, 53], "hilbert": 57, "hint": 52, "hiroshi": 13, "histori": [39, 53], "hit": [11, 67], "hoc": [0, 35], "hockenmai": [13, 29], "hold": [29, 34, 54, 59], "holist": 44, "home": [1, 34, 57], "homebrew": 51, "homepag": 31, "homework": [5, 61], "honeywel": [8, 34, 41, 64, 69], "hook": [35, 39, 52], "hope": 22, "horizont": [3, 37, 53, 59], "host": [35, 39], "hostnam": 35, "hot": [39, 53], "how": [0, 27, 29, 35, 39, 40, 42, 43, 44, 52, 57, 58, 59, 62, 68], "howev": [0, 25, 34, 35, 39, 41, 43, 45, 49, 52, 56, 58, 62, 63], "hq": [8, 41, 64, 69], "hs07": [13, 29, 49], "html": [15, 34, 35], "html_ty": 34, "http": [13, 15, 33, 34, 35, 39, 48, 49, 52, 53], "hub": [35, 48], "hug": 35, "huggingfac": 35, "human": [29, 42, 43, 44, 49, 54], "hv13": [13, 57], "hybrid": [13, 30, 34, 39, 41, 47, 52, 53, 55, 63, 65], "hyp": [37, 53], "hyperamet": 65, "hyperparam": [39, 53], "hyperparamet": [39, 45, 53, 63, 64, 65], "hypothesi": 64, "hypothesis": 64, "i": [0, 1, 2, 3, 6, 8, 9, 11, 12, 13, 14, 15, 17, 18, 21, 22, 23, 25, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "ian": [13, 32], "ibm": [29, 34, 41, 46, 64, 69], "ibmq": [8, 41, 64], "ibmq_hardware_devic": 41, "ibmq_manila": [8, 64], "ibmq_qasm_simul": 41, "ibmq_washington": 69, "ibmqemulatorbackend": 69, "ibmqx_token": [8, 64], "ibrari": 32, "id": [1, 2, 3, 22, 33, 34, 35, 37, 39, 53, 57, 58, 59], "id_box": [1, 57], "id_tensor": [1, 57], "idea": [0, 45], "ideal": [29, 54, 69], "ident": [3, 29, 34, 58, 59], "identif": 42, "identifi": [34, 35, 37, 42, 43, 44, 45], "idx": [35, 39], "ieee": [13, 39, 53], "ieeexplor": [39, 53], "igh": 32, "ignor": [2, 9, 10, 11, 14, 16, 19, 20, 27, 34, 35, 37, 39, 52, 53, 58, 65, 66, 67, 69], "ignore_mismatched_s": 35, "ignore_typ": [27, 36, 53], "ignore_w": [35, 39], "ii": 13, "ilo": 34, "imag": [14, 34, 42], "image_fold": 14, "image_format": 14, "imagin": 61, "imbalanc": 45, "img": 51, "immedi": [14, 35, 39, 49], "imp": [37, 53], "impair": 65, "implement": [0, 13, 29, 33, 34, 35, 36, 37, 39, 41, 44, 48, 49, 50, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 65, 69], "implicit": 34, "implicit_qubit_permut": 34, "implicitli": [1, 57, 59], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "imposs": [42, 60], "improv": [0, 39, 41, 43, 52, 53, 61, 64, 65, 67], "in__": [10, 66], "in_featur": [35, 39], "inact": 0, "inadvert": 52, "inappropri": 0, "includ": [0, 14, 25, 27, 29, 31, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 55, 56, 60, 62, 69], "inclus": 27, "incompatible_kei": [35, 39], "inconsist": [37, 53], "incorrectli": [37, 52, 53], "increas": [33, 34, 35, 42, 43, 52, 53, 69], "independ": [29, 50, 54, 60, 61], "index": [3, 30, 34, 35, 37, 39, 53, 59], "indic": [34, 35, 36, 39, 43, 53, 54, 57, 60], "indirect": 62, "indistinguish": 44, "individu": [35, 39, 43, 52, 57, 58, 61, 66], "industri": 44, "ineffici": 52, "infer": [35, 37, 53], "infer_rul": [30, 37, 52, 53], "inflect": 43, "influenc": 29, "inform": [0, 29, 32, 33, 34, 35, 39, 41, 43, 44, 52, 53, 58, 60, 61, 62, 67], "ing": 43, "inher": 69, "inherit": [34, 35, 63, 64, 66, 68], "init": [35, 39], "init_and_discard": 34, "init_weight": [35, 39], "initi": [29, 34, 35, 39, 41, 47, 52, 53, 64, 65], "initial_loss": 23, "initial_simplex": [39, 53], "initialis": [34, 36, 37, 39, 40, 41, 47, 52, 53, 55, 58, 66, 69], "initialise_concrete_param": [8, 34, 64], "initialise_device_and_circuit": 34, "initialise_weight": [8, 18, 23, 30, 39, 53, 63, 64], "initvar": 34, "inject": 35, "inner": [37, 53], "innermost": [37, 53], "inplac": [35, 39], "input": [1, 7, 14, 18, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 52, 53, 55, 57, 61], "input_dict": 35, "input_featur": 35, "input_fil": 14, "input_id": 35, "input_length": 35, "input_reg": 34, "input_sent": 14, "input_shap": 35, "input_supertag": 35, "input_tag_score_weight": [35, 37, 53], "input_valu": 35, "inputs_emb": 35, "inputs_id": 35, "insert": [35, 37], "insid": [35, 52], "insight": [42, 44], "inspir": [29, 35, 58], "instal": [30, 32, 35, 41, 49, 51, 52, 56, 60], "instanc": [0, 14, 34, 35, 36, 37, 39, 42, 52, 53, 55, 59, 60, 62, 66], "instantan": [29, 33, 53, 60], "instanti": [21, 33, 34, 35, 36, 37, 41, 53, 54, 55, 56, 57, 58, 60], "instead": [14, 33, 34, 35, 37, 39, 43, 52, 53, 57, 58, 59, 63, 67], "instruct": [31, 41], "int": [8, 9, 11, 14, 16, 18, 19, 20, 33, 34, 35, 36, 37, 39, 53, 64, 65, 67], "int64": [1, 57], "intefac": 52, "integ": [34, 35, 37, 39, 53], "integr": [31, 35, 39, 48, 49, 52, 69], "intellig": [13, 44], "intend": 35, "intention": 37, "interact": [34, 44, 49, 50, 52, 54, 68], "interchang": [34, 43], "interchangererror": 34, "interest": [34, 46], "interfac": [29, 30, 32, 37, 48, 49, 52, 53, 55, 58, 63], "interfer": [29, 44, 69], "interior": 34, "interleav": [29, 33, 36, 53, 60, 61], "intermedi": 29, "intern": [13, 34, 35, 48, 50, 52, 55, 68], "internalis": 52, "interoper": 60, "interpret": [37, 62], "intersect": 13, "interv": [39, 53, 63], "interven": 34, "interwoven": [14, 36, 53], "introduc": [1, 14, 27, 33, 36, 43, 52, 53, 57, 63, 67, 69], "introduct": [13, 14, 30, 40, 46], "introductiontocategoricalquantummechan": 13, "invalid": [35, 37, 39, 53], "invers": [34, 57], "invert": 35, "invert_attention_mask": 35, "invit": 35, "invok": [34, 35, 39, 63], "involv": [18, 29, 40, 41, 42, 43, 44, 49, 55, 58, 64], "io": [15, 52], "ion": 69, "ionq": 69, "ipu": [35, 39], "ipynb": [60, 61, 62], "ipython": 34, "iqm": 69, "iqp": [14, 29, 33, 53, 60], "iqp_ansatz": [10, 66], "iqpansatz": [4, 8, 9, 10, 14, 15, 18, 19, 20, 30, 33, 48, 52, 53, 60, 64, 65, 66], "is_atom": [30, 34, 37, 53], "is_attention_chunk": 35, "is_class": 34, "is_complex": [30, 34, 37, 53], "is_conjoin": [30, 37, 53], "is_dagg": 34, "is_empti": [30, 34, 37, 53], "is_encoder_decod": 35, "is_gradient_checkpoint": 35, "is_id": 34, "is_leaf": 35, "is_main_process": 35, "is_mix": 34, "is_ov": [30, 37, 53], "is_paralleliz": 35, "is_pregroup": 34, "is_revers": [1, 34, 57], "is_simpl": 34, "is_symbol": 34, "is_top_level": 34, "is_und": [30, 37, 53], "isalnum": 37, "isalpha": 37, "isascii": 37, "isbn": 13, "isdecim": 37, "isdigit": 37, "isidentifi": 37, "iskeyword": 37, "islow": 37, "isn": [6, 25, 35, 43, 62], "isnumer": 37, "isol": [37, 53], "isomorph": 59, "isprint": 37, "isspac": 37, "issu": [32, 35, 45, 52, 56, 65], "istitl": 37, "isupp": 37, "iswap": 34, "iswapmax": 34, "it_idx": [8, 64], "item": [7, 8, 9, 14, 16, 18, 29, 39, 63, 64, 65], "iter": [7, 8, 9, 16, 19, 20, 23, 34, 35, 36, 37, 38, 39, 48, 53, 63, 64, 65, 67], "itertool": [8, 18, 64], "its": [12, 14, 29, 31, 34, 35, 36, 37, 39, 42, 43, 44, 46, 53, 54, 56, 57, 58, 59, 61, 62, 66, 69], "itself": [34, 35, 37, 39, 46, 59], "j": [1, 2, 34, 35, 36, 39, 53, 57, 58, 61], "j07": 13, "ja": [37, 53], "jai": 13, "jair": 13, "jame": 13, "jami": 13, "jan": 13, "janom": [37, 53], "januari": 13, "japanes": [29, 31, 37, 52, 53], "jar": 51, "java": 51, "jax": [11, 23, 30, 34, 39, 41, 47, 50, 52, 53, 57, 67], "jaxlib": 52, "jean": 13, "jerri": 13, "jigg": [37, 53], "jim": 27, "jit": [11, 23, 41, 52, 67], "jnp": [39, 53], "joachim": [13, 29, 57], "john": [2, 4, 5, 6, 10, 13, 14, 25, 26, 27, 43, 58, 60, 61, 62, 66], "john__n": [10, 66], "john__n_0": [10, 66], "john__n_1": [10, 66], "john__n_2": [10, 66], "john_n": 43, "johnson": 13, "join": [1, 9, 32, 37, 57, 65], "journal": [13, 32], "jpeg": 14, "jpg": 14, "jqueri": 52, "json": [14, 34, 35, 37, 53], "julia": [13, 29], "jump": 43, "june": 13, "jupyt": 65, "jurafski": 46, "just": [27, 35, 36, 37, 39, 41, 52, 53, 57, 58, 59, 67], "justifi": 37, "k": [2, 11, 24, 39, 45, 58, 67], "kandala": 13, "kar16": [13, 29, 52, 58], "kar2016": [36, 53], "kartsakli": [13, 32], "kartsaklis2021lambeq": 32, "keep": [0, 14, 35, 37, 49, 53], "keep_blank_classical_wir": 34, "keep_var": [35, 39], "keepend": 37, "kei": [2, 10, 11, 14, 15, 24, 33, 34, 35, 37, 39, 53, 58, 59, 66, 67], "kentaroaoki": 52, "kept": [37, 53], "kernel": 35, "kernel_s": [35, 39], "ket": [1, 23, 29, 34, 39, 41, 48, 52, 53, 57], "keyerror": [39, 53], "keyword": [14, 35, 37, 39, 52, 53, 65], "kfy": [13, 32], "kind": [25, 60, 61, 62, 69], "know": [25, 32, 46, 62, 65, 67], "knowledg": [12, 61], "known": [34, 42, 45, 49, 56, 59], "konstantino": [13, 32], "kristan": 13, "kspc16": [13, 29, 58], "kwarg": [8, 18, 34, 35, 37, 39, 41, 52, 53, 64], "kwd": [37, 39, 53], "l": [1, 2, 3, 5, 10, 14, 22, 27, 29, 32, 34, 35, 36, 37, 39, 53, 54, 57, 58, 59, 61, 66], "l2": [52, 63], "l_0": [10, 66], "l_1": [10, 66], "l_2": [10, 66], "l_3": [10, 66], "label": [2, 7, 8, 9, 16, 18, 19, 20, 29, 34, 35, 37, 39, 41, 42, 43, 44, 52, 53, 54, 58, 63, 64, 65], "ladder": [2, 33, 53, 58, 60], "laid": 35, "lam99": [13, 14, 29, 52, 54, 57], "lamarch": 13, "lambda": [1, 9, 19, 20, 30, 33, 34, 53, 57, 65], "lambdifi": [2, 10, 11, 24, 34, 58, 66, 67], "lambek": [13, 29, 36, 53, 57, 61], "lambeq": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 40, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67], "lambeq_circuit": 34, "land": 52, "lang": [37, 53], "languag": [13, 29, 32, 35, 37, 42, 43, 44, 46, 49, 53, 58, 69], "larg": [29, 33, 41, 42, 43, 44, 49, 53, 58, 60, 63, 67], "larger": [14, 36, 43, 52, 53], "largest": 45, "last": [8, 64], "later": [14, 57, 62], "latest": 32, "latex": 34, "latter": [35, 39], "lattic": 69, "laura": 13, "layer": [1, 2, 14, 29, 33, 34, 35, 36, 48, 52, 53, 55, 57, 58, 60, 61, 64], "layer_1": [37, 53], "lazi": 43, "lazili": 35, "ldc": 49, "ldc2005t13": 49, "ldot": 59, "lead": [14, 18, 35, 36, 37, 42, 53, 61, 62, 64], "leaf": [37, 53], "leakyrelu": [18, 64], "learn": [13, 18, 27, 29, 30, 32, 39, 40, 41, 43, 44, 46, 49, 50, 52, 53, 55, 64, 65, 69], "learning_r": [7, 8, 16, 18, 20, 39, 53, 63, 64], "learnt": 57, "least": [27, 33, 36, 37, 53, 61], "leav": 45, "lecomt": 13, "lectur": [13, 46], "left": [1, 29, 30, 34, 35, 37, 52, 53, 54, 57, 58, 59, 62, 63], "leg": [34, 52], "legaci": [35, 52], "legal": 42, "lemma": 43, "lemmat": [43, 44], "len": [1, 7, 8, 9, 11, 16, 18, 19, 20, 23, 37, 57, 63, 64, 65, 67], "length": [34, 35, 37, 39, 49, 53, 63, 64, 65], "length_penalti": 35, "lenient": [37, 53], "less": [27, 36, 43, 45, 53, 64], "let": [27, 32, 35, 39, 44, 63, 64, 65, 66, 67], "level": [0, 13, 25, 29, 30, 32, 36, 37, 39, 40, 41, 44, 46, 50, 52, 53, 54, 55, 58, 60, 62, 68, 69], "lewi": 13, "lexic": [29, 30, 37, 53], "lexicograph": 34, "lexicon": 48, "librari": [13, 29, 32, 34, 35, 41, 45, 50, 52, 60, 68], "lic": 13, "licenc": [33, 53], "licens": [32, 34, 48, 52], "lift": 34, "light": 49, "like": [0, 14, 29, 34, 35, 39, 43, 49, 52, 56, 57, 59, 61, 62, 63, 68], "likewis": 34, "limit": [37, 41, 43, 53, 61, 69], "line": [7, 8, 9, 11, 16, 18, 19, 20, 30, 32, 35, 37, 39, 52, 53, 58, 63, 64, 65, 67], "linear": [7, 8, 18, 29, 34, 35, 37, 39, 41, 53, 57, 59, 63, 64, 69], "linear_read": [37, 48], "linearli": [37, 53], "linearread": [14, 30, 37, 48, 53, 62], "linguist": [13, 43, 44, 46], "lingust": 30, "link": [52, 56, 57, 58, 60], "lint": 52, "linux": 32, "list": [0, 8, 14, 18, 25, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 53, 56, 57, 58, 59, 62, 64], "list_i": 34, "list_o": 34, "liter": [33, 53], "littl": 34, "live": [29, 35, 39], "lix": [13, 39, 53], "ljust": 37, "ll": [18, 35, 57, 64], "ln": [11, 67], "load": [8, 9, 14, 18, 30, 34, 35, 39, 52, 53, 64, 65], "load_adapt": 35, "load_arg": 14, "load_in_4bit": 35, "load_in_8bit": 35, "load_state_dict": [30, 35, 39, 53], "load_tf_weight": 35, "load_training_checkpoint": [30, 39, 53], "local": [35, 37, 39, 41, 49, 52, 53, 57], "local_files_onli": 35, "locat": [35, 37, 39, 44, 53], "log": [9, 35, 37, 39, 42, 47, 52, 53, 55, 65], "log2": [11, 67], "log_dir": [9, 39, 53, 65], "log_interv": [7, 16, 19, 20, 23, 39, 53, 63], "logarithm": 52, "logcom": 13, "logic": [13, 29, 35, 57], "logic_exp": 34, "login": [35, 41], "logist": 44, "logit": 35, "logits_processor": 35, "logitsprocessorlist": 35, "logo": 52, "long": [0, 13, 14, 35, 57, 58, 61], "longer": [1, 31, 52, 57, 61], "longest": 34, "longtensor": 35, "look": [0, 27, 35, 39, 52, 57, 61, 62, 64], "lookup": 37, "lookuperror": 37, "loop": [34, 35, 40, 41, 61, 64, 67], "lorenz": [13, 32, 67], "loss": [7, 8, 9, 11, 16, 18, 19, 20, 23, 29, 30, 39, 40, 41, 48, 52, 53, 55, 56, 61, 63], "loss_fn": [39, 53], "loss_funct": [7, 8, 9, 16, 18, 19, 20, 23, 39, 53, 63, 64, 65], "lossfunct": [30, 39, 48, 52, 53, 55], "lot": [18, 52, 64], "love": [6, 22, 23, 25, 27, 43, 62], "low": [0, 29, 30, 41, 52, 54, 55, 58, 60], "low_cpu_mem_usag": 35, "lower": [34, 35, 37, 39, 40, 42, 50, 53], "lowercas": 37, "lowest": 37, "lp": [37, 53], "lpm": [13, 63, 67], "lr": [8, 18, 64], "lstrip": 37, "lt": [8, 9, 18, 39, 53, 64, 65], "m": [13, 14, 34, 35, 39, 41, 42], "ma": 13, "machin": [13, 29, 30, 41, 42, 43, 44, 46, 52, 55, 56, 69], "maco": 32, "made": [34, 35, 39, 49, 52, 62], "magnitud": 41, "mai": [14, 31, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 53, 56, 58, 61, 62], "mail": 32, "maillard": 13, "main": [34, 35, 52, 55, 61], "main_input_nam": 35, "mainli": [37, 53, 62], "maintain": [0, 52], "major": 35, "make": [15, 29, 32, 34, 35, 37, 39, 42, 43, 44, 45, 47, 49, 50, 52, 53, 55, 56, 58, 59, 60, 62, 65], "make_checkpoint": 52, "make_circuit": 34, "make_pair_data": [8, 18, 64], "maketran": 37, "man": [7, 8, 11, 63, 64, 67], "manag": [34, 55], "mani": [14, 25, 27, 29, 40, 41, 43, 44, 46, 49, 52, 54, 62, 64, 69], "manifest": 62, "manipul": [43, 54, 55, 59], "manual": [30, 35, 37, 51, 53, 55, 63, 64, 65, 67], "manual_se": [8, 18, 64], "map": [1, 2, 3, 22, 29, 33, 34, 35, 36, 37, 39, 43, 48, 52, 53, 54, 57, 58, 59, 60, 61], "map_atom": [37, 53], "mar": 13, "marcello": 13, "margin": 34, "mari": [2, 6, 14, 25, 43, 58, 62], "mark": [0, 9, 13, 25, 29, 35, 43, 62, 65], "martha": 13, "martin": 46, "mary_n": 43, "masashi": [13, 49], "mask": [35, 52], "master": 35, "match": [2, 3, 29, 30, 34, 35, 36, 37, 39, 52, 53, 58, 59], "materi": [0, 46, 52], "mateusz": 13, "math": [2, 58], "mathbb": 57, "mathcal": 57, "mathemat": [13, 29, 44, 54, 59], "matplotlib": [7, 8, 9, 16, 19, 20, 23, 34, 63, 64, 65], "matr": 34, "matric": 60, "matrix": [29, 33, 34, 35, 41, 52, 53], "matsumoto": 13, "matter": [0, 27], "max": [1, 57], "max_length": 35, "max_memori": 35, "max_new_token": 35, "max_ord": [14, 24, 33, 53], "max_parse_tre": [35, 37, 53], "max_shard_s": 35, "maxfev": [39, 53], "maxim": [39, 53], "maximum": [33, 35, 37, 39, 52, 53], "maxsplit": 37, "maxval": 34, "mayb": 35, "mc_dev_data": [7, 8, 16, 18, 19, 20, 63, 64], "mc_test_data": [7, 8, 11, 16, 18, 19, 20, 63, 64, 67], "mc_train_data": [7, 8, 11, 16, 18, 19, 20, 63, 64, 67], "mead": [13, 39, 52, 53, 55], "meal": [7, 8, 11, 63, 64, 67], "mean": [13, 23, 27, 29, 34, 35, 37, 39, 42, 43, 45, 53, 54, 61, 63, 64, 67, 69], "mean_loss": 23, "meaning": [34, 43, 52], "measur": [1, 23, 29, 34, 39, 41, 42, 48, 53, 57, 69], "measure_al": 34, "measure_regist": 34, "mechan": [13, 29, 35, 39, 52, 59], "media": 44, "medic": 42, "medium": 35, "meet": [13, 27, 43], "mehrnoosh": [13, 29], "meichanetzidi": [13, 32], "mem_rss_diff": 35, "member": [35, 39], "memo": [35, 39], "memori": [35, 39, 41, 53], "memory_format": [35, 39], "mention": [0, 52, 59], "mere": 44, "merg": [14, 36, 53, 61], "messag": [35, 37, 52, 53], "meta": [29, 35], "metadata": [34, 37, 52, 53], "method": [0, 12, 13, 21, 25, 27, 29, 34, 35, 36, 37, 39, 41, 43, 44, 45, 52, 53, 55, 57, 58, 59, 62, 63, 64, 65, 66, 68], "metric": [30, 39, 41, 44, 45, 47, 53, 55], "mice": 27, "microsoft": 69, "mid": [34, 37, 53], "middl": 34, "might": [14, 27, 35, 36, 37, 40, 43, 50, 53, 54, 56, 62, 69], "mildli": 29, "million": 43, "millisecond": 34, "min_freq": [27, 36, 53], "mind": [0, 69], "minim": [13, 39, 52, 53], "minimis": [23, 29, 55], "minimize_criterion": [9, 39, 53, 65], "minimum": [27, 36, 37, 52, 53], "minor": [0, 52, 65], "minval": 34, "mirror": [34, 35], "miscellan": [37, 53], "mismatch": [52, 61], "miss": [0, 25, 35, 39, 42, 52, 53, 62], "missing_cat_scor": [35, 37, 53], "missing_kei": [35, 39], "missing_span_scor": [35, 37, 53], "mit": 13, "mix": [1, 34, 52, 57, 69], "mixedst": [34, 48], "ml": [40, 45, 50, 52, 69], "mod": [37, 53], "modal": 35, "mode": [6, 26, 30, 35, 37, 39, 41, 52, 53, 62], "model": [0, 7, 8, 9, 13, 16, 19, 20, 23, 29, 30, 31, 32, 34, 35, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 61, 67], "model_arg": 35, "model_dir": 56, "model_name_or_path": [37, 53], "model_tag": 35, "modeling_bert": 48, "modeling_util": [35, 48], "modeloutput": 35, "modif": [33, 35, 39, 53, 54, 60], "modifi": [34, 35, 39, 41, 55, 57], "modul": [0, 12, 34, 35, 37, 39, 48, 52, 53, 57, 61, 63], "modular": 32, "moduletyp": [34, 39, 53], "moduleutilsmixin": [35, 48], "moment": 35, "monoid": [3, 12, 13, 14, 29, 30, 34, 44, 54, 57, 58, 61, 69], "more": [0, 14, 18, 27, 29, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 52, 53, 54, 55, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69], "morph": 34, "morphem": 43, "morphism": [5, 29, 34, 36, 53, 57, 59, 61], "most": [14, 29, 34, 35, 37, 42, 43, 44, 45, 46, 48, 49, 52, 53, 56, 57, 68, 69], "mostli": 29, "motiv": 0, "move": [34, 35, 39, 52], "movi": [14, 43], "mp": [14, 29, 35], "mps_ansatz": [4, 60], "mps_diagram": [4, 60], "mpsansatz": [4, 24, 30, 33, 41, 48, 53, 60], "mpss": 60, "mse": [39, 53], "mse_loss": [8, 18, 64], "mseloss": [30, 39, 42, 48, 52, 53, 55], "msgpack": 35, "mtdfc23": [13, 67], "mu": 29, "much": [35, 41, 43, 52], "multi": [29, 30, 35, 39, 52, 57], "multiclass": [39, 53], "multiheadattent": 35, "multipl": [34, 35, 37, 38, 39, 42, 45, 52, 53, 57], "multiplexedrotationbox": 34, "multiplexedtensoredu2box": 34, "multiplexedu2box": 34, "multiplexorbox": 34, "multipli": [34, 37, 53, 66], "multiset": 29, "music": 27, "musician": 27, "must": [33, 34, 35, 37, 39, 41, 53, 56, 64, 65], "mutual": 14, "my": [1, 6, 25, 35, 43, 57, 62], "my_api_token": [8, 64], "my_checkpoint": [39, 53], "my_honeywel": [8, 64, 69], "my_model_directori": 35, "my_noise_model": 41, "my_tf_checkpoint": 35, "my_tf_model_config": 35, "mycustommodel": [7, 41, 63], "n": [1, 2, 4, 5, 6, 9, 10, 11, 14, 15, 22, 24, 25, 27, 29, 32, 34, 35, 36, 37, 39, 41, 42, 43, 45, 53, 54, 57, 58, 60, 61, 62, 64, 65, 66, 67], "n_1qb_gate": 34, "n_2qb_gate": 34, "n_bit": 34, "n_class": [39, 53], "n_gate": 34, "n_gates_of_typ": 34, "n_layer": [2, 4, 8, 9, 10, 14, 15, 18, 19, 20, 23, 33, 53, 58, 60, 64, 65, 66], "n_legs_in": 34, "n_legs_out": 34, "n_nqb_gate": 34, "n_qubit": [2, 33, 34, 53, 58], "n_single_qubit_param": [2, 8, 9, 14, 18, 19, 20, 23, 33, 53, 58, 64, 65], "name": [0, 1, 2, 29, 30, 33, 34, 35, 36, 37, 39, 44, 49, 52, 53, 57, 58, 62], "name_or_ent": 34, "named_buff": [35, 39], "named_children": [35, 39], "named_modul": [35, 39], "named_paramet": [35, 39], "namedtupl": [35, 39], "namespac": [34, 35, 52], "nation": 43, "nativ": [29, 35, 52, 62, 63, 64, 65], "natur": [13, 29, 32, 37, 43, 44, 46], "na\u00efv": [25, 62], "nc": [37, 53], "ndagger": [3, 59], "ndarrai": [33, 34, 39, 53, 66], "necessari": [12, 14, 34, 41, 45, 49, 52, 69], "need": [0, 14, 23, 25, 27, 32, 34, 35, 39, 40, 41, 43, 44, 45, 49, 51, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69], "neg": [18, 34, 35, 37, 39, 42, 43, 53, 64, 69], "negation_rewrit": [2, 58], "negative_prompt_attention_mask": 35, "negative_prompt_id": 35, "neglect": 35, "neighbour": 34, "neither": 34, "nelder": [13, 39, 52, 53, 55], "nelder_mead_optim": 48, "neldermeadoptim": [30, 39, 48, 53, 55], "nest": [35, 39, 57, 59], "nested_cap": [3, 59], "nested_cup": [3, 59], "nested_snak": [3, 59], "net": [7, 35, 39, 41, 63, 69], "net_b": [35, 39], "net_c": [35, 39], "netherland": 13, "network": [12, 14, 18, 29, 33, 34, 35, 39, 41, 44, 50, 52, 53, 58, 60, 61, 62, 64, 66, 67, 69], "neural": [18, 41, 44, 62, 64, 69], "neuron": [18, 64], "neutral": 69, "never": [37, 45, 64], "new": [0, 13, 14, 32, 34, 35, 36, 37, 39, 43, 45, 48, 52, 53, 57, 58, 69], "new_diagram": [1, 57], "new_nam": [2, 58], "new_num_position_embed": 35, "new_num_token": 35, "newli": 35, "newspap": 43, "next": [0, 7, 8, 9, 14, 16, 19, 20, 23, 29, 34, 35, 44, 63, 64, 65], "nice": [27, 29], "nisq": [29, 69], "nlp": [13, 25, 29, 32, 42, 43, 45, 46, 49, 52, 54, 62, 67, 69], "nltk": 46, "nm": [37, 53], "nm65": [13, 55], "nn": [7, 8, 16, 18, 35, 39, 41, 48, 53, 63, 64], "no_grad": [35, 39], "no_typ": [26, 30, 37, 53, 62], "node": [34, 37, 53], "nodes": 34, "nois": [29, 69], "noise_model": [39, 41, 53], "noiseless": [41, 69], "noisemodel": 41, "noisi": [29, 41, 69], "noji": 13, "non": [29, 34, 35, 37, 39, 41, 52, 53, 57], "non_block": [35, 39], "none": [9, 14, 23, 33, 34, 35, 36, 37, 38, 39, 52, 53, 65, 69], "nor": [29, 34], "norm": [35, 52, 63], "normal": [1, 8, 22, 29, 34, 35, 37, 39, 53, 57, 64, 69], "normal_form": [1, 3, 5, 9, 22, 29, 34, 52, 57, 59, 61, 65], "normalis": [34, 52, 61], "normalised_diagram": [5, 61], "normalize_logit": 35, "not_d": [2, 58], "notat": [37, 59], "note": [0, 13, 14, 25, 27, 30, 32, 35, 36, 37, 39, 41, 43, 53, 54, 56, 57, 58, 60, 61, 62, 65, 67], "notebook": [32, 43, 52, 60, 61, 62, 65], "noth": [37, 53], "notic": 27, "notifi": 32, "notimplementederror": 34, "notion": [29, 59], "noun": [2, 4, 5, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 22, 23, 24, 27, 29, 30, 37, 41, 43, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67], "noun_phras": [30, 37, 53], "now": [5, 14, 27, 35, 50, 52, 60, 61, 63, 64, 65, 66, 67], "np": [1, 2, 7, 8, 9, 10, 11, 16, 18, 19, 20, 23, 34, 35, 37, 39, 53, 57, 58, 63, 64, 65, 66, 67], "np_circuit": [11, 67], "np_test_circuit": [11, 67], "npnp": 35, "nuanc": 44, "num": [39, 53], "num_beam": 35, "num_featur": [35, 39], "num_head": 35, "num_hidden_lay": 35, "num_paramet": 35, "num_return_sequ": 35, "number": [14, 29, 33, 34, 35, 37, 39, 40, 42, 43, 45, 52, 53, 54, 55, 57, 58, 60, 61, 62, 64, 65, 66], "numer": [37, 39, 44, 52, 53, 56], "numerical_backend": [11, 39, 52, 53, 67], "numpi": [1, 2, 7, 8, 9, 10, 11, 16, 18, 19, 20, 23, 29, 33, 34, 35, 39, 52, 53, 55, 57, 58, 63, 64, 65, 66, 67], "numpy_model": 48, "numpydoc": 0, "numpymodel": [20, 23, 30, 39, 48, 52, 53, 55, 69], "nvidia": 35, "o": [9, 14, 16, 18, 19, 20, 35, 37, 39, 51, 53, 65], "ob": [1, 34, 57, 58], "ob_map": [2, 33, 53, 58], "ob_siz": [30, 33, 53], "ob_with_cach": 34, "obei": 29, "object": [1, 3, 13, 14, 22, 29, 30, 34, 35, 36, 37, 39, 48, 52, 53, 54, 57, 58, 59, 62, 63, 65], "object_rel_pronoun": [14, 22, 61], "obtain": [2, 34, 35, 37, 50, 53, 58, 59, 60, 62, 69], "occur": [18, 27, 34, 35, 36, 37, 39, 42, 43, 53, 60, 64], "occurr": [27, 37, 53], "octob": 13, "off": [14, 29, 36, 42, 53], "offens": 0, "offer": [52, 69], "offici": [0, 35], "offlin": 35, "offload": 35, "offload_buff": 35, "offload_fold": 35, "offload_index": 35, "offload_state_dict": 35, "offset": 34, "often": [29, 42, 69], "ogb21": [13, 55], "oi": 13, "old": [13, 37, 52], "omit": [36, 53], "onc": [25, 27, 34, 35, 39, 44, 45, 58, 62, 69], "one": [14, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 49, 52, 53, 55, 57, 58, 60, 61, 63, 64, 65, 69], "one_ar": [1, 57], "one_diagram": [1, 57], "one_functor": [1, 57], "one_ob": [1, 57], "ones": [1, 2, 24, 35, 37, 39, 44, 53, 57, 58, 63, 67], "onli": [3, 14, 18, 27, 33, 34, 35, 36, 37, 39, 41, 42, 52, 53, 57, 58, 59, 62, 65, 69], "onlin": [30, 37, 49, 52, 53], "only_train": 35, "onto": [34, 50], "onward": 52, "oom": 35, "oov": 43, "op": [34, 37, 53], "op_type_count": 34, "op_type_depth": 34, "open": [7, 8, 9, 11, 16, 18, 19, 20, 29, 32, 33, 34, 41, 46, 52, 53, 63, 64, 65, 67], "openai": 35, "oper": [3, 23, 29, 34, 35, 37, 39, 52, 53, 57, 58, 59, 61, 62], "operatornam": 63, "opgroup": 34, "opposit": [33, 34, 53, 60], "ops_of_typ": 34, "opt_einsum": 41, "optic": 69, "optim": [0, 7, 8, 9, 13, 16, 18, 19, 20, 30, 35, 39, 41, 47, 48, 52, 53, 55, 63, 64, 65], "optim_hyperparam": [9, 19, 20, 23, 39, 53, 65], "optimis": [29, 34, 39, 41, 50, 52, 53, 63, 67], "optimizer_arg": [39, 53], "optimum": 35, "option": [30, 31, 33, 34, 35, 36, 37, 39, 55, 60, 63, 65, 69], "optyp": 34, "order": [14, 25, 27, 29, 33, 34, 35, 39, 41, 43, 49, 50, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69], "ordereddict": [35, 39], "ordin": [35, 37], "org": [13, 33, 34, 35, 39, 48, 53], "organ": [9, 35, 44, 65], "organis": [30, 43, 52], "orient": [33, 53, 60], "origin": [1, 14, 27, 29, 33, 34, 35, 36, 37, 49, 52, 53, 57, 58, 66], "original_diagram": [9, 65], "oserror": [37, 53], "ostaszewski": [13, 39, 53], "ot": 35, "other": [0, 27, 29, 30, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 52, 53, 60, 61, 68, 69], "otherwis": [18, 34, 35, 37, 39, 42, 50, 52, 53, 64], "otim": [29, 54, 57, 59], "oup": 13, "ouput": 18, "our": [18, 32, 57, 63, 64, 69], "out": [18, 34, 35, 39, 42, 43, 44, 45, 65, 68], "out_featur": [35, 39], "outcom": [29, 69], "outer": 34, "outlin": [37, 53], "output": [1, 18, 30, 34, 35, 36, 37, 39, 41, 42, 47, 49, 50, 52, 53, 57, 58, 61, 62, 63, 64, 69], "output_attent": 35, "output_dir": 14, "output_edge_ord": 34, "output_fil": 14, "output_format": 14, "output_hidden_st": 35, "output_length": 35, "output_loading_info": 35, "output_opt": 14, "output_reg": 34, "output_scor": 35, "output_typ": [5, 30, 36, 53, 61], "over": [29, 30, 34, 35, 37, 39, 41, 43, 53, 65], "overal": [34, 42, 45, 57, 62, 64], "overfit": [18, 45, 64], "overhaul": 52, "overlap": 37, "overload": 34, "overrid": [34, 35, 39, 52, 53], "overridden": 35, "overview": [0, 35, 46, 55], "overwrit": [35, 63], "own": [32, 34, 35, 39, 42, 53, 56, 58, 62], "ox": 13, "oxford": 69, "p": [10, 14, 15, 29, 32, 37, 39, 42, 53, 54, 66], "p0": 23, "p1": 23, "p17": 13, "p_circ": [8, 64], "packag": [0, 25, 30, 34, 40, 41, 43, 45, 48, 49, 52, 55, 58, 60, 61, 62, 65, 67, 68], "pad": [34, 35, 37], "pad_to_multiple_of": 35, "pad_token_id": 35, "page": [0, 13, 52], "paid": 69, "pair": [29, 34, 35, 39, 47, 53, 55, 62], "pair_diag": [8, 18, 64], "pair_label": [8, 18, 64], "paper": [13, 14, 32, 33, 35, 46, 52, 53, 67], "paradigm": [29, 54], "paragraph": 43, "parallel": [34, 35, 65], "param": [2, 33, 34, 35, 39, 53, 58], "param_dict": 15, "param_substitut": 34, "paramet": [8, 10, 13, 14, 15, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 52, 53, 55, 63, 64, 65, 66, 67], "parameter": [13, 35], "parameteris": [29, 30, 32, 33, 34, 40, 47, 50, 53, 55, 57, 58, 66], "parameterlist": [39, 53], "parametr": [34, 35, 39, 48, 53], "parametris": 52, "params_shap": [2, 30, 33, 53, 58], "pari": 43, "park": [4, 5, 6, 10, 26, 60, 61, 62, 66], "park__n": [10, 66], "park__n_0": [10, 66], "park__n_1": [10, 66], "park__n_2": [10, 66], "pars": [5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 20, 30, 35, 37, 46, 50, 52, 53, 57, 61, 62, 63, 64, 65, 66, 67], "parser": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 15, 19, 20, 23, 24, 25, 27, 29, 30, 31, 37, 41, 47, 48, 49, 50, 52, 53, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67], "parseresult": 35, "parsetre": [35, 48], "part": [29, 31, 35, 36, 37, 39, 40, 43, 44, 46, 53, 62, 64, 66, 67, 69], "partial": 29, "particip": 52, "particular": [29, 34, 35, 37, 39, 42, 52, 53, 58], "particularli": [39, 49, 52, 53], "partit": [37, 45], "pass": [7, 18, 25, 27, 34, 35, 36, 37, 39, 41, 50, 52, 53, 55, 57, 58, 61, 62, 63, 64, 65], "passag": 49, "password": 64, "past": 35, "past_d": [2, 58], "pastrewriterul": [2, 58], "path": [8, 34, 35, 37, 39, 53, 56, 59, 64, 69], "pathlik": [35, 37, 39, 53], "pattern": [36, 43, 45, 53], "pauli": [23, 52], "pauliexpbox": 34, "pauliexpcommutingsetbox": 34, "pauliexppairbox": 34, "pdf": [13, 14, 35], "peak": 35, "pearson": [13, 32], "peculiar": 34, "peft": [35, 48], "peft_config": 35, "peft_model_id": 35, "peftadaptermixin": 48, "peftconfig": 35, "penalti": 35, "pend": 35, "penn": [13, 29, 49], "pennylan": [8, 29, 30, 33, 39, 41, 45, 47, 52, 53, 60, 64, 69], "pennylane_model": 48, "pennylanecircuit": [34, 53], "pennylanecirucit": 34, "pennylanemodel": [8, 18, 30, 39, 48, 52, 53, 55, 64, 69], "peopl": [13, 22, 44], "pep": 0, "per": [14, 33, 34, 37, 52, 53, 60], "perform": [20, 29, 34, 35, 37, 39, 40, 41, 42, 44, 45, 52, 53, 59, 62, 63, 64, 65, 69], "perm": [1, 57], "perman": 0, "permit": [36, 53], "permut": [1, 34, 57], "perrier": 13, "persist": [35, 39], "person": [8, 11, 64, 67], "perspect": 44, "perturb": [13, 39, 53, 67], "peter": 13, "pg_type": [33, 53], "pgf": 14, "phase": 34, "phasediswap": 34, "phasedx": 34, "phasepolybox": 34, "phenomena": [29, 44], "phi": 34, "philosophi": 46, "photon": 69, "phrase": [5, 37, 43, 47, 52, 53, 54, 61, 62, 65], "physic": [13, 29, 54, 58], "pi": 57, "pickl": [14, 18, 35, 39, 52], "picklabl": [35, 39], "piec": 43, "pin": [35, 39, 52], "pip": [31, 32, 41, 56, 60], "pipelin": [14, 29, 30, 39, 47, 53, 57, 58, 60, 63, 65, 67], "pipeline_config": [37, 53], "pixel_valu": 35, "pizza": [6, 25, 43, 62], "place": [27, 29, 34, 35, 37, 39, 50, 52, 53, 55, 67], "placehold": [2, 30, 36, 53, 58], "placement": [37, 53], "plai": [27, 42], "plain": 35, "plan": [31, 52, 69], "planar": [37, 53], "plantuml": 51, "platform": 29, "pleas": [0, 15, 32, 35, 39, 53, 56], "plot": [7, 8, 9, 16, 19, 20, 23, 63, 64, 65], "plt": [7, 8, 9, 16, 19, 20, 23, 34, 63, 64, 65], "plugin": 34, "plural": 29, "png": [14, 34], "po": 43, "point": [0, 34, 35, 36, 37, 39, 42, 46, 53, 54, 58, 60], "pointer": 35, "polajnar": 13, "polit": 0, "polynomi": [29, 33, 53, 60], "popular": [25, 45, 62, 69], "portion": 45, "posisbli": 34, "posit": [18, 30, 34, 35, 37, 39, 42, 43, 52, 53, 64], "position_id": 35, "positive_d": [2, 58], "positiveansatz": [2, 58], "posix": 37, "possess": 13, "possibl": [14, 27, 32, 34, 35, 36, 37, 39, 41, 42, 52, 53, 56, 61, 62, 64, 69], "possibli": [34, 35, 39], "post": [1, 29, 33, 34, 35, 36, 39, 52, 53, 57, 61, 64, 65], "post_init": 35, "post_process": 34, "post_select": 34, "post_selected_circuit": 34, "postadverb": [14, 22, 61], "postselect": [52, 58], "postselection_basi": [33, 53], "potenti": [35, 45, 65], "power": [29, 43, 52, 57], "pq": 37, "pqc": 52, "pr": 35, "pr_number": 35, "practic": [13, 27, 29, 30, 43, 44, 49, 52, 54, 59, 69], "pragmat": 0, "pre": [30, 35, 37, 39, 41, 44, 50, 53, 65], "preadverb": [14, 22, 61], "precaut": 35, "preced": [36, 53], "precis": [35, 42, 44], "pred": [7, 8, 11, 41, 63, 64, 67], "predefin": [29, 42], "predic": 34, "predict": [8, 11, 18, 29, 39, 42, 43, 52, 53, 55, 64, 65, 67], "prefer": [0, 14, 35, 41, 44, 49, 59], "prefix": [35, 37, 39, 43, 53], "prefix_allowed_tokens_fn": 35, "pregroup": [6, 12, 29, 30, 34, 36, 37, 41, 44, 49, 52, 53, 61, 62, 69], "pregroup_diagram": 41, "pregroup_normal_form": [34, 36, 53], "prepar": [7, 8, 11, 14, 34, 35, 40, 41, 43, 47, 55], "prepare_input": 35, "prepare_inputs_for_gener": 35, "prepend": [35, 39], "preposit": [5, 43, 47, 52, 60, 61, 66], "prepositional_phras": [5, 14, 22, 30, 37, 52, 53, 61], "preprint": 32, "preprocess": [44, 46, 52, 62], "present": [27, 33, 34, 35, 37, 39, 43, 53, 57, 62, 63, 65, 67, 69], "preserv": [29, 35, 39, 57], "press": 13, "pretrain": 35, "pretrained_model_name_or_path": 35, "pretrainedconfig": 35, "pretrainedmodel": [35, 48], "pretrainedtokenizerbas": 35, "pretrainedtokenizerfast": 35, "pretti": [37, 53], "prevent": [18, 39, 52, 53, 64], "previou": [35, 52, 57, 62], "previous": [35, 52, 69], "primarili": [14, 29, 37, 53, 69], "primit": 29, "principl": 44, "print": [1, 3, 7, 8, 9, 10, 11, 16, 18, 19, 20, 21, 22, 27, 34, 35, 37, 39, 52, 53, 57, 59, 63, 64, 65, 66, 67], "printabl": 37, "prioriti": [14, 35, 37, 53], "privat": [0, 35], "prob": [8, 18, 64], "probabilti": [34, 41], "probabl": [8, 18, 23, 29, 34, 35, 37, 39, 41, 42, 52, 53, 64, 69], "probem": 61, "problem": [14, 29, 35, 36, 39, 42, 44, 49, 52, 53, 56, 58, 60, 61, 64], "procedur": [29, 61, 63], "proceed": 13, "process": [13, 14, 25, 27, 29, 30, 32, 34, 35, 37, 39, 40, 41, 42, 44, 45, 46, 50, 53, 54, 55, 67], "processor": [29, 35], "prod": [2, 58], "produc": [14, 29, 34, 36, 37, 43, 52, 53, 60, 61, 62, 63, 67, 69], "product": [29, 33, 34, 44, 52, 53, 54, 57, 58, 59], "profit": 29, "program": [7, 8, 11, 14, 29, 43, 46, 54, 63, 64, 67], "programm": [43, 63, 67], "programmat": 14, "progress": [30, 35, 37, 52, 53], "prohibit": 61, "project": [0, 30, 39, 44, 53], "projectorassertionbox": 34, "promin": 44, "prompt": [35, 64], "prone": 69, "pronoun": [13, 47, 52, 58, 61, 65], "proof": [29, 69], "prop_cycl": [7, 8, 9, 16, 19, 20, 23, 63, 64, 65], "propag": [37, 52, 53], "proper": [25, 36, 43, 53, 61, 62, 69], "properli": [0, 14, 15, 34, 35, 44, 58, 62], "properti": [29, 33, 34, 35, 37, 39, 44, 53, 54, 57, 59], "proport": [34, 42], "propos": 0, "protect": 56, "protocol": [13, 34, 35, 48], "provid": [0, 8, 14, 23, 25, 29, 31, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 68, 69], "proxi": 35, "prune": 35, "prune_head": 35, "pt": 35, "public": [0, 69], "publish": 13, "pull": 35, "pulman": 13, "puls": 29, "puml": 51, "punc": [37, 52, 53], "punctuat": [25, 30, 35, 37, 43, 52, 53, 62], "pure": [14, 34, 47, 57, 64], "purpos": [0, 14, 29, 35, 43, 44, 52, 61, 66], "pursuant": [33, 53], "push": 35, "push_to_hub": 35, "pushtohubmixin": [35, 48], "put": [35, 57], "py": [31, 34, 39, 53], "pybind11": 34, "pypi": 52, "pyplot": [7, 8, 9, 16, 19, 20, 23, 63, 64, 65], "python": [0, 13, 29, 31, 32, 35, 37, 41, 46, 49, 52], "pytket": [4, 9, 15, 19, 29, 34, 41, 52, 57, 60, 65, 69], "pytorch": [29, 34, 35, 39, 41, 45, 46, 47, 50, 52, 53, 55, 57, 63, 67, 69], "pytorch_model": [35, 48], "pytorch_train": 48, "pytorchmodel": [7, 16, 30, 39, 48, 52, 53, 55, 63, 69], "pytorchtrain": [7, 8, 16, 30, 39, 41, 47, 48, 53, 55, 63, 64, 69], "q": [13, 32, 34, 37, 42, 53], "q_model": [8, 64], "q_regist": 34, "qapi": 64, "qcontrolbox": 34, "qem": [37, 53], "qiskit": [4, 8, 9, 19, 29, 41, 60, 64, 65, 69], "qiskit_circuit": [4, 60], "qml": [8, 34, 36, 45, 52, 53, 64, 69], "qnlp": [13, 29, 30, 32, 69], "qnode": 34, "qreg": 34, "qregmap": 34, "quadrat": 35, "qualifi": [35, 39], "qualiti": 44, "qualnam": [37, 53], "quandela": 69, "quantikz": 34, "quantinuum": [0, 32, 41, 64, 69], "quantinuum_": [8, 64], "quantinuum_account_email": 69, "quantinuumbackend": 41, "quantiz": 35, "quantization_config": 35, "quantizationconfigmixin": 35, "quantizationconfigpars": 35, "quantum": [1, 2, 4, 12, 13, 14, 29, 30, 32, 33, 39, 40, 41, 44, 47, 48, 50, 52, 53, 54, 55, 58, 59, 61, 63, 66, 68], "quantum_model": 48, "quantum_train": 48, "quantummodel": [30, 39, 48, 52, 53, 56], "quantumtrain": [9, 19, 20, 23, 30, 39, 41, 48, 52, 53, 55, 65, 69], "quantwar": 69, "qubit": [1, 8, 14, 29, 33, 34, 39, 40, 41, 52, 53, 54, 57, 58, 60, 64, 65, 66, 69], "qubit0": 34, "qubit1": 34, "qubit2": 34, "qubit_0": 34, "qubit_1": 34, "qubit_2": 34, "qubit_cr": 34, "qubit_create_al": 34, "qubit_discard": 34, "qubit_discard_al": 34, "qubit_is_cr": 34, "qubit_is_discard": 34, "qubit_readout": 34, "qubit_to_bit_map": 34, "qubitregist": 34, "quera": 69, "queri": [34, 35, 37, 39, 44, 49, 52, 53], "question": [0, 32], "queu": 64, "quick": 43, "quicki": 35, "quickli": [18, 22, 64], "quit": 46, "quot": 52, "qute": 13, "r": [1, 2, 3, 5, 10, 11, 14, 15, 22, 27, 29, 34, 36, 37, 53, 54, 57, 58, 59, 61, 66, 67], "race": 35, "radian": [39, 53], "rais": [29, 34, 35, 36, 37, 39, 52, 53], "ram": 35, "ran": 43, "rand": [10, 11, 66, 67], "random": [8, 10, 11, 18, 39, 52, 53, 64, 66, 67], "randomli": [40, 66], "rang": [1, 2, 8, 11, 18, 23, 33, 34, 35, 37, 39, 43, 44, 46, 49, 52, 53, 55, 57, 58, 60, 63, 64, 67, 69], "range_": [7, 8, 9, 16, 19, 20, 63, 64, 65], "rangl": 29, "rank": 35, "rare": [25, 27, 43, 62], "rate": [39, 53, 65], "rather": [52, 57, 64], "ratio": [34, 42], "raw": [14, 25, 43, 44, 62], "raw_dev_diagram": [8, 18, 19, 20, 64], "raw_test_diagram": [8, 18, 19, 20, 64], "raw_train_diagram": [8, 9, 18, 19, 20, 64, 65], "raw_val_diagram": [9, 65], "rcole": 13, "rcparam": [7, 8, 9, 16, 19, 20, 23, 63, 64, 65], "re": [35, 39, 61], "reach": [29, 35], "read": [11, 14, 30, 32, 35, 37, 47, 52, 53, 59, 63, 64, 65, 67], "read_data": [7, 8, 9, 11, 16, 18, 19, 20, 63, 64, 65, 67], "readabl": 34, "reader": [0, 2, 6, 8, 16, 18, 27, 29, 30, 37, 46, 47, 48, 52, 53, 64], "readi": [50, 67], "readlin": [11, 67], "readm": 52, "readout": 34, "real": [34, 41, 42, 44, 55, 69], "real_ansatz_circuit": [2, 58], "real_d": [2, 58], "realansatz": [2, 52, 58], "realist": 41, "reason": [0, 13, 34, 35, 39, 44, 61, 69], "rebank": [37, 53], "recal": [42, 44, 62], "receiv": [35, 39], "recip": 35, "recogn": 34, "recognis": 34, "recognit": 44, "recommend": [31, 40, 41, 44, 49, 52, 63, 69], "recomput": 35, "reconstruct": 35, "reconstructed_scor": 35, "record": [35, 39], "recov": 35, "recurr": 62, "recurs": [34, 35, 39], "red": 34, "reduc": [34, 35, 41, 43, 58, 61, 64, 65], "reduct": 60, "redund": [35, 43, 50], "ref": 35, "refactor": 52, "refer": [0, 18, 25, 27, 29, 32, 34, 35, 39, 43, 52, 53, 55, 57, 58, 60, 62, 64, 69], "referenc": [35, 39], "refin": 35, "reflect": [3, 29, 50, 52, 59], "reg0_in": 34, "reg1_in": 34, "reg_in": 34, "reg_out": 34, "regad": 0, "regard": [0, 35], "regardless": [35, 39], "regist": [34, 35, 37, 39], "register_backward_hook": [35, 39], "register_buff": [35, 39], "register_error": 37, "register_for_auto_class": 35, "register_forward_hook": [35, 39], "register_forward_pre_hook": [35, 39], "register_full_backward_hook": [35, 39], "register_full_backward_pre_hook": [35, 39], "register_load_state_dict_post_hook": [35, 39], "register_modul": [35, 39], "register_module_forward_hook": [35, 39], "register_module_forward_pre_hook": [35, 39], "register_module_full_backward_hook": [35, 39], "register_module_full_backward_pre_hook": [35, 39], "register_paramet": [35, 39], "register_special_box": [1, 34, 57], "register_state_dict_pre_hook": [35, 39], "reglogicexp": 34, "regress": 44, "regret": 0, "regular": 37, "reject": 0, "reject_dup": 34, "rel": [13, 14, 35, 37, 47, 52, 53, 58, 61, 65], "relabel": 35, "relat": [0, 14, 29, 31, 35, 44, 49, 54, 68], "relationship": [29, 50], "relativeri": 14, "releas": [0, 14, 30, 32, 34, 35, 39, 48, 49, 50, 56, 63], "relev": [35, 42, 44], "reload": 35, "relpron": [9, 13, 65], "relu": [8, 18, 64], "remain": [0, 29, 35, 37, 45, 53, 54], "remaind": 64, "remot": 35, "remov": [0, 14, 35, 36, 37, 39, 43, 44, 47, 50, 52, 53, 56, 61, 64, 65], "removablehandl": [35, 39], "remove_blank_wir": 34, "remove_cup": [8, 9, 18, 19, 20, 22, 52, 64, 65], "remove_dupl": [35, 39], "remove_prefix": 35, "remove_punctuation_left": [30, 37, 52, 53], "remove_punctuation_right": [30, 37, 53], "remove_swap": 52, "removecupsrewrit": [8, 9, 18, 19, 20, 22, 30, 36, 48, 52, 53, 61, 64, 65], "removed_cups_diagram": [9, 65], "removeprefix": 37, "removesuffix": 37, "removeswapsrewrit": [14, 30, 36, 48, 52, 53, 61], "renam": [34, 52], "rename_unit": 34, "render": [14, 15, 34], "render_as_str": 34, "render_circuit_jupyt": [4, 15, 60], "repeat": [14, 34, 45], "rephras": 0, "repl": 34, "replac": [27, 30, 33, 34, 35, 36, 37, 39, 43, 52, 53, 58, 60, 61, 67], "replace_cat_result": 52, "replace_implicit_wire_swap": 34, "replace_result": [30, 37, 53], "replace_swap": 34, "repo": 35, "repo_id": 35, "repo_url": 35, "report": [37, 53], "repositori": [31, 32, 35, 41, 43, 52], "repr": [3, 34, 37, 59], "repres": [3, 25, 29, 33, 34, 35, 40, 41, 42, 43, 44, 53, 54, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69], "represent": [27, 29, 34, 35, 37, 39, 43, 44, 48, 50, 52, 53, 54, 55, 57, 61, 62, 66, 69], "request": 35, "requir": [14, 33, 34, 35, 36, 37, 39, 40, 41, 45, 49, 52, 53, 54, 56, 58, 59, 60, 61, 62, 67, 69], "requires_grad": [35, 39], "requires_grad_": [35, 39], "research": [13, 29, 32, 42, 43, 46], "reserv": 37, "reset": [34, 35, 39, 53], "reset_memory_hooks_st": 35, "reshap": [1, 34, 57], "resiz": 35, "resize_position_embed": 35, "resize_token_embed": 35, "resolut": [37, 53], "resolv": [30, 35, 37, 39, 52, 53, 56], "resourc": [30, 34, 41, 46, 49, 61, 69], "resource_data": 34, "resource_data0": 34, "resource_data1": 34, "resourcebound": 34, "resourcedata": 34, "resp": 35, "respect": [0, 14, 29, 34, 35, 37, 39, 43, 49, 53, 54, 55, 57, 58, 62, 64], "respond": [32, 44], "respons": [0, 35, 52, 56], "rest": [14, 34, 35, 37, 41, 53, 62, 63], "restor": 52, "restrict": 65, "result": [10, 14, 25, 27, 30, 34, 35, 36, 37, 39, 40, 41, 43, 44, 47, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 66, 67, 69], "resum": 35, "resume_download": 35, "retain": 34, "retriev": [34, 35, 41, 44], "retrieve_modules_from_nam": 35, "return": [1, 2, 7, 8, 9, 11, 14, 15, 16, 18, 19, 20, 23, 29, 33, 34, 35, 36, 37, 38, 39, 41, 52, 53, 54, 57, 58, 59, 62, 63, 64, 65, 67], "return_buff": 35, "return_dict": 35, "return_dict_in_gener": 35, "return_tensor": 35, "revers": [3, 34, 59], "reverse_bettertransform": 35, "revert": 35, "review": [0, 43, 44], "revis": [34, 35, 48], "revisit": 13, "rewrit": [0, 2, 5, 27, 29, 30, 34, 37, 47, 50, 52, 53, 54, 57], "rewrite_diagram": 48, "rewrite_rul": 14, "rewriterul": [0, 2, 30, 36, 48, 53], "rewritten": [34, 36, 37, 53], "rewritten_diagram": [5, 61], "rewritten_test_diagram": 27, "rewritten_train_diagram": 27, "rfind": 37, "rgba": 14, "rich": 69, "richi": [13, 32], "rigetti": 69, "right": [0, 1, 29, 30, 34, 35, 37, 40, 41, 45, 52, 53, 54, 57, 58, 59, 62, 63], "rigid": [1, 12, 29, 52, 57, 58], "rimel": 13, "rindex": 37, "ring": [33, 53, 60], "risk": 53, "rjust": 37, "rmpc16": [13, 65], "robin": [13, 32], "robust": [49, 69], "roger": 13, "role": [27, 42, 43], "root": [14, 34, 37, 43, 52, 53, 65], "root_cat": [9, 14, 35, 37, 53, 65], "root_categori": 14, "rotat": [2, 29, 33, 34, 39, 40, 48, 53, 57, 58, 60, 66], "rotosolv": [30, 39, 47, 52, 53, 55], "rotosolve_optim": 48, "rotosolveoptim": [23, 30, 39, 48, 53, 55], "rough": 69, "roughli": 42, "round": [7, 8, 9, 16, 18, 19, 20, 23, 34, 63, 64, 65], "rout": 34, "routin": 55, "row": [7, 8, 9, 16, 19, 20, 34, 39, 53, 63, 64, 65], "rp": [37, 53], "rp_test_data": [9, 65], "rp_train_data": [9, 65], "rpartit": 37, "rsplit": 37, "rstrip": 37, "rule": [0, 5, 27, 29, 30, 35, 36, 37, 41, 44, 47, 48, 50, 52, 53, 55, 59, 62], "rule_onli": [6, 26, 30, 37, 53, 62], "rule_typ": [26, 30, 37, 53, 62], "run": [8, 11, 13, 15, 18, 31, 34, 35, 37, 39, 41, 43, 53, 54, 55, 60, 65, 67, 69], "runnabl": 35, "running_mean": [35, 39], "running_var": [35, 39], "runs__n": 15, "runtim": [35, 39], "runtimeerror": [35, 39], "rx": [33, 34, 48, 53, 60], "ry": [2, 34, 48, 58], "rz": [1, 33, 34, 48, 53, 57, 60], "rzryrz": [33, 53, 60], "s0": 34, "s1": 34, "s10589": [13, 39, 53], "s41586": 13, "s42484": 13, "s_0": [10, 15, 66], "s_1": 15, "sadrzadeh": [13, 29], "safe_seri": 35, "safeguard": 56, "safer": 35, "safetensor": 35, "safeti": [35, 37, 52, 53], "sai": [35, 39], "said": [34, 35], "sailor": [9, 65], "same": [0, 1, 8, 14, 18, 27, 29, 34, 35, 36, 37, 39, 53, 56, 57, 58, 62, 63, 64, 69], "same_circuit": [1, 57], "sampl": [8, 18, 43, 45, 64, 69], "samson": [13, 29], "satisfi": [29, 37, 53, 57, 59, 69], "sauc": [7, 8, 11, 63, 64, 67], "save": [8, 9, 18, 30, 34, 35, 39, 52, 53, 64, 65, 69], "save_checkpoint": [30, 39, 53], "save_dict": [39, 53], "save_directori": 35, "save_funct": 35, "save_peft_format": 35, "save_pretrain": 35, "saved_model": 35, "scalar": [34, 39, 48, 52, 53], "scale": [29, 34, 37, 39, 52, 53, 65], "scale_and_pad": 34, "scaled_dot_product_attent": 35, "scan": [36, 53], "scc13": [13, 29, 52, 58], "scc14": [13, 29, 52, 58], "scenario": [42, 43, 49, 55, 69], "scheme": [0, 14, 29, 37, 50, 52, 62], "scienc": [13, 29], "scipi": [39, 53], "scope": [44, 46], "score": [35, 37, 42, 44, 53], "scrape": 44, "scratch": 58, "script": [31, 35, 52], "scriptmodul": 35, "sdg": 34, "sdk": 29, "sdpa": 35, "search": [34, 35, 37, 43, 44], "second": [34, 35, 37, 40, 53], "second_d": [8, 64], "section": [14, 27, 35, 37, 41, 43, 44, 46, 49, 52, 53, 55, 61, 62, 63, 64, 66, 67, 68], "section2diagram": [30, 37, 53], "section2diagrams_gen": [30, 37, 53], "section2tre": [30, 37, 53], "section2trees_gen": [30, 37, 53], "section_id": [37, 53], "see": [0, 22, 27, 29, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69], "seed": [7, 8, 9, 11, 16, 18, 19, 20, 23, 35, 39, 53, 63, 64, 65, 67], "seek": [27, 44], "seem": 64, "seen": [14, 29, 54, 58, 60], "select": [1, 14, 29, 33, 34, 35, 36, 46, 48, 50, 52, 53, 55, 57, 61, 64, 65], "self": [2, 7, 8, 18, 34, 35, 37, 39, 41, 53, 58, 63, 64], "self_adjoint": 34, "selfconjug": [34, 48], "sell": [9, 65], "semant": [13, 29, 54, 57], "semspac": 13, "send": [0, 14, 32, 34, 49, 52, 54, 57], "sens": [36, 42, 53, 54, 59], "sensit": [29, 36, 42, 53], "sent": [35, 64], "sentenc": [2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 32, 34, 35, 37, 38, 41, 43, 47, 48, 49, 50, 52, 53, 54, 57, 58, 60, 61, 63, 64, 65, 66, 67, 69], "sentence2diagram": [1, 2, 4, 5, 6, 10, 15, 17, 21, 23, 24, 25, 26, 30, 37, 41, 52, 53, 57, 58, 60, 61, 62, 66], "sentence2tre": [30, 37, 53], "sentences2diagram": [7, 8, 9, 11, 16, 18, 19, 20, 27, 30, 37, 53, 63, 64, 65, 67], "sentences2tre": [30, 37, 53], "sentencetyp": [37, 53], "sentiment": [42, 43, 44], "sentinel": [37, 53], "sep": [37, 53], "separ": [31, 34, 37, 43, 64], "seper": [34, 64], "septemb": 13, "seq_length": 35, "sequenc": [29, 30, 34, 35, 37, 44, 52, 53, 60, 61], "sequence_length": 35, "sequences_scor": 35, "sequenti": [8, 18, 34, 35, 39, 64], "seri": [33, 53, 62], "serial": [35, 39], "serializ": 34, "seriou": 52, "serv": [9, 65, 69], "server": [32, 35, 37, 53], "servic": [37, 52, 53, 69], "set": [0, 7, 8, 9, 11, 13, 14, 15, 16, 19, 20, 23, 25, 27, 29, 34, 35, 36, 37, 39, 43, 45, 52, 53, 57, 60, 62, 63, 64, 65, 66, 67], "set_adapt": 35, "set_backend": [11, 34, 67], "set_extra_st": [35, 39], "set_input_embed": 35, "set_root_cat": 35, "set_titl": [7, 8, 9, 16, 19, 20, 23, 63, 64, 65], "set_to_non": [35, 39], "set_xlabel": [7, 8, 9, 16, 19, 20, 23, 63, 64, 65], "set_ylabel": [7, 8, 9, 16, 19, 20, 23, 63, 64, 65], "settl": 43, "setup": 52, "sever": [29, 35, 39, 41, 44, 45, 50, 52, 53, 55], "shallow": [35, 39], "shape": [1, 2, 23, 29, 33, 35, 37, 39, 41, 53, 57, 58], "shard": 35, "share": [34, 35, 58], "share_memori": [35, 39], "share_memory_": [35, 39], "sharei": [7, 8, 9, 16, 19, 20, 63, 64, 65], "sharex": [8, 9, 19, 20, 64, 65], "she": [1, 34, 57], "shift": [39, 41, 53, 65], "ship": [49, 50], "short": [14, 40], "shorter": 35, "shot": [8, 9, 19, 29, 34, 39, 41, 53, 64, 65], "should": [18, 34, 35, 36, 37, 39, 41, 45, 52, 53, 57, 58, 59, 62, 69], "shouldn": [1, 57], "show": [14, 27, 34, 35, 39, 40, 47, 49, 54, 68], "shown": [34, 50], "shuffl": [7, 9, 19, 20, 39, 53, 55, 63, 64, 65], "shuffle_data": [30, 39, 53], "side": [29, 36, 37, 53], "sig": [7, 16, 63], "sigmoid": [7, 8, 11, 16, 18, 63, 64, 67], "signatur": [0, 35, 39, 52, 63, 65], "signific": [44, 64, 68], "significantli": [52, 64], "silent": 35, "sim": [13, 33, 52, 53], "sim14ansatz": [30, 33, 39, 48, 53, 60], "sim15ansatz": [30, 33, 39, 48, 53, 60], "sim4ansatz": [30, 33, 48, 52, 53, 60], "similar": [34, 35, 39, 43, 45, 57, 67, 68, 69], "similarli": [35, 39, 52, 62, 69], "simpl": [18, 27, 35, 36, 39, 53, 58, 60, 61, 63, 64, 67, 69], "simpler": [35, 42, 57], "simplerewriterul": [2, 30, 36, 48, 53], "simplest": 69, "simplex": [13, 39, 53], "simpli": [34, 44, 57], "simplic": [14, 36, 53], "simplif": 29, "simplifi": [27, 29, 41, 43, 48, 50, 52, 54, 55, 59, 61, 62], "simul": [8, 20, 34, 39, 41, 52, 53, 55, 64], "simultan": [13, 18, 34, 39, 42, 53, 64, 67], "sinc": [14, 25, 27, 29, 34, 35, 36, 37, 39, 43, 44, 49, 50, 52, 53, 56, 57, 58, 61, 62, 63, 65, 66, 69], "singl": [14, 27, 33, 34, 35, 37, 38, 39, 42, 52, 53, 57, 58, 60, 61, 62], "single_qubit_rot": [33, 53], "singli": 34, "site": 35, "size": [2, 10, 11, 14, 24, 30, 33, 34, 35, 36, 37, 39, 41, 45, 48, 53, 58, 63, 64, 65, 66, 67], "sjag19": [13, 52, 58, 60], "skill": [7, 8, 11, 44, 63, 64, 67], "skip": [35, 39], "slash": [30, 35, 37, 53], "sleep": [36, 53], "slice": [3, 37, 59], "slide": 46, "slight": 35, "slightli": 27, "slot": 35, "slow": [52, 69], "slower": [35, 41], "small": [0, 14, 18, 29, 34, 64, 69], "smaller": [25, 29, 34, 35, 41, 43, 45, 62, 63, 67], "smallest": [34, 43], "smooth": [39, 53], "smoothli": 69, "snake": [1, 3, 29, 57, 59], "snake1": [3, 59], "snake2": [3, 59], "snapshot": [39, 53], "so": [1, 3, 14, 18, 27, 29, 34, 35, 37, 39, 41, 45, 49, 52, 53, 55, 57, 58, 59, 61, 62, 64, 65, 67, 69], "social": 44, "softmax": 35, "softwar": [8, 29, 30, 63, 64, 67], "soldier": [9, 65], "sole": [0, 35, 44, 61], "solut": [35, 39, 53, 69], "solv": [29, 42, 44, 64, 65], "some": [14, 29, 34, 35, 39, 41, 42, 43, 44, 46, 52, 54, 57, 58, 60, 61, 62, 63, 64, 65, 69], "someon": [32, 40], "someth": [13, 35, 39], "sometim": [29, 43, 58], "soon": [32, 69], "sort": [2, 10, 11, 15, 24, 33, 39, 53, 58, 66, 67], "sort_kei": [30, 33, 53], "sound": 57, "sourc": [29, 32, 33, 34, 35, 36, 37, 38, 39, 43, 46, 51, 53, 58], "spa98": [13, 55], "space": [11, 13, 25, 29, 33, 34, 37, 39, 53, 54, 57, 60, 62, 66, 67], "spaci": [14, 25, 37, 38, 43, 53, 62], "spacy_tokenis": 48, "spacytokenis": [6, 25, 30, 38, 43, 48, 53, 62], "spall": 13, "spam": 42, "span": [35, 37, 53], "span_label": 35, "span_prob_threshold": [35, 37, 53], "span_prob_threshold_strategi": [35, 37, 53], "span_scor": 35, "span_top_k": [35, 37, 53], "spars": [39, 53], "sparsiti": [14, 36, 53], "special": [27, 29, 35, 36, 43, 46, 52, 53, 57, 59], "special_box": 34, "special_cas": 52, "specif": [14, 25, 29, 35, 36, 37, 41, 42, 43, 44, 45, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69], "specifi": [14, 34, 35, 36, 37, 39, 43, 52, 53, 58, 63, 64, 65], "speech": [43, 44, 46], "speed": [35, 39, 41, 52, 53, 67, 69], "sphere": 34, "sphinxcontrib": 52, "spider": [6, 14, 27, 29, 30, 33, 34, 36, 37, 48, 52, 53, 60, 61], "spider_ansatz": [4, 60], "spider_diagram": [4, 60], "spideransatz": [4, 7, 11, 14, 16, 24, 30, 33, 41, 48, 53, 60, 63, 67], "spiders_diagram": [6, 62], "spiders_read": [6, 14, 21, 27, 37, 48, 52, 62], "spidersread": 37, "spin": 29, "split": [2, 14, 30, 33, 34, 37, 38, 43, 45, 47, 53, 58, 60, 63, 67], "split_sent": [6, 14, 25, 30, 38, 53, 62], "splite": 41, "splitlin": 37, "spoken": [43, 44], "spproxim": [39, 53], "springer": 13, "spsa": [39, 53, 55, 65, 67], "spsa_optim": 48, "spsaoptim": [9, 19, 20, 30, 39, 41, 48, 52, 53, 55, 65], "sqrt": [33, 34, 48, 53, 63], "squar": [34, 39, 53, 58, 64], "ssl": 52, "stabil": [39, 52, 53, 65], "stabiliserassertionbox": 34, "stabl": [35, 56], "stage": [14, 35, 40, 69], "stair": [14, 27, 30, 37, 53], "stairs_diagram": [6, 62], "stairs_read": [6, 14, 21, 37, 41, 48, 62], "stale": 0, "stand": 29, "standard": [0, 29, 34, 35, 37, 41, 42, 47, 49, 52, 53, 55, 58, 59, 60, 61, 65, 67], "stanford": 46, "start": [14, 32, 33, 34, 37, 39, 44, 46, 53, 58, 62, 63, 64, 65, 67], "start_box": [37, 53], "start_wire_idx": 34, "startswith": 37, "state": [0, 1, 22, 23, 29, 31, 33, 34, 35, 36, 39, 41, 48, 49, 50, 52, 53, 54, 57, 61, 64], "state_dict": [30, 35, 39, 53], "statepreparationbox": 34, "static": [34, 35, 37, 39, 53], "statist": [29, 31, 39, 44, 49, 50, 53, 69], "std": [23, 35], "std_loss": 23, "stderr": 53, "stdout": 14, "ste00": [13, 29], "steedman": [13, 29], "stem": [37, 43, 44, 53, 54], "step": [2, 8, 9, 18, 29, 30, 32, 34, 35, 39, 40, 43, 44, 45, 50, 52, 53, 57, 58, 63, 64, 65, 67], "stephen": [13, 32], "steve": 29, "still": [29, 31, 35, 37, 43, 52, 53, 60, 69], "stochast": [13, 39, 53, 67], "stop": [8, 9, 18, 35, 37, 39, 43, 52, 53, 64, 65], "stopping_criteria": 35, "stoppingcriterialist": 35, "stopword": 44, "storag": [35, 39], "store": [14, 34, 35, 39, 41, 52, 53, 55, 60], "store_arg": 14, "str": [1, 27, 33, 34, 35, 36, 37, 38, 39, 53, 57], "straight": 52, "straightforward": [14, 42], "strategi": 35, "stratifi": 45, "stream": 35, "streamer": 35, "strength": [42, 45, 69], "strerror": 37, "stretch": [29, 61], "strict": [30, 35, 37, 39, 52, 59, 69], "stricter": 52, "strictli": [35, 36, 39, 49, 52, 53, 59], "stride": [35, 39], "string": [4, 6, 14, 29, 30, 34, 35, 36, 37, 38, 39, 41, 44, 48, 49, 50, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 67, 69], "stringifi": [37, 53], "strip": [7, 8, 9, 11, 16, 18, 19, 20, 37, 63, 64, 65, 67], "strongli": [31, 33, 49, 53, 64], "stronglyentanglingansatz": [23, 30, 33, 39, 48, 53, 60], "stronglyentanglinglay": [33, 53, 60], "strpatht": [35, 37, 39, 53], "structur": [0, 13, 29, 34, 37, 39, 41, 43, 44, 49, 52, 53, 54, 57, 61, 62, 69], "studi": [29, 30, 44], "studio": 53, "style": [0, 29], "stylis": 29, "sub": [0, 34, 35, 37, 52, 53, 58, 68], "subbed_diagram": [2, 24, 58], "subcategori": 42, "subclass": [34, 35, 41, 49, 52, 57, 58], "subfold": 35, "subject": [13, 22, 35, 61, 62, 65], "subject_rel_pronoun": [14, 22, 61], "submit": 56, "submodul": [35, 39], "subpackag": 30, "subplot": [7, 8, 9, 16, 19, 20, 23, 63, 64, 65], "subscrib": 32, "subscript": 69, "subsect": [52, 69], "subsequ": [33, 34, 35, 39, 43, 53], "subset": [18, 35, 45, 64], "substanti": [29, 52, 60, 61], "substitut": [34, 37, 40, 52, 53], "substitute_nam": 34, "substr": 37, "subtre": [37, 53], "subword": 43, "succe": 22, "suffix": [37, 43], "suggest": 0, "suit": [29, 54], "suitabl": [29, 34, 37, 44, 53], "sukin": 13, "sum": [7, 8, 9, 11, 16, 18, 19, 20, 35, 63, 64, 65, 67], "sum_": 42, "sum_i": 34, "summar": 44, "summari": 14, "summaris": 69, "super": [2, 7, 41, 58, 63], "superconduct": 69, "superposit": [29, 44], "supertag": [13, 35, 48], "supervis": [13, 29, 40, 45, 48, 49, 50, 52, 55], "supplementari": 46, "suppli": [35, 37, 53], "support": [0, 14, 29, 35, 37, 41, 43, 49, 50, 52, 53, 55, 57, 62], "supports_gradient_checkpoint": 35, "suppress": [1, 5, 6, 10, 11, 23, 25, 30, 37, 53, 57, 61, 62, 66, 67], "suppress_except": [9, 37, 53, 65], "supremaci": 29, "sure": [0, 15, 35], "surfac": 27, "svg": 14, "svgz": 14, "swap": [1, 3, 14, 29, 34, 36, 48, 52, 53, 57, 59, 61], "swapcas": 37, "switch": [35, 37, 53], "sx": 34, "sxdg": 34, "sycamor": 34, "sym": [2, 11, 24, 58, 67], "sym_dict": [2, 24, 58], "symbol": [1, 2, 3, 8, 9, 15, 25, 29, 30, 33, 34, 37, 39, 40, 43, 48, 52, 53, 54, 55, 57, 58, 59, 62, 64, 65, 67], "symbol_map": 34, "symbol_substitut": [15, 34], "symbol_weight_map": [8, 30, 34, 53, 64], "symmetr": [29, 52, 59, 63], "symmetri": 29, "sympi": [2, 10, 11, 15, 24, 33, 34, 52, 53, 58, 66, 67], "symposium": 13, "sympysymbol": [39, 53], "synced_gpu": 35, "syntact": [13, 14, 29, 30, 48, 61, 62], "syntax": [29, 30, 43, 44, 46, 47, 49, 50, 52, 69], "system": [13, 29, 35, 44, 61, 64, 65], "t": [1, 3, 6, 7, 8, 9, 11, 14, 16, 18, 19, 20, 21, 25, 27, 29, 34, 35, 37, 39, 43, 53, 57, 58, 59, 62, 63, 64, 65, 67], "t5": 35, "t_destin": [35, 39], "tab": 37, "tabl": [34, 37, 69], "tabsiz": 37, "tag": [7, 8, 9, 16, 18, 19, 20, 35, 37, 43, 44, 46, 53, 63, 64, 65], "tag_label": 35, "tag_prob_threshold": [35, 37, 53], "tag_prob_threshold_strategi": [35, 37, 53], "tag_top_k": [35, 37, 53], "tagger": [35, 37, 48, 53], "taggeroutput": 35, "taggeroutputsent": 35, "tail": 35, "take": [0, 14, 18, 29, 33, 34, 35, 36, 37, 39, 43, 50, 53, 54, 55, 57, 61, 62, 64, 67, 69], "taken": [14, 27, 35, 43], "talk": [18, 62, 64], "tamara": 13, "target": [11, 33, 34, 35, 36, 37, 39, 53, 63, 64, 65, 67], "target_0": 34, "target_1": 34, "target_categori": [1, 34, 57], "target_qubit": 34, "target_typ": 34, "task": [29, 30, 35, 40, 42, 43, 50, 54, 62, 63, 65, 67, 69], "tasti": [7, 8, 11, 63, 64, 67], "tb": [34, 37], "tc": 35, "tdg": 34, "teach": 44, "team": [0, 9, 32, 65], "technic": [35, 39], "techniqu": [27, 43, 44, 45, 67], "technologi": [13, 69], "temm": 13, "templat": [2, 35, 36, 53, 58], "temporari": 35, "temporarili": [0, 35], "tens": 58, "tensor": [0, 1, 2, 4, 7, 8, 10, 11, 12, 14, 16, 18, 22, 29, 30, 33, 35, 39, 40, 41, 44, 47, 48, 50, 52, 53, 58, 60, 61, 62, 63, 64, 67, 68], "tensor_ansatz": [4, 60], "tensor_diagram": [4, 10, 41, 60, 66], "tensor_diagram_np": [10, 66], "tensoransatz": [0, 2, 4, 10, 24, 30, 33, 41, 48, 52, 53, 57, 60, 66], "tensorboard": [39, 53], "tensorflow": [34, 35, 46, 52], "tensoris": 63, "tensornetwork": [24, 34, 39, 52, 53], "term": [25, 27, 29, 34, 43, 52, 62], "termin": 52, "termsequencebox": 34, "test": [0, 7, 8, 9, 11, 16, 17, 19, 20, 27, 35, 36, 37, 43, 44, 45, 47, 52, 53, 55, 59, 63, 65, 67, 69], "test_acc": [7, 16, 19, 20, 63], "test_circuit": [7, 8, 11, 16, 18, 19, 20, 63, 64, 67, 69], "test_data": [7, 8, 11, 16, 18, 19, 20, 27, 63, 64, 67], "test_diagram": [7, 8, 11, 16, 18, 19, 20, 27, 63, 64, 67], "test_label": [7, 8, 16, 18, 19, 20, 63, 64], "test_notebook": [16, 18, 19, 20], "test_pair_circuit": [8, 18, 64], "test_pair_label": [8, 18, 64], "test_predict": [11, 67], "test_sampl": [8, 18, 64], "test_target": [11, 67], "tex": 34, "text": [2, 4, 6, 7, 8, 9, 13, 14, 16, 18, 19, 20, 25, 30, 34, 37, 38, 39, 44, 46, 52, 53, 58, 60, 62, 63, 64, 65], "text2diagram": [30, 49, 52, 53, 62], "textbook": 46, "textpad": 34, "textrm": 29, "textual": 42, "tf": 35, "tf_checkpoint_path": 35, "tf_model": 35, "th": [24, 39, 42, 53], "than": [0, 14, 27, 34, 35, 36, 39, 41, 42, 43, 44, 52, 53, 57, 60, 61, 64, 69], "thank": 52, "that_obj": 22, "that_subj": 22, "the__n": [10, 66], "theatric": 27, "thei": [0, 15, 18, 27, 29, 34, 35, 36, 37, 39, 43, 52, 53, 54, 57, 59, 62, 64, 66, 68], "them": [0, 1, 14, 27, 29, 34, 35, 36, 37, 41, 43, 44, 52, 53, 55, 57, 59, 61, 62, 64, 66, 67, 69], "theme": 52, "themselv": 43, "then_at": 34, "theoret": [13, 29, 44], "theori": [29, 44, 57, 59], "therefor": [23, 35, 39, 53, 54, 58], "thi": [0, 1, 6, 8, 14, 15, 17, 18, 20, 21, 22, 25, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "thing": 69, "think": 32, "third": [14, 27, 37], "those": [34, 35, 36, 53], "though": [35, 41], "thought": 57, "threaten": 0, "three": [33, 34, 37, 52, 53, 60, 62, 65, 69], "threshold": [37, 43, 53], "through": [25, 34, 35, 40, 41, 43, 50, 56, 61, 62, 65, 68], "throughout": [36, 52, 53], "throw": [35, 39], "thrown": [35, 39], "thu": [27, 34, 37, 44, 53, 54, 56, 58], "tie": 35, "tie_weight": 35, "tier": 35, "tif": 14, "tiff": 14, "tikz": 34, "time": [7, 8, 9, 14, 16, 18, 19, 20, 27, 34, 35, 36, 39, 41, 42, 43, 45, 52, 53, 61, 63, 64, 65, 67, 69], "time_per_epoch": [7, 8, 9, 16, 18, 19, 20, 63, 64, 65], "time_per_ev": [7, 8, 9, 16, 18, 19, 20, 63, 64, 65], "time_per_step": [7, 8, 9, 16, 18, 19, 20, 63, 64, 65], "timeli": 35, "timestep": 34, "tip": 35, "titl": [32, 37], "titlecas": 37, "tk": [1, 52, 57], "tk1": 34, "tk2": 34, "tk_circ": 34, "tk_circuit": 34, "tk_op": 34, "tk_op_to_pennylan": 34, "tk_to_qiskit": [4, 60], "tket": [1, 29, 39, 52, 53, 55, 57, 65, 67, 69], "tket_circuit": [4, 15, 60], "tket_model": 48, "tketmodel": [9, 19, 30, 39, 48, 52, 53, 55, 65, 69], "tn": [24, 34], "to_bettertransform": 35, "to_biclosed_diagram": 52, "to_diagram": [1, 3, 30, 34, 37, 53, 57, 59], "to_dict": 34, "to_discopi": 34, "to_empti": [35, 39], "to_fil": [30, 39, 53], "to_gif": 34, "to_grammar": [30, 37, 53], "to_json": [30, 34, 37, 52, 53], "to_latex_fil": 34, "to_left": 34, "to_pennylan": [8, 34, 64], "to_right": 34, "to_str": [30, 37, 53], "to_tikz": 34, "to_tk": [1, 4, 15, 34, 57, 60], "to_tn": 34, "todai": 35, "toffolibox": 34, "togeth": [29, 34, 36, 53, 57, 60, 64, 69], "toi": [27, 64], "tok": [27, 35], "tok_sent": [6, 25, 62], "token": [6, 14, 25, 27, 30, 35, 36, 37, 38, 44, 53, 58, 62, 64, 65], "token_id": 35, "token_type_id": 35, "tokenis": [6, 14, 30, 37, 43, 47, 52, 53], "tokenise_sent": [6, 25, 30, 38, 53, 62], "tokenizers_parallel": [9, 16, 19, 20, 65], "toler": 29, "too": [14, 37, 58], "tool": [29, 30, 44, 49, 52, 69], "toolkit": [14, 31, 46, 49, 52, 55, 58, 62, 68, 69], "top": [34, 52, 57], "topic": [18, 42, 46, 64], "torch": [7, 8, 16, 18, 24, 34, 35, 39, 41, 48, 52, 53, 63, 64], "torch_doctest_cuda1": [35, 39], "torch_dtyp": 35, "torchscript": 35, "total": [33, 35, 42, 53], "touch": 32, "toumi": [13, 32], "toumix": 52, "toward": 44, "tpng": 51, "tpu": 35, "tqdm": [23, 65], "track": [37, 49, 53], "trade": [14, 29, 36, 42, 53], "tradeoff": 42, "tradit": [35, 44, 59], "trail": 37, "train": [0, 7, 8, 9, 14, 23, 27, 29, 30, 32, 35, 36, 37, 41, 42, 43, 44, 45, 47, 50, 52, 53, 58, 61, 62], "train_circuit": [7, 8, 9, 11, 16, 18, 19, 20, 23, 63, 64, 65, 67, 69], "train_cost": [30, 53], "train_data": [7, 8, 9, 11, 16, 18, 19, 20, 27, 63, 64, 65, 67], "train_dataset": [7, 8, 9, 16, 18, 19, 20, 23, 39, 53, 63, 64, 65], "train_diagram": [7, 8, 9, 11, 16, 18, 19, 20, 23, 27, 63, 64, 65, 67], "train_dur": [30, 53], "train_epoch_cost": [7, 8, 9, 16, 19, 20, 23, 30, 53, 63, 64, 65], "train_epoch_dur": [30, 53], "train_eval_result": [7, 8, 9, 16, 19, 20, 30, 53, 63, 64, 65], "train_label": [7, 8, 9, 16, 18, 19, 20, 63, 64, 65], "train_pair_circuit": [8, 18, 64], "train_pair_dataset": [8, 18, 64], "train_pair_label": [8, 18, 64], "train_sampl": [8, 18, 64], "train_target": [11, 67], "trainabl": [29, 35], "trainer": [0, 7, 8, 9, 18, 29, 30, 39, 47, 48, 50, 52, 53, 55, 69], "training_loss": [11, 67], "training_step": [30, 39, 53], "trang": 23, "transact": [13, 52], "transcrib": 44, "transform": [13, 18, 29, 34, 35, 48, 50, 57, 61, 64], "transit": [27, 29, 35, 39, 54, 57], "transition_scor": 35, "translat": [29, 34, 35, 37, 44, 46, 49, 52, 69], "transpar": 61, "transpos": [34, 52], "trap": 69, "trapezium": [3, 59], "treat": [34, 41, 57], "tree": [7, 8, 9, 14, 16, 18, 19, 20, 29, 30, 35, 37, 44, 47, 48, 49, 50, 52, 53, 57, 63, 64, 65, 69], "tree2diagram": [30, 37, 52, 53], "tree_diagram": [6, 62], "tree_read": [37, 48, 53], "treebank": [13, 29, 49], "treeread": [6, 14, 26, 30, 37, 41, 48, 52, 53, 62], "treereadermod": [6, 26, 30, 37, 48, 52, 53, 62], "tri": [35, 39, 69], "trigger": [52, 56], "trivial": [37, 53, 60], "troubleshoot": [30, 52], "true": [1, 6, 7, 8, 9, 16, 18, 19, 20, 23, 25, 27, 29, 34, 35, 37, 39, 41, 42, 52, 53, 55, 57, 62, 63, 64, 65, 69], "truncat": [34, 37], "truth": [39, 53], "try": [0, 21, 34, 35, 37, 43, 52], "tune": [35, 45], "tupl": [33, 34, 35, 36, 37, 39, 53], "ture": 44, "turn": [7, 8, 9, 16, 18, 19, 20, 34, 37, 53, 60, 62, 63, 64, 65], "tutori": [0, 12, 32, 40, 41, 42, 43, 44, 45, 46, 52, 57, 58, 62, 64, 65], "twice": 34, "twist": [1, 12], "twist_functor": [1, 57], "twisted_cap_factori": [1, 57], "twisted_cup_factori": [1, 57], "twisted_diagram": [1, 57], "twistedbox": [1, 57], "twistedcap": [1, 57], "twistedcup": [1, 57], "twisteddiagram": [1, 57], "twistedlay": [1, 57], "twistedswap": [1, 57], "twistedti": [1, 57], "two": [8, 14, 25, 27, 29, 33, 34, 35, 37, 39, 41, 42, 52, 53, 57, 59, 60, 61, 62, 63, 64, 67], "two_qubit_gate_depth": 34, "txt": [7, 8, 9, 11, 14, 16, 18, 19, 20, 63, 64, 65, 67], "ty": [1, 3, 5, 33, 34, 35, 36, 37, 48, 53, 57, 59, 61], "ty_d2l": 34, "ty_l2d": 34, "typ": 27, "type": [0, 1, 2, 3, 4, 10, 13, 14, 16, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 43, 45, 48, 49, 52, 53, 54, 57, 58, 59, 60, 61, 62, 66], "type_changing_rul": 35, "type_raising_dep_var": 35, "type_raising_rul": 35, "typeerror": 21, "typic": [27, 30, 34, 35, 39, 43, 45, 58], "typo": [0, 52], "u": [14, 18, 32, 34, 37, 53, 61, 63, 64], "u1": 34, "u2": 34, "u3": 34, "uantum": 32, "uk": 13, "ultim": 69, "um": 34, "uml": [0, 48, 51, 52, 58, 68], "un": [34, 43], "unaccept": 0, "unari": [14, 30, 35, 36, 37, 52, 53], "unaryboxconstructor": 52, "unaryswap": 52, "unavail": 52, "unbeliev": 43, "uncas": [35, 37], "uncertainti": 69, "unchang": [35, 39], "uncontract": 57, "uncurri": [36, 53], "undefin": [35, 39], "under": [27, 30, 32, 34, 35, 37, 39, 48, 49, 53, 55], "underli": [35, 37, 53, 61], "understand": [0, 12, 43, 44, 45, 46, 59], "understood": 43, "undesir": 29, "unexpect": [35, 39], "unexpected_kei": [35, 39], "unfilled_dep": 35, "unibox": [37, 53, 62], "unicod": [14, 34, 37], "unicodeencodeerror": 37, "unifi": [34, 36, 37, 52, 53], "uniform": [52, 63], "unifycodomainrewrit": [5, 30, 36, 48, 52, 53, 61], "union": [34, 35, 52], "uniqu": [34, 43, 58, 62], "unit": [1, 3, 25, 29, 34, 35, 43, 50, 54, 57, 59, 62], "unit_id": 34, "unitari": [1, 29, 33, 34, 41, 52, 53, 57, 58, 60], "unitary1qbox": 34, "unitary2qbox": 34, "unitary3qbox": 34, "unitarybox": 34, "unitaryhack": 52, "unitid": 34, "unitor": 59, "univers": [13, 35], "unk": [27, 36, 37, 43, 53], "unk_token": [36, 53], "unk_wrd_rul": 27, "unknown": [30, 35, 36, 37, 47, 52, 53], "unknownwordrewriterul": 27, "unknownwordsrewriterul": [27, 30, 36, 43, 48, 52, 53], "unlabel": 43, "unless": [35, 37, 39], "unlik": 69, "unnecessari": [0, 52, 59], "unnorm": [8, 34, 35, 64], "unpack": 34, "unpermut": 57, "unpickl": 52, "unreli": 69, "unrepresent": 37, "unrestrict": 61, "unseen": [27, 43, 44, 45], "unset": 35, "unshap": 57, "unsign": 34, "unspecifi": 35, "unstructur": 43, "unsupport": [37, 40, 53], "untest": 0, "until": [35, 37, 52, 53, 57], "untokenis": [38, 53], "untouch": [34, 37], "unus": [34, 39, 52, 53], "unwind": 34, "up": [0, 29, 34, 35, 39, 41, 53, 57, 59, 60], "updat": [34, 35, 39, 40, 52, 53, 55, 67], "update_hyper_param": [30, 39, 53], "upenn": 49, "upgrad": [34, 56], "upload": [35, 50], "upper": [34, 37, 39, 53], "uppercas": 37, "upward": [29, 34], "url": [13, 35, 37, 52, 53], "urlerror": [37, 53], "us": [0, 6, 8, 9, 11, 22, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "usa": 13, "usabl": 37, "usag": [30, 35, 43, 52, 55], "usage_guid": 35, "use_ascii": [34, 37, 53], "use_at_separ": 34, "use_jax": [20, 39, 53], "use_jit": [20, 23, 39, 41, 52, 53], "use_model_unary_rul": [37, 53], "use_safetensor": 35, "use_slash": [37, 53], "use_temp_dir": 35, "use_tensorboard": [8, 18, 39, 53, 64], "user": [14, 35, 37, 39, 41, 49, 52, 53, 57, 60, 61, 68, 69], "user_email": [8, 64, 69], "usual": [27, 29, 39, 42, 43, 53, 69], "utf": 37, "util": [35, 39, 48, 61], "utilis": 52, "v": [14, 30, 34, 51], "v1": 13, "v5": 35, "va": [9, 65], "val_acc": [9, 65], "val_circuit": [7, 9, 63, 65], "val_cost": [7, 8, 9, 16, 19, 20, 30, 53, 63, 64, 65], "val_data": [7, 9, 63, 65], "val_dataset": [7, 8, 9, 18, 19, 20, 39, 53, 63, 64, 65], "val_diagram": [7, 9, 63, 65], "val_dur": [30, 53], "val_eval_result": [7, 8, 9, 16, 19, 20, 30, 53, 63, 64, 65], "val_label": [7, 9, 63, 65], "valid": [7, 8, 9, 14, 16, 18, 19, 20, 30, 34, 35, 36, 37, 39, 44, 52, 53, 63, 64, 65, 69], "valid_connect": 34, "validation_step": [30, 39, 53], "valu": [0, 1, 2, 14, 23, 24, 29, 34, 35, 37, 39, 41, 53, 55, 57, 63, 64, 69], "valueerror": [34, 36, 37, 39, 53], "var": [14, 35, 39], "var_map": 35, "vari": [35, 44, 54], "variabl": [0, 34, 35], "variant": [35, 37, 39, 53], "varieti": [14, 29, 42, 43, 45, 48, 55], "variou": [29, 41, 43, 44, 49, 52, 60, 62], "vast": 46, "vdg": 34, "ve": 14, "vector": [29, 33, 34, 35, 39, 41, 52, 53, 54, 57, 62], "verb": [27, 29, 43, 57, 58, 61, 62], "verbos": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 16, 18, 19, 20, 23, 25, 35, 37, 39, 53, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67], "verbositylevel": [30, 37, 39, 53], "veri": [1, 12, 35, 43, 58, 60, 61, 64, 67], "versa": [42, 59], "version": [13, 14, 29, 34, 35, 37, 39, 42, 52, 53, 57, 67], "vertex": [39, 53], "vertic": [29, 34, 37, 39, 53], "very_ar": [1, 57], "very_functor": [1, 57], "very_ob": [1, 57], "via": [14, 34, 37, 41, 51, 61, 62, 68, 69], "vicari": 13, "vice": [42, 59], "video": 46, "view": [15, 35, 39, 52, 54], "virtual": 44, "visibl": 61, "visual": [52, 53], "visualis": [34, 39, 53, 63, 64, 65], "vital": 42, "vocab": [11, 67], "vocab_s": 35, "vocabulari": [11, 14, 27, 35, 36, 40, 43, 53], "voic": 44, "vojt": 13, "volta": 35, "volum": [13, 42, 44], "w": [2, 11, 13, 14, 39, 53, 58, 67], "wa": [2, 27, 29, 35, 43, 52, 56, 58, 59, 61, 64], "wai": [0, 14, 29, 32, 34, 35, 40, 42, 43, 44, 54, 57, 59, 61, 62, 64, 69], "walk": [4, 5, 6, 10, 26, 60, 61, 62, 66], "walks__n": [10, 66], "want": [31, 32, 35, 40, 43, 65], "warn": [2, 9, 10, 11, 19, 20, 35, 39, 53, 58, 65, 66, 67], "warn_if_padding_and_no_attention_mask": 35, "wasm": 34, "wasmfilehandl": 34, "wasmstat": 34, "we": [0, 1, 2, 6, 14, 18, 22, 23, 25, 27, 29, 31, 34, 35, 39, 40, 41, 44, 46, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69], "weak": [42, 45], "wealth": 46, "web": [30, 37, 44, 49, 52, 53], "web_pars": 48, "webpars": [30, 37, 48, 52, 53, 56], "webparseerror": [30, 37, 53], "websit": [43, 46], "week": 0, "weight": [8, 18, 29, 30, 34, 35, 37, 39, 53, 55, 63, 64], "welcom": 0, "well": [0, 29, 34, 35, 37, 39, 42, 44, 45, 48, 49, 53, 54, 59], "were": [2, 14, 18, 27, 34, 35, 43, 52, 58, 64], "what": [25, 30, 35, 37, 53, 58, 62, 69], "when": [0, 1, 14, 25, 27, 33, 34, 35, 36, 37, 39, 40, 42, 43, 49, 52, 53, 54, 56, 57, 59, 62, 64, 66, 67, 69], "whenev": [34, 69], "where": [14, 27, 29, 32, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 52, 53, 57, 59, 60, 62, 63, 64, 65, 69], "whether": [18, 34, 35, 36, 37, 39, 44, 53, 64, 65], "which": [0, 8, 14, 18, 27, 29, 31, 33, 34, 35, 36, 37, 39, 41, 42, 43, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69], "while": [14, 29, 34, 35, 37, 39, 40, 41, 43, 44, 45, 50, 53, 54, 55, 58, 61, 62, 69], "white": [25, 34, 62], "whitespac": [25, 37, 52, 53, 62], "who": [0, 49, 52, 68], "whole": [34, 35, 37, 39, 52, 53], "whose": [0, 29, 34, 35, 37, 39], "wide": [43, 44, 46, 49, 55, 69], "width": [1, 34, 37, 57], "wiki": 0, "wind": 34, "window": [32, 52], "wingcod": 52, "wire": [1, 18, 22, 29, 33, 34, 36, 37, 52, 53, 54, 57, 58, 59, 60, 61, 64, 65, 66], "wire_endpoint": 34, "wireendpoint": 34, "wise": 58, "wish": 0, "with_kwarg": [35, 39], "with_traceback": [34, 37], "within": [29, 34, 35, 37, 39, 43, 53, 58, 61, 65], "without": [0, 34, 35, 36, 39, 52, 53, 58, 61, 62, 64, 67], "without_trivial_unary_rul": [30, 37, 53], "wolf": [1, 57], "woman": [7, 8, 11, 63, 64, 67], "won": [35, 39], "word": [1, 2, 5, 13, 14, 22, 29, 30, 34, 35, 36, 37, 40, 44, 47, 48, 49, 50, 52, 53, 54, 57, 58, 60, 61, 67], "word_mask": 35, "word_sequence_read": [37, 48], "word_spac": [34, 37, 53], "word_typ": [37, 53], "work": [25, 27, 29, 30, 31, 34, 35, 37, 39, 40, 48, 53, 54, 56, 62], "workaround": 56, "workflow": 30, "workshop": 13, "world": [42, 44], "worth": [6, 25, 43, 57, 62], "would": [0, 14, 25, 27, 35, 37, 39, 42, 43, 52, 53, 61, 62, 64, 68, 69], "wq": [37, 53], "wrap": [35, 39, 52], "wrapper": [37, 49, 53], "write": [14, 34, 54], "written": [14, 43], "wrongli": 43, "www": 13, "x": [1, 3, 8, 11, 18, 33, 34, 35, 37, 39, 52, 53, 57, 59, 64, 67], "x00": 35, "x_i": 42, "xanadu": 29, "xatol": [39, 53], "xavier_uniform": 52, "xdg_cache_hom": [37, 53], "xdoctest": [35, 39], "xmlcharrefreplac": 37, "xor": [18, 34, 64], "xor_label": [8, 64], "xor_model": [8, 18, 64], "xor_net": [8, 18, 64], "xor_tensor": [8, 64], "xorsentencemodel": [8, 18, 64], "xpu": [35, 39], "xx": 34, "xxphase": 34, "xxphase3": 34, "xxx": 35, "xy": [37, 53], "y": [2, 3, 7, 8, 9, 14, 16, 18, 19, 20, 34, 35, 37, 39, 49, 53, 58, 59, 63, 64, 65], "y_hat": [7, 8, 9, 16, 18, 19, 20, 39, 53, 63, 64, 65], "y_i": 42, "y_pred": [23, 39, 53], "y_true": [39, 53], "yaml": 14, "yank": 29, "year": 32, "yet": [29, 54], "yeung": [13, 32], "yield": [34, 35, 37, 39, 53], "yk21": [13, 29, 49, 57, 62], "ynm17": [13, 29, 49], "yoshikawa": 13, "you": [0, 1, 12, 14, 15, 27, 31, 32, 34, 35, 39, 41, 43, 45, 51, 55, 56, 57, 58, 61, 62, 64, 65, 66, 69], "your": [0, 5, 14, 15, 27, 32, 35, 36, 39, 41, 45, 53, 55, 58, 61, 62, 64, 69], "yourself": [12, 14], "ython": 32, "yuji": 13, "yy": 34, "yyi": 35, "yyphas": 34, "z": [23, 34, 35, 37, 52, 53], "zero": [34, 35, 37, 39, 53], "zero_grad": [8, 18, 30, 35, 39, 53, 64], "zfill": 37, "zip": [8, 9, 18, 35, 64, 65], "zoom": 68, "zz": 34, "zzmax": 34, "zzphase": 34, "\u00e7": 13, "\u00ed": 13, "\u00f3": 13, "\u010d": 13, "\u011b": 13, "\u03c0": [39, 53]}, "titles": ["Contributing to lambeq", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Advanced: low-level lambeq", "Bibliography", "Command-line interface", "Circuit", "Classical pipeline", "Parser", "Training hybrid models using the Pennylane backend", "Quantum pipeline using the Quantum Trainer", "Quantum pipeline using JAX backend", "Reader", "Rewrite", "Rotosolve optimizer", "Tensor", "Tokenisation", "Tree reader", "Handling unknown words", "Index", "Glossary", "&lt;no title&gt;", "Installation", "What is lambeq?", "lambeq.ansatz", "lambeq.backend", "lambeq.bobcat", "lambeq.rewrite", "lambeq.text2diagram", "lambeq.tokeniser", "lambeq.training", "Advanced: Manual training", "Choosing a model", "Text classification", "Working with text data", "Introduction", "Machine learning best practices", "References for further study", "Examples", "Subpackages", "Syntactic parsing", "Pipeline", "Creating PNG files", "Release notes", "lambeq package", "String diagrams", "Step 4: Training", "Troubleshooting", "DisCoCat in lambeq", "Advanced: Extending lambeq", "Monoidal categories in lambeq", "Step 3. Parameterisation", "Step 2. Diagram rewriting", "Step 1. Sentence input", "Training: Classical case", "Training: Hybrid case", "Training: Quantum case", "Introduction to symbols", "A complete use case", "Class diagrams", "lambeq use cases"], "titleterms": {"0": 52, "1": [52, 57, 62], "101": 30, "2": [52, 57, 61], "3": [52, 60], "4": [52, 55], "5": 52, "6": 52, "7": 52, "8": 52, "A": 67, "accuraci": [18, 64], "ad": 63, "advanc": [12, 40, 58], "adverb": 22, "an": 0, "analys": 64, "ansatz": [33, 48, 58, 68], "ans\u00e4tz": [14, 58], "applic": 44, "argument": 14, "auxiliari": 22, "avail": 53, "backend": [18, 20, 34, 41, 48, 68], "bag": 62, "base": [27, 62, 69], "basic": 14, "best": 45, "bibliographi": 13, "binari": 42, "bobcat": [35, 48, 68], "box": 61, "case": [41, 60, 63, 64, 65, 67, 69], "categori": [34, 59], "ccgbank": 49, "choos": 41, "circuit": [15, 16, 18, 19, 20, 23, 57, 64, 65, 66, 67, 69], "circuitansatz": 58, "cite": 32, "class": [42, 68], "classic": [16, 57, 60, 63, 69], "classif": 42, "code": 0, "comb": 58, "command": 14, "common": 69, "complet": 67, "comput": [44, 64, 69], "conduct": 0, "configur": [14, 41], "connect": 54, "connector": 22, "contribut": [0, 58], "convert": 34, "coordin": 22, "corpora": 43, "cours": 46, "creat": [16, 18, 19, 20, 23, 51, 58, 63, 64, 65, 67], "cross": 45, "cup": [18, 19, 20, 22, 62], "curri": 22, "custom": 63, "data": [16, 18, 19, 20, 43, 63, 64, 65, 67], "dataset": [18, 43, 63, 64, 65], "defin": [16, 19, 20, 23, 63, 64, 65, 67], "depccg": 31, "detail": 14, "determin": [18, 22], "diagram": [16, 18, 19, 20, 23, 54, 61, 63, 64, 65, 67, 68], "differ": 41, "discocat": [57, 62], "discopi": 34, "document": 25, "draw": 34, "dure": 56, "error": 56, "evalu": [16, 19, 20, 23, 42, 63, 64, 65, 67, 69], "exact": 69, "exampl": [47, 57, 58], "extend": 58, "extern": 30, "file": 51, "filter": 65, "final": 23, "free": 27, "from": 66, "function": [42, 67], "functor": [22, 57, 58], "further": 46, "get": 30, "glossari": 29, "grammar": [34, 54, 57], "guid": 30, "handl": [27, 43], "hardwar": 69, "how": 32, "hybrid": [18, 64, 69], "i": 32, "index": 28, "inf": 56, "initi": [16, 19, 20, 23], "initialis": [18, 63, 64, 65], "input": [16, 62, 63, 64, 65, 67], "instal": 31, "instanti": [63, 64, 65], "interfac": [14, 34], "intern": 64, "introduct": [44, 66], "issu": 0, "jax": 20, "lambeq": [0, 12, 32, 33, 34, 35, 36, 37, 38, 39, 48, 53, 57, 58, 59, 68, 69], "layer": 63, "learn": 45, "level": [12, 61], "licenc": 32, "line": 14, "lingust": 44, "link": 30, "log": [18, 64], "loss": [42, 64, 65, 67], "low": 12, "machin": 45, "make": [18, 64], "manual": 40, "matrix": 60, "metric": [16, 19, 20, 23, 42, 63, 64, 65], "mode": 14, "model": [18, 27, 41, 62, 63, 64, 65, 69], "monoid": 59, "motiv": 54, "multi": 42, "name": 14, "nan": 56, "negat": 58, "network": [54, 57], "nlp": [30, 44], "non": 69, "note": [34, 52], "numer": 34, "numerical_backend": 34, "numpymodel": 41, "onlin": 46, "open": 0, "optim": 23, "option": [14, 53], "organis": 46, "other": 14, "output": [14, 23], "packag": 53, "pair": [18, 64], "paramet": 18, "parameteris": [16, 19, 20, 23, 60, 63, 64, 65, 67], "pars": 49, "parser": [14, 17], "past": 58, "pennylan": [18, 34], "pennylanemodel": 41, "phrase": 22, "pipelin": [16, 19, 20, 50], "platform": 69, "png": 51, "posit": [14, 58], "practic": 45, "pre": [43, 62], "pregroup": [14, 54, 57], "prepar": [18, 63, 64, 65, 67], "preposit": 22, "process": [43, 62], "product": 60, "pronoun": 22, "pull": 0, "pure": 18, "pytorch": [18, 64], "pytorchmodel": 41, "pytorchtrain": 18, "qnlp": 44, "quantum": [18, 19, 20, 34, 57, 60, 64, 65, 67, 69], "read": [18, 19, 20, 46, 49], "reader": [14, 21, 26, 58, 62], "real": [58, 64], "refer": [30, 46], "rel": 22, "releas": 52, "remov": [18, 19, 20, 22, 34], "represent": 64, "request": 0, "result": [16, 19, 20, 23, 63, 64, 65], "rewrit": [14, 22, 36, 48, 58, 61, 68], "rewriterul": 58, "rigid": 59, "rotosolv": 23, "rule": [14, 22, 58, 61], "run": 64, "sentenc": [25, 62], "sequenc": 62, "shot": 69, "show": [16, 19, 20, 23], "simplerewriterul": 58, "simplifi": [64, 65], "simul": 69, "snake": 34, "snake_remov": 34, "softwar": 46, "spider": 62, "split": 25, "ssl": 56, "stair": 62, "standard": [18, 64], "start": [0, 30], "state": 60, "step": [55, 60, 61, 62], "strict": 14, "string": 54, "studi": 46, "subpackag": 48, "support": [31, 32], "symbol": 66, "syntact": 49, "syntax": [27, 62], "task": 44, "tensor": [24, 34, 54, 57, 66, 69], "tensoransatz": 58, "test": [18, 64], "text": [42, 43], "text2diagram": [37, 48, 68], "tk": 34, "tket": 34, "tketmodel": 41, "token": 43, "tokenis": [25, 38, 48, 62, 68], "tool": 46, "toolkit": 30, "train": [16, 18, 19, 20, 39, 40, 48, 55, 56, 63, 64, 65, 67, 68, 69], "trainer": [16, 19, 20, 23, 63, 64, 65], "tree": [26, 62], "trivial": 0, "troubleshoot": 56, "tutori": 30, "twist": 57, "typic": 44, "unknown": [27, 43], "us": [14, 18, 19, 20, 41, 64, 67, 69], "usag": 14, "user": [30, 32], "v": 42, "valid": 45, "valu": 58, "veri": 57, "vocabulari": 67, "what": 32, "where": 0, "window": 56, "word": [25, 27, 43, 62], "work": [43, 67], "workflow": 44}})