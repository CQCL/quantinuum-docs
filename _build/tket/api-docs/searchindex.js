Search.setIndex({"alltitles": {"0.0.1 (July 2018)": [[2, "july-2018"]], "0.1.0 (December 2018)": [[2, "december-2018"]], "0.1.2 (February 2019)": [[2, "february-2019"]], "0.1.3 (March 2019)": [[2, "march-2019"]], "0.1.4 (April 2019)": [[2, "id36"]], "0.1.5 (April 2019)": [[2, "id35"]], "0.1.6 (April 2019)": [[2, "april-2019"]], "0.10.0 (April 2021)": [[2, "april-2021"]], "0.10.1 (May 2021)": [[2, "id29"]], "0.11.0 (May 2021)": [[2, "may-2021"]], "0.12.0 (June 2021)": [[2, "june-2021"]], "0.13.0 (July 2021)": [[2, "july-2021"]], "0.14.0 (September 2021)": [[2, "id28"]], "0.15.0 (September 2021)": [[2, "september-2021"]], "0.16.0 (October 2021)": [[2, "october-2021"]], "0.17.0 (November 2021)": [[2, "november-2021"]], "0.18.0 (January 2022)": [[2, "january-2022"]], "0.19.0 (February 2022)": [[2, "id27"]], "0.19.1 (February 2022)": [[2, "id26"]], "0.19.2 (February 2022)": [[2, "february-2022"]], "0.2.0 (June 2019)": [[2, "id34"]], "0.2.1 (June 2019)": [[2, "id33"]], "0.2.2 (June 2019)": [[2, "june-2019"]], "0.2.3 (July 2019)": [[2, "july-2019"]], "0.3.0 (August 2019)": [[2, "august-2019"]], "0.4.0 (November 2019)": [[2, "november-2019"]], "0.4.1 (December 2019)": [[2, "december-2019"]], "0.5.2 (April 2020)": [[2, "april-2020"]], "0.5.4 (May 2020)": [[2, "may-2020"]], "0.5.5 (June 2020)": [[2, "june-2020"]], "0.5.7 (August 2020)": [[2, "august-2020"]], "0.6.0 (September 2020)": [[2, "september-2020"]], "0.6.1 (October 2020)": [[2, "october-2020"]], "0.7.0 (February 2021)": [[2, "id32"]], "0.7.1 (February 2021)": [[2, "id31"]], "0.7.2 (February 2021)": [[2, "february-2021"]], "0.8.0 (March 2021)": [[2, "id30"]], "0.9.0 (March 2021)": [[2, "march-2021"]], "1.0.0 (March 2022)": [[2, "id25"]], "1.0.1 (March 2022)": [[2, "march-2022"]], "1.1.0 (April 2022)": [[2, "april-2022"]], "1.10.0 (December 2022)": [[2, "december-2022"]], "1.11.0 (January 2023)": [[2, "id15"]], "1.11.1 (January 2023)": [[2, "january-2023"]], "1.13.0 (March 2023)": [[2, "id14"]], "1.13.1 (March 2023)": [[2, "id13"]], "1.13.2 (March 2023)": [[2, "march-2023"]], "1.14.0 (April 2023)": [[2, "april-2023"]], "1.15.0 (May 2023)": [[2, "may-2023"]], "1.16.0 (June 2023)": [[2, "june-2023"]], "1.17.0 (July 2023)": [[2, "id12"]], "1.17.1 (July 2023)": [[2, "july-2023"]], "1.18.0 (August 2023)": [[2, "august-2023"]], "1.19.0 (September 2023)": [[2, "id11"]], "1.19.1 (September 2023)": [[2, "id10"]], "1.2.1 (May 2022)": [[2, "id24"]], "1.2.2 (May 2022)": [[2, "may-2022"]], "1.20.0 (September 2023)": [[2, "id9"]], "1.20.1 (September 2023)": [[2, "september-2023"]], "1.21.0 (October 2023)": [[2, "october-2023"]], "1.22.0 (November 2023)": [[2, "november-2023"]], "1.23.0 (January 2024)": [[2, "id8"]], "1.24.0 (January 2024)": [[2, "january-2024"]], "1.25.0 (February 2024)": [[2, "february-2024"]], "1.26.0 (March 2024)": [[2, "march-2024"]], "1.27.0 (April 2024)": [[2, "april-2024"]], "1.28.0 (May 2024)": [[2, "may-2024"]], "1.29.0 (June 2024)": [[2, "id7"]], "1.29.1 (June 2024)": [[2, "id6"]], "1.29.2 (June 2024)": [[2, "june-2024"]], "1.3.0 (June 2022)": [[2, "june-2022"]], "1.30.0 (July 2024)": [[2, "july-2024"]], "1.31.0 (August 2024)": [[2, "id5"]], "1.31.1 (August 2024)": [[2, "august-2024"]], "1.32.0 (September 2024)": [[2, "september-2024"]], "1.33.0 (October 2024)": [[2, "id4"]], "1.33.1 (October 2024)": [[2, "id3"]], "1.34.0 (October 2024)": [[2, "october-2024"]], "1.35.0 (November 2024)": [[2, "id2"]], "1.36.0 (November 2024)": [[2, "november-2024"]], "1.37.0 (December 2024)": [[2, "december-2024"]], "1.38.0 (January 2025)": [[2, "id1"]], "1.39.0 (January 2025)": [[2, "january-2025"]], "1.4.1 (July 2022)": [[2, "id23"]], "1.4.2 (July 2022)": [[2, "id22"]], "1.4.3 (July 2022)": [[2, "july-2022"]], "1.40.0 (February 2025)": [[2, "february-2025"]], "1.5.0 (August 2022)": [[2, "id21"]], "1.5.1 (August 2022)": [[2, "id20"]], "1.5.2 (August 2022)": [[2, "august-2022"]], "1.6.0 (September 2022)": [[2, "id19"]], "1.6.1 (September 2022)": [[2, "september-2022"]], "1.7.3 (October 2022)": [[2, "october-2022"]], "1.8.0 (November 2022)": [[2, "id18"]], "1.8.1 (November 2022)": [[2, "id17"]], "1.9.0 (November 2022)": [[2, "november-2022"]], "1.9.1 (December 2022)": [[2, "id16"]], "API Reference:": [[11, null]], "Building TKET from source": [[12, "building-tket-from-source"]], "Can I build TKET from source without using conan?": [[12, "can-i-build-tket-from-source-without-using-conan"]], "Changelog": [[2, null]], "Classes:": [[3, null]], "Clifford Simulators": [[8, "clifford-simulators"]], "Cloud Access": [[8, "cloud-access"]], "Convenience methods for appending gates": [[4, "convenience-methods-for-appending-gates"]], "Density Matrix Simulators": [[8, "density-matrix-simulators"]], "Do all versions of pytket work with Windows?": [[12, "do-all-versions-of-pytket-work-with-windows"]], "Emulators": [[8, "emulators"]], "Example usage:": [[7, "example-usage"]], "Extension packages": [[8, null]], "Extensions": [[11, "extensions"]], "Extensions:": [[8, null]], "General Installation Instructions": [[12, "general-installation-instructions"]], "Getting Started": [[10, null]], "How to cite": [[11, "how-to-cite"]], "Indices and tables": [[11, "indices-and-tables"]], "Installation FAQs": [[12, "installation-faqs"]], "Installation Troubleshooting": [[12, null]], "Is there a build of pytket for my system?": [[12, "is-there-a-build-of-pytket-for-my-system"]], "I\u2019ve tried the recommended actions here and it still won\u2019t work! What can I do?": [[12, "i-ve-tried-the-recommended-actions-here-and-it-still-won-t-work-what-can-i-do"]], "Known issue installing pytket (Added 2nd August 2024)": [[11, null]], "LICENCE": [[11, "licence"]], "Methods for appending circuit boxes": [[4, "methods-for-appending-circuit-boxes"]], "Other": [[8, "other"]], "Overview:": [[11, null]], "QPUs": [[8, "qpus"]], "Qiskit to TKET Conversion": [[9, "qiskit-to-tket-conversion"]], "Rebases": [[9, "rebases"]], "Statevector Simulators": [[8, "statevector-simulators"]], "TKET FAQs": [[9, null]], "Types of Backend": [[8, "types-of-backend"]], "Unitary Simulators": [[8, "unitary-simulators"]], "Unitary Synthesis": [[9, "unitary-synthesis"]], "User Support": [[11, "user-support"]], "When I ran pip install pytket, I could only get an old version. What gives?": [[12, "when-i-ran-pip-install-pytket-i-could-only-get-an-old-version-what-gives"]], "pytket": [[11, null]], "pytket extensions:": [[11, null]], "pytket installed but modules mentioned in the docs could not be found. Why?": [[12, "pytket-installed-but-modules-mentioned-in-the-docs-could-not-be-found-why"]], "pytket.architecture": [[0, null]], "pytket.backends": [[1, null]], "pytket.backends.backend": [[1, "pytket-backends-backend"]], "pytket.backends.backendinfo": [[1, "module-pytket.backends.backendinfo"]], "pytket.backends.backendresult": [[1, "module-pytket.backends.backendresult"]], "pytket.backends.resulthandle": [[1, "module-pytket.backends.resulthandle"]], "pytket.backends.status": [[1, "module-pytket.backends.status"]], "pytket.circuit": [[3, null]], "pytket.circuit.Circuit": [[4, null]], "pytket.circuit.OpType": [[15, null]], "pytket.circuit.display": [[7, null]], "pytket.circuit.logic_exp": [[5, null]], "pytket.config": [[6, null]], "pytket.logging": [[13, null]], "pytket.mapping": [[14, null]], "pytket.partition": [[16, null]], "pytket.passes": [[17, null]], "pytket.passes.script": [[17, "module-pytket.passes.script"]], "pytket.pauli": [[18, null]], "pytket.placement": [[19, null]], "pytket.predicates": [[20, null]], "pytket.qasm": [[21, null]], "pytket.quipper": [[22, null]], "pytket.tableau": [[23, null]], "pytket.tailoring": [[24, null]], "pytket.transform": [[25, null]], "pytket.unit_id": [[26, null]], "pytket.utils": [[27, null]], "pytket.utils.distribution": [[27, "pytket-utils-distribution"]], "pytket.utils.spam": [[27, "module-pytket.utils.spam"]], "pytket.utils.stats": [[27, "module-pytket.utils.stats"]], "pytket.utils.symbolic": [[27, "module-pytket.utils.symbolic"]], "pytket.wasm": [[28, null]], "pytket.zx": [[29, null]]}, "docnames": ["architecture", "backends", "changelog", "circuit", "circuit_class", "classical", "config", "display", "extensions", "faqs", "getting_started", "index", "install", "logging", "mapping", "optype", "partition", "passes", "pauli", "placement", "predicates", "qasm", "quipper", "tableau", "tailoring", "transform", "unit_id", "utils", "wasm", "zx"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["architecture.rst", "backends.rst", "changelog.rst", "circuit.rst", "circuit_class.rst", "classical.rst", "config.rst", "display.md", "extensions.md", "faqs.rst", "getting_started.rst", "index.rst", "install.rst", "logging.rst", "mapping.rst", "optype.rst", "partition.rst", "passes.rst", "pauli.rst", "placement.rst", "predicates.rst", "qasm.rst", "quipper.rst", "tableau.rst", "tailoring.rst", "transform.rst", "unit_id.rst", "utils.rst", "wasm.rst", "zx.rst"], "indexentries": {"__add__() (pytket.utils.distribution.empiricaldistribution method)": [[27, "pytket.utils.distribution.EmpiricalDistribution.__add__", false]], "__eq__() (pytket.utils.distribution.empiricaldistribution method)": [[27, "pytket.utils.distribution.EmpiricalDistribution.__eq__", false]], "__getitem__() (pytket.utils.distribution.empiricaldistribution method)": [[27, "pytket.utils.distribution.EmpiricalDistribution.__getitem__", false]], "__getitem__() (pytket.utils.distribution.probabilitydistribution method)": [[27, "pytket.utils.distribution.ProbabilityDistribution.__getitem__", false]], "__init__() (pytket.architecture.architecture method)": [[0, "pytket.architecture.Architecture.__init__", false]], "__init__() (pytket.architecture.fullyconnected method)": [[0, "pytket.architecture.FullyConnected.__init__", false]], "__init__() (pytket.architecture.ringarch method)": [[0, "pytket.architecture.RingArch.__init__", false]], "__init__() (pytket.architecture.squaregrid method)": [[0, "pytket.architecture.SquareGrid.__init__", false]], "__init__() (pytket.mapping.aaslabellingmethod method)": [[14, "pytket.mapping.AASLabellingMethod.__init__", false]], "__init__() (pytket.mapping.aasrouteroutingmethod method)": [[14, "pytket.mapping.AASRouteRoutingMethod.__init__", false]], "__init__() (pytket.mapping.boxdecompositionroutingmethod method)": [[14, "pytket.mapping.BoxDecompositionRoutingMethod.__init__", false]], "__init__() (pytket.mapping.lexilabellingmethod method)": [[14, "pytket.mapping.LexiLabellingMethod.__init__", false]], "__init__() (pytket.mapping.lexirouteroutingmethod method)": [[14, "pytket.mapping.LexiRouteRoutingMethod.__init__", false]], "__init__() (pytket.mapping.mappingmanager method)": [[14, "pytket.mapping.MappingManager.__init__", false]], "__init__() (pytket.mapping.multigatereorderroutingmethod method)": [[14, "pytket.mapping.MultiGateReorderRoutingMethod.__init__", false]], "__init__() (pytket.mapping.routingmethod method)": [[14, "pytket.mapping.RoutingMethod.__init__", false]], "__init__() (pytket.mapping.routingmethodcircuit method)": [[14, "pytket.mapping.RoutingMethodCircuit.__init__", false]], "__init__() (pytket.partition.graphcolourmethod method)": [[16, "pytket.partition.GraphColourMethod.__init__", false]], "__init__() (pytket.partition.measurementbitmap method)": [[16, "pytket.partition.MeasurementBitMap.__init__", false]], "__init__() (pytket.partition.measurementsetup method)": [[16, "pytket.partition.MeasurementSetup.__init__", false]], "__init__() (pytket.partition.paulipartitionstrat method)": [[16, "pytket.partition.PauliPartitionStrat.__init__", false]], "__init__() (pytket.passes.basepass method)": [[17, "pytket.passes.BasePass.__init__", false]], "__init__() (pytket.passes.cnotsynthtype method)": [[17, "pytket.passes.CNotSynthType.__init__", false]], "__init__() (pytket.passes.repeatpass method)": [[17, "pytket.passes.RepeatPass.__init__", false]], "__init__() (pytket.passes.repeatuntilsatisfiedpass method)": [[17, "pytket.passes.RepeatUntilSatisfiedPass.__init__", false]], "__init__() (pytket.passes.repeatwithmetricpass method)": [[17, "pytket.passes.RepeatWithMetricPass.__init__", false]], "__init__() (pytket.passes.safetymode method)": [[17, "pytket.passes.SafetyMode.__init__", false]], "__init__() (pytket.passes.sequencepass method)": [[17, "pytket.passes.SequencePass.__init__", false]], "__init__() (pytket.pauli.pauli method)": [[18, "pytket.pauli.Pauli.__init__", false]], "__init__() (pytket.pauli.paulistabiliser method)": [[18, "pytket.pauli.PauliStabiliser.__init__", false]], "__init__() (pytket.pauli.qubitpaulistring method)": [[18, "pytket.pauli.QubitPauliString.__init__", false]], "__init__() (pytket.pauli.qubitpaulitensor method)": [[18, "pytket.pauli.QubitPauliTensor.__init__", false]], "__init__() (pytket.placement.graphplacement method)": [[19, "pytket.placement.GraphPlacement.__init__", false]], "__init__() (pytket.placement.lineplacement method)": [[19, "pytket.placement.LinePlacement.__init__", false]], "__init__() (pytket.placement.noiseawareplacement method)": [[19, "pytket.placement.NoiseAwarePlacement.__init__", false]], "__init__() (pytket.placement.placement method)": [[19, "pytket.placement.Placement.__init__", false]], "__init__() (pytket.predicates.cliffordcircuitpredicate method)": [[20, "pytket.predicates.CliffordCircuitPredicate.__init__", false]], "__init__() (pytket.predicates.commutablemeasurespredicate method)": [[20, "pytket.predicates.CommutableMeasuresPredicate.__init__", false]], "__init__() (pytket.predicates.compilationunit method)": [[20, "pytket.predicates.CompilationUnit.__init__", false]], "__init__() (pytket.predicates.connectivitypredicate method)": [[20, "pytket.predicates.ConnectivityPredicate.__init__", false]], "__init__() (pytket.predicates.defaultregisterpredicate method)": [[20, "pytket.predicates.DefaultRegisterPredicate.__init__", false]], "__init__() (pytket.predicates.directednesspredicate method)": [[20, "pytket.predicates.DirectednessPredicate.__init__", false]], "__init__() (pytket.predicates.gatesetpredicate method)": [[20, "pytket.predicates.GateSetPredicate.__init__", false]], "__init__() (pytket.predicates.maxnclregpredicate method)": [[20, "pytket.predicates.MaxNClRegPredicate.__init__", false]], "__init__() (pytket.predicates.maxnqubitspredicate method)": [[20, "pytket.predicates.MaxNQubitsPredicate.__init__", false]], "__init__() (pytket.predicates.maxtwoqubitgatespredicate method)": [[20, "pytket.predicates.MaxTwoQubitGatesPredicate.__init__", false]], "__init__() (pytket.predicates.nobarrierspredicate method)": [[20, "pytket.predicates.NoBarriersPredicate.__init__", false]], "__init__() (pytket.predicates.noclassicalbitspredicate method)": [[20, "pytket.predicates.NoClassicalBitsPredicate.__init__", false]], "__init__() (pytket.predicates.noclassicalcontrolpredicate method)": [[20, "pytket.predicates.NoClassicalControlPredicate.__init__", false]], "__init__() (pytket.predicates.nofastfeedforwardpredicate method)": [[20, "pytket.predicates.NoFastFeedforwardPredicate.__init__", false]], "__init__() (pytket.predicates.nomidmeasurepredicate method)": [[20, "pytket.predicates.NoMidMeasurePredicate.__init__", false]], "__init__() (pytket.predicates.normalisedtk2predicate method)": [[20, "pytket.predicates.NormalisedTK2Predicate.__init__", false]], "__init__() (pytket.predicates.nosymbolspredicate method)": [[20, "pytket.predicates.NoSymbolsPredicate.__init__", false]], "__init__() (pytket.predicates.nowireswapspredicate method)": [[20, "pytket.predicates.NoWireSwapsPredicate.__init__", false]], "__init__() (pytket.predicates.placementpredicate method)": [[20, "pytket.predicates.PlacementPredicate.__init__", false]], "__init__() (pytket.predicates.predicate method)": [[20, "pytket.predicates.Predicate.__init__", false]], "__init__() (pytket.predicates.userdefinedpredicate method)": [[20, "pytket.predicates.UserDefinedPredicate.__init__", false]], "__init__() (pytket.tableau.unitaryrevtableau method)": [[23, "pytket.tableau.UnitaryRevTableau.__init__", false]], "__init__() (pytket.tableau.unitarytableau method)": [[23, "pytket.tableau.UnitaryTableau.__init__", false]], "__init__() (pytket.tableau.unitarytableaubox method)": [[23, "pytket.tableau.UnitaryTableauBox.__init__", false]], "__init__() (pytket.tailoring.framerandomisation method)": [[24, "pytket.tailoring.FrameRandomisation.__init__", false]], "__init__() (pytket.tailoring.pauliframerandomisation method)": [[24, "pytket.tailoring.PauliFrameRandomisation.__init__", false]], "__init__() (pytket.tailoring.universalframerandomisation method)": [[24, "pytket.tailoring.UniversalFrameRandomisation.__init__", false]], "__init__() (pytket.transform.paulisynthstrat method)": [[25, "pytket.transform.PauliSynthStrat.__init__", false]], "__init__() (pytket.transform.transform method)": [[25, "pytket.transform.Transform.__init__", false]], "__init__() (pytket.unit_id.bit method)": [[26, "pytket.unit_id.Bit.__init__", false]], "__init__() (pytket.unit_id.bitregister method)": [[26, "pytket.unit_id.BitRegister.__init__", false]], "__init__() (pytket.unit_id.node method)": [[26, "pytket.unit_id.Node.__init__", false]], "__init__() (pytket.unit_id.qubit method)": [[26, "pytket.unit_id.Qubit.__init__", false]], "__init__() (pytket.unit_id.qubitregister method)": [[26, "pytket.unit_id.QubitRegister.__init__", false]], "__init__() (pytket.unit_id.unitid method)": [[26, "pytket.unit_id.UnitID.__init__", false]], "__init__() (pytket.unit_id.unittype method)": [[26, "pytket.unit_id.UnitType.__init__", false]], "__init__() (pytket.unit_id.wasmstate method)": [[26, "pytket.unit_id.WasmState.__init__", false]], "__init__() (pytket.zx.cliffordgen method)": [[29, "pytket.zx.CliffordGen.__init__", false]], "__init__() (pytket.zx.directedgen method)": [[29, "pytket.zx.DirectedGen.__init__", false]], "__init__() (pytket.zx.flow method)": [[29, "pytket.zx.Flow.__init__", false]], "__init__() (pytket.zx.phasedgen method)": [[29, "pytket.zx.PhasedGen.__init__", false]], "__init__() (pytket.zx.quantumtype method)": [[29, "pytket.zx.QuantumType.__init__", false]], "__init__() (pytket.zx.rewrite method)": [[29, "pytket.zx.Rewrite.__init__", false]], "__init__() (pytket.zx.zxbox method)": [[29, "pytket.zx.ZXBox.__init__", false]], "__init__() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.__init__", false]], "__init__() (pytket.zx.zxgen method)": [[29, "pytket.zx.ZXGen.__init__", false]], "__init__() (pytket.zx.zxtype method)": [[29, "pytket.zx.ZXType.__init__", false]], "__init__() (pytket.zx.zxvert method)": [[29, "pytket.zx.ZXVert.__init__", false]], "__init__() (pytket.zx.zxwire method)": [[29, "pytket.zx.ZXWire.__init__", false]], "__init__() (pytket.zx.zxwiretype method)": [[29, "pytket.zx.ZXWireType.__init__", false]], "__init__() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.__init__", false]], "__init__() (pytket.circuit.circbox method)": [[3, "pytket.circuit.CircBox.__init__", false]], "__init__() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.__init__", false]], "__init__() (pytket.circuit.classicalevalop method)": [[3, "pytket.circuit.ClassicalEvalOp.__init__", false]], "__init__() (pytket.circuit.classicalop method)": [[3, "pytket.circuit.ClassicalOp.__init__", false]], "__init__() (pytket.circuit.clbitvar method)": [[3, "pytket.circuit.ClBitVar.__init__", false]], "__init__() (pytket.circuit.clexpr method)": [[3, "pytket.circuit.ClExpr.__init__", false]], "__init__() (pytket.circuit.clexprop method)": [[3, "pytket.circuit.ClExprOp.__init__", false]], "__init__() (pytket.circuit.clregvar method)": [[3, "pytket.circuit.ClRegVar.__init__", false]], "__init__() (pytket.circuit.conjugationbox method)": [[3, "pytket.circuit.ConjugationBox.__init__", false]], "__init__() (pytket.circuit.copybitsop method)": [[3, "pytket.circuit.CopyBitsOp.__init__", false]], "__init__() (pytket.circuit.diagonalbox method)": [[3, "pytket.circuit.DiagonalBox.__init__", false]], "__init__() (pytket.circuit.dummybox method)": [[3, "pytket.circuit.DummyBox.__init__", false]], "__init__() (pytket.circuit.expbox method)": [[3, "pytket.circuit.ExpBox.__init__", false]], "__init__() (pytket.circuit.multibitop method)": [[3, "pytket.circuit.MultiBitOp.__init__", false]], "__init__() (pytket.circuit.multiplexedrotationbox method)": [[3, "pytket.circuit.MultiplexedRotationBox.__init__", false]], "__init__() (pytket.circuit.multiplexedtensoredu2box method)": [[3, "pytket.circuit.MultiplexedTensoredU2Box.__init__", false]], "__init__() (pytket.circuit.multiplexedu2box method)": [[3, "pytket.circuit.MultiplexedU2Box.__init__", false]], "__init__() (pytket.circuit.multiplexorbox method)": [[3, "pytket.circuit.MultiplexorBox.__init__", false]], "__init__() (pytket.circuit.pauliexpbox method)": [[3, "pytket.circuit.PauliExpBox.__init__", false]], "__init__() (pytket.circuit.pauliexpcommutingsetbox method)": [[3, "pytket.circuit.PauliExpCommutingSetBox.__init__", false]], "__init__() (pytket.circuit.pauliexppairbox method)": [[3, "pytket.circuit.PauliExpPairBox.__init__", false]], "__init__() (pytket.circuit.phasepolybox method)": [[3, "pytket.circuit.PhasePolyBox.__init__", false]], "__init__() (pytket.circuit.projectorassertionbox method)": [[3, "pytket.circuit.ProjectorAssertionBox.__init__", false]], "__init__() (pytket.circuit.qcontrolbox method)": [[3, "pytket.circuit.QControlBox.__init__", false]], "__init__() (pytket.circuit.rangepredicateop method)": [[3, "pytket.circuit.RangePredicateOp.__init__", false]], "__init__() (pytket.circuit.resourcebounds method)": [[3, "pytket.circuit.ResourceBounds.__init__", false]], "__init__() (pytket.circuit.resourcedata method)": [[3, "pytket.circuit.ResourceData.__init__", false]], "__init__() (pytket.circuit.setbitsop method)": [[3, "pytket.circuit.SetBitsOp.__init__", false]], "__init__() (pytket.circuit.stabiliserassertionbox method)": [[3, "pytket.circuit.StabiliserAssertionBox.__init__", false]], "__init__() (pytket.circuit.statepreparationbox method)": [[3, "pytket.circuit.StatePreparationBox.__init__", false]], "__init__() (pytket.circuit.termsequencebox method)": [[3, "pytket.circuit.TermSequenceBox.__init__", false]], "__init__() (pytket.circuit.toffolibox method)": [[3, "pytket.circuit.ToffoliBox.__init__", false]], "__init__() (pytket.circuit.unitary1qbox method)": [[3, "pytket.circuit.Unitary1qBox.__init__", false]], "__init__() (pytket.circuit.unitary2qbox method)": [[3, "pytket.circuit.Unitary2qBox.__init__", false]], "__init__() (pytket.circuit.unitary3qbox method)": [[3, "pytket.circuit.Unitary3qBox.__init__", false]], "__init__() (pytket.circuit.wasmop method)": [[3, "pytket.circuit.WASMOp.__init__", false]], "__init__() (pytket.circuit.wiredclexpr method)": [[3, "pytket.circuit.WiredClExpr.__init__", false]], "__init__() (pytket.config.pytket_config.pytketconfig method)": [[6, "pytket.config.pytket_config.PytketConfig.__init__", false]], "__init__() (pytket.config.pytket_config.pytketextconfig method)": [[6, "pytket.config.pytket_config.PytketExtConfig.__init__", false]], "__init__() (pytket.passes.passselector method)": [[17, "pytket.passes.PassSelector.__init__", false]], "__init__() (pytket.utils.graph method)": [[27, "pytket.utils.Graph.__init__", false]], "__init__() (pytket.utils.qubitpaulioperator method)": [[27, "pytket.utils.QubitPauliOperator.__init__", false]], "__init__() (pytket.utils.spam.spamcorrecter method)": [[27, "pytket.utils.spam.SpamCorrecter.__init__", false]], "__init__() (pytket.wasm.wasmfilehandler method)": [[28, "pytket.wasm.WasmFileHandler.__init__", false]], "__iter__() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.__iter__", false]], "__repr__() (pytket.circuit.resourcedata method)": [[3, "pytket.circuit.ResourceData.__repr__", false]], "__rshift__() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.__rshift__", false]], "aams() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.AAMS", false]], "aaslabellingmethod (class in pytket.mapping)": [[14, "pytket.mapping.AASLabellingMethod", false]], "aasrouteroutingmethod (class in pytket.mapping)": [[14, "pytket.mapping.AASRouteRoutingMethod", false]], "aasrouting() (in module pytket.passes)": [[17, "pytket.passes.AASRouting", false]], "add (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.ADD", false]], "add_assertion() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_assertion", false]], "add_barrier() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_barrier", false]], "add_bit() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_bit", false]], "add_blank_wires() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_blank_wires", false]], "add_c_and() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_and", false]], "add_c_and_to_registers() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_and_to_registers", false]], "add_c_copybits() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_copybits", false]], "add_c_copyreg() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_copyreg", false]], "add_c_modifier() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_modifier", false]], "add_c_not() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_not", false]], "add_c_not_to_registers() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_not_to_registers", false]], "add_c_or() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_or", false]], "add_c_or_to_registers() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_or_to_registers", false]], "add_c_predicate() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_predicate", false]], "add_c_range_predicate() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_range_predicate", false]], "add_c_register() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_register", false]], "add_c_setbits() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_setbits", false]], "add_c_setreg() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_setreg", false]], "add_c_transform() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_transform", false]], "add_c_xor() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_xor", false]], "add_c_xor_to_registers() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_c_xor_to_registers", false]], "add_circbox() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_circbox", false]], "add_circbox_regwise() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_circbox_regwise", false]], "add_circbox_with_regmap() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_circbox_with_regmap", false]], "add_circuit() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_circuit", false]], "add_classicalexpbox_bit() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_classicalexpbox_bit", false]], "add_classicalexpbox_register() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_classicalexpbox_register", false]], "add_clexpr() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_clexpr", false]], "add_conditional_barrier() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_conditional_barrier", false]], "add_conjugation_box() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_conjugation_box", false]], "add_custom_gate() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_custom_gate", false]], "add_diagonal_box() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_diagonal_box", false]], "add_dummybox() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_dummybox", false]], "add_expbox() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_expbox", false]], "add_gate() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_gate", false]], "add_measurement_circuit() (pytket.partition.measurementsetup method)": [[16, "pytket.partition.MeasurementSetup.add_measurement_circuit", false]], "add_misc() (pytket.backends.backendinfo.backendinfo method)": [[1, "pytket.backends.backendinfo.BackendInfo.add_misc", false]], "add_multiplexed_tensored_u2() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_multiplexed_tensored_u2", false]], "add_multiplexedrotation() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_multiplexedrotation", false]], "add_multiplexedu2() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_multiplexedu2", false]], "add_multiplexor() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_multiplexor", false]], "add_pauliexpbox() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_pauliexpbox", false]], "add_pauliexpcommutingsetbox() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_pauliexpcommutingsetbox", false]], "add_pauliexppairbox() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_pauliexppairbox", false]], "add_phase() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_phase", false]], "add_phasepolybox() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_phasepolybox", false]], "add_q_register() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_q_register", false]], "add_qcontrolbox() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_qcontrolbox", false]], "add_qubit() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_qubit", false]], "add_result_for_term() (pytket.partition.measurementsetup method)": [[16, "pytket.partition.MeasurementSetup.add_result_for_term", false]], "add_state_preparation_box() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_state_preparation_box", false]], "add_termsequencebox() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_termsequencebox", false]], "add_toffolibox() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_toffolibox", false]], "add_unitary1qbox() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_unitary1qbox", false]], "add_unitary2qbox() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_unitary2qbox", false]], "add_unitary3qbox() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_unitary3qbox", false]], "add_vertex() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.add_vertex", false]], "add_wasm() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_wasm", false]], "add_wasm_to_reg() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.add_wasm_to_reg", false]], "add_wire() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.add_wire", false]], "add_zxbox() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.add_zxbox", false]], "adj_wires() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.adj_wires", false]], "all_inputs() (pytket.circuit.logic_exp.logicexp method)": [[5, "pytket.circuit.logic_exp.LogicExp.all_inputs", false]], "all_inputs_ordered() (pytket.circuit.logic_exp.logicexp method)": [[5, "pytket.circuit.logic_exp.LogicExp.all_inputs_ordered", false]], "all_qubits (pytket.utils.qubitpaulioperator property)": [[27, "pytket.utils.QubitPauliOperator.all_qubits", false]], "and (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.And", false]], "and (pytket.circuit.logic_exp.bitwiseop attribute)": [[5, "pytket.circuit.logic_exp.BitWiseOp.AND", false]], "and (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.AND", false]], "append() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.append", false]], "append_pauli_measurement() (in module pytket.utils)": [[27, "pytket.utils.append_pauli_measurement", false]], "apply() (pytket.passes.basepass method)": [[17, "pytket.passes.BasePass.apply", false]], "apply() (pytket.transform.transform method)": [[25, "pytket.transform.Transform.apply", false]], "apply() (pytket.zx.rewrite method)": [[29, "pytket.zx.Rewrite.apply", false]], "apply() (pytket.passes.passselector method)": [[17, "pytket.passes.PassSelector.apply", false]], "apply_clifford_basis_change() (in module pytket.tailoring)": [[24, "pytket.tailoring.apply_clifford_basis_change", false]], "apply_clifford_basis_change_tensor() (in module pytket.tailoring)": [[24, "pytket.tailoring.apply_clifford_basis_change_tensor", false]], "apply_gate_at_end() (pytket.tableau.unitaryrevtableau method)": [[23, "pytket.tableau.UnitaryRevTableau.apply_gate_at_end", false]], "apply_gate_at_end() (pytket.tableau.unitarytableau method)": [[23, "pytket.tableau.UnitaryTableau.apply_gate_at_end", false]], "apply_gate_at_front() (pytket.tableau.unitaryrevtableau method)": [[23, "pytket.tableau.UnitaryRevTableau.apply_gate_at_front", false]], "apply_gate_at_front() (pytket.tableau.unitarytableau method)": [[23, "pytket.tableau.UnitaryTableau.apply_gate_at_front", false]], "architecture (class in pytket.architecture)": [[0, "pytket.architecture.Architecture", false]], "args (pytket.circuit.clexpr property)": [[3, "pytket.circuit.ClExpr.args", false]], "args (pytket.circuit.command property)": [[3, "pytket.circuit.Command.args", false]], "args (pytket.circuit.customgatedef property)": [[3, "pytket.circuit.CustomGateDef.args", false]], "arity (pytket.circuit.customgatedef property)": [[3, "pytket.circuit.CustomGateDef.arity", false]], "as_counter() (pytket.utils.distribution.empiricaldistribution method)": [[27, "pytket.utils.distribution.EmpiricalDistribution.as_counter", false]], "as_dict() (pytket.utils.distribution.probabilitydistribution method)": [[27, "pytket.utils.distribution.ProbabilityDistribution.as_dict", false]], "as_nx() (pytket.utils.graph method)": [[27, "pytket.utils.Graph.as_nx", false]], "as_qasm() (pytket.circuit.clexpr method)": [[3, "pytket.circuit.ClExpr.as_qasm", false]], "as_rv_discrete() (pytket.utils.distribution.probabilitydistribution method)": [[27, "pytket.utils.distribution.ProbabilityDistribution.as_rv_discrete", false]], "autorebase() (in module pytket.passes)": [[17, "pytket.passes.AutoRebase", false]], "autosquash() (in module pytket.passes)": [[17, "pytket.passes.AutoSquash", false]], "available_devices() (pytket.backends.backend class method)": [[1, "pytket.backends.Backend.available_devices", false]], "backend (class in pytket.backends)": [[1, "pytket.backends.Backend", false]], "backend_info (pytket.backends.backend property)": [[1, "pytket.backends.Backend.backend_info", false]], "backendinfo (class in pytket.backends.backendinfo)": [[1, "pytket.backends.backendinfo.BackendInfo", false]], "backendresult (class in pytket.backends.backendresult)": [[1, "pytket.backends.backendresult.BackendResult", false]], "basepass (class in pytket.passes)": [[17, "pytket.passes.BasePass", false]], "basic_op (pytket.circuit.multibitop property)": [[3, "pytket.circuit.MultiBitOp.basic_op", false]], "basic_wires() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.basic_wires", false]], "basisorder (class in pytket.circuit)": [[3, "pytket.circuit.BasisOrder", false]], "binaryop (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.BinaryOp", false]], "bit (class in pytket.unit_id)": [[26, "pytket.unit_id.Bit", false]], "bit_posn (pytket.circuit.wiredclexpr property)": [[3, "pytket.circuit.WiredClExpr.bit_posn", false]], "bit_readout (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.bit_readout", false]], "bitand (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.BitAnd", false]], "biteq (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.BitEq", false]], "bitlogicexp (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.BitLogicExp", false]], "bitneq (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.BitNeq", false]], "bitnot (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.BitNot", false]], "bitone (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.BitOne", false]], "bitor (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.BitOr", false]], "bitregister (class in pytket.unit_id)": [[26, "pytket.unit_id.BitRegister", false]], "bits (pytket.partition.measurementbitmap property)": [[16, "pytket.partition.MeasurementBitMap.bits", false]], "bits (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.bits", false]], "bits (pytket.circuit.command property)": [[3, "pytket.circuit.Command.bits", false]], "bitxor (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.BitXor", false]], "bitzero (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.BitZero", false]], "boxdecompositionroutingmethod (class in pytket.mapping)": [[14, "pytket.mapping.BoxDecompositionRoutingMethod", false]], "c() (pytket.zx.flow method)": [[29, "pytket.zx.Flow.c", false]], "c_registers (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.c_registers", false]], "calculate_matrices() (pytket.utils.spam.spamcorrecter method)": [[27, "pytket.utils.spam.SpamCorrecter.calculate_matrices", false]], "calibration_circuits() (pytket.utils.spam.spamcorrecter method)": [[27, "pytket.utils.spam.SpamCorrecter.calibration_circuits", false]], "cancel() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.cancel", false]], "cancelled (pytket.backends.status.statusenum attribute)": [[1, "pytket.backends.status.StatusEnum.CANCELLED", false]], "cancelled_time (pytket.backends.status.circuitstatus attribute)": [[1, "pytket.backends.status.CircuitStatus.cancelled_time", false]], "cancelling (pytket.backends.status.statusenum attribute)": [[1, "pytket.backends.status.StatusEnum.CANCELLING", false]], "ccx() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CCX", false]], "ch() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CH", false]], "check_all_predicates() (pytket.predicates.compilationunit method)": [[20, "pytket.predicates.CompilationUnit.check_all_predicates", false]], "check_validity() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.check_validity", false]], "choose_indices() (pytket.utils.outcomearray method)": [[27, "pytket.utils.OutcomeArray.choose_indices", false]], "circ_index (pytket.partition.measurementbitmap property)": [[16, "pytket.partition.MeasurementBitMap.circ_index", false]], "circbox (class in pytket.circuit)": [[3, "pytket.circuit.CircBox", false]], "circuit (class in pytket.circuit)": [[4, "pytket.circuit.Circuit", false]], "circuit (pytket.predicates.compilationunit property)": [[20, "pytket.predicates.CompilationUnit.circuit", false]], "circuit_apply_symbolic_qubit() (in module pytket.utils.symbolic)": [[27, "pytket.utils.symbolic.circuit_apply_symbolic_qubit", false]], "circuit_apply_symbolic_statevector() (in module pytket.utils.symbolic)": [[27, "pytket.utils.symbolic.circuit_apply_symbolic_statevector", false]], "circuit_from_qasm() (in module pytket.qasm)": [[21, "pytket.qasm.circuit_from_qasm", false]], "circuit_from_qasm_io() (in module pytket.qasm)": [[21, "pytket.qasm.circuit_from_qasm_io", false]], "circuit_from_qasm_str() (in module pytket.qasm)": [[21, "pytket.qasm.circuit_from_qasm_str", false]], "circuit_from_qasm_wasm() (in module pytket.qasm)": [[21, "pytket.qasm.circuit_from_qasm_wasm", false]], "circuit_from_quipper() (in module pytket.quipper)": [[22, "pytket.quipper.circuit_from_quipper", false]], "circuit_name (pytket.circuit.circbox property)": [[3, "pytket.circuit.CircBox.circuit_name", false]], "circuit_status() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.circuit_status", false]], "circuit_to_qasm() (in module pytket.qasm)": [[21, "pytket.qasm.circuit_to_qasm", false]], "circuit_to_qasm_io() (in module pytket.qasm)": [[21, "pytket.qasm.circuit_to_qasm_io", false]], "circuit_to_qasm_str() (in module pytket.qasm)": [[21, "pytket.qasm.circuit_to_qasm_str", false]], "circuit_to_symbolic_gates() (in module pytket.utils.symbolic)": [[27, "pytket.utils.symbolic.circuit_to_symbolic_gates", false]], "circuit_to_symbolic_unitary() (in module pytket.utils.symbolic)": [[27, "pytket.utils.symbolic.circuit_to_symbolic_unitary", false]], "circuit_to_zx() (in module pytket.zx)": [[29, "pytket.zx.circuit_to_zx", false]], "circuitrenderer (class in pytket.circuit.display)": [[7, "pytket.circuit.display.CircuitRenderer", false]], "circuitstatus (class in pytket.backends.status)": [[1, "pytket.backends.status.CircuitStatus", false]], "classicalevalop (class in pytket.circuit)": [[3, "pytket.circuit.ClassicalEvalOp", false]], "classicalexpbox (class in pytket.circuit)": [[3, "pytket.circuit.ClassicalExpBox", false]], "classicalop (class in pytket.circuit)": [[3, "pytket.circuit.ClassicalOp", false]], "clbitvar (class in pytket.circuit)": [[3, "pytket.circuit.ClBitVar", false]], "clexpr (class in pytket.circuit)": [[3, "pytket.circuit.ClExpr", false]], "clexprop (class in pytket.circuit)": [[3, "pytket.circuit.ClExprOp", false]], "cliffordcircuitpredicate (class in pytket.predicates)": [[20, "pytket.predicates.CliffordCircuitPredicate", false]], "cliffordgen (class in pytket.zx)": [[29, "pytket.zx.CliffordGen", false]], "cliffordpushthroughmeasures() (in module pytket.passes)": [[17, "pytket.passes.CliffordPushThroughMeasures", false]], "cliffordresynthesis() (in module pytket.passes)": [[17, "pytket.passes.CliffordResynthesis", false]], "cliffordsimp() (in module pytket.passes)": [[17, "pytket.passes.CliffordSimp", false]], "clop (class in pytket.circuit)": [[3, "pytket.circuit.ClOp", false]], "clregvar (class in pytket.circuit)": [[3, "pytket.circuit.ClRegVar", false]], "cmap (pytket.zx.flow property)": [[29, "pytket.zx.Flow.cmap", false]], "cnotsynthtype (class in pytket.passes)": [[17, "pytket.passes.CNotSynthType", false]], "cnxpairwisedecomposition() (in module pytket.passes)": [[17, "pytket.passes.CnXPairwiseDecomposition", false]], "cnxpairwisedecomposition() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.CnXPairwiseDecomposition", false]], "coeff (pytket.pauli.paulistabiliser property)": [[18, "pytket.pauli.PauliStabiliser.coeff", false]], "coeff (pytket.pauli.qubitpaulitensor property)": [[18, "pytket.pauli.QubitPauliTensor.coeff", false]], "command (class in pytket.circuit)": [[3, "pytket.circuit.Command", false]], "commands_of_type() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.commands_of_type", false]], "commutablemeasurespredicate (class in pytket.predicates)": [[20, "pytket.predicates.CommutableMeasuresPredicate", false]], "commutes_with() (pytket.pauli.qubitpaulistring method)": [[18, "pytket.pauli.QubitPauliString.commutes_with", false]], "commutes_with() (pytket.pauli.qubitpaulitensor method)": [[18, "pytket.pauli.QubitPauliTensor.commutes_with", false]], "commutesqthroughswap() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.CommuteSQThroughSWAP", false]], "commutethroughmultis() (in module pytket.passes)": [[17, "pytket.passes.CommuteThroughMultis", false]], "commutethroughmultis() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.CommuteThroughMultis", false]], "compare_statevectors() (in module pytket.utils)": [[27, "pytket.utils.compare_statevectors", false]], "compare_unitaries() (in module pytket.utils)": [[27, "pytket.utils.compare_unitaries", false]], "compilation_pass_from_script() (in module pytket.passes.script)": [[17, "pytket.passes.script.compilation_pass_from_script", false]], "compilation_pass_grammar() (in module pytket.passes.script)": [[17, "pytket.passes.script.compilation_pass_grammar", false]], "compilationunit (class in pytket.predicates)": [[20, "pytket.predicates.CompilationUnit", false]], "completed (pytket.backends.status.statusenum attribute)": [[1, "pytket.backends.status.StatusEnum.COMPLETED", false]], "completed_time (pytket.backends.status.circuitstatus attribute)": [[1, "pytket.backends.status.CircuitStatus.completed_time", false]], "composephasepolyboxes() (in module pytket.passes)": [[17, "pytket.passes.ComposePhasePolyBoxes", false]], "compress() (pytket.pauli.qubitpaulistring method)": [[18, "pytket.pauli.QubitPauliString.compress", false]], "compress() (pytket.pauli.qubitpaulitensor method)": [[18, "pytket.pauli.QubitPauliTensor.compress", false]], "compress() (pytket.utils.qubitpaulioperator method)": [[27, "pytket.utils.QubitPauliOperator.compress", false]], "compress_counts() (in module pytket.utils.spam)": [[27, "pytket.utils.spam.compress_counts", false]], "condition() (pytket.utils.distribution.empiricaldistribution method)": [[27, "pytket.utils.distribution.EmpiricalDistribution.condition", false]], "condition() (pytket.utils.distribution.probabilitydistribution method)": [[27, "pytket.utils.distribution.ProbabilityDistribution.condition", false]], "conditional (class in pytket.circuit)": [[3, "pytket.circuit.Conditional", false]], "conjugationbox (class in pytket.circuit)": [[3, "pytket.circuit.ConjugationBox", false]], "connectivitypredicate (class in pytket.predicates)": [[20, "pytket.predicates.ConnectivityPredicate", false]], "contains_measured_results (pytket.backends.backendresult.backendresult property)": [[1, "pytket.backends.backendresult.BackendResult.contains_measured_results", false]], "contains_state_results (pytket.backends.backendresult.backendresult property)": [[1, "pytket.backends.backendresult.BackendResult.contains_state_results", false]], "content_equality() (pytket.circuit.classicalexpbox method)": [[3, "pytket.circuit.ClassicalExpBox.content_equality", false]], "contextsimp() (in module pytket.passes)": [[17, "pytket.passes.ContextSimp", false]], "convex_combination() (in module pytket.utils.distribution)": [[27, "pytket.utils.distribution.convex_combination", false]], "copy() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.copy", false]], "copybitsop (class in pytket.circuit)": [[3, "pytket.circuit.CopyBitsOp", false]], "correct_counts() (pytket.utils.spam.spamcorrecter method)": [[27, "pytket.utils.spam.SpamCorrecter.correct_counts", false]], "count_vertices() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.count_vertices", false]], "count_wires() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.count_wires", false]], "counts (pytket.backends.backendresult.storedresult attribute)": [[1, "pytket.backends.backendresult.StoredResult.counts", false]], "counts() (pytket.utils.outcomearray method)": [[27, "pytket.utils.OutcomeArray.counts", false]], "counts_from_shot_table() (in module pytket.utils)": [[27, "pytket.utils.counts_from_shot_table", false]], "coupling (pytket.architecture.architecture property)": [[0, "pytket.architecture.Architecture.coupling", false]], "create() (pytket.zx.zxgen static method)": [[29, "pytket.zx.ZXGen.create", false]], "create() (pytket.circuit.op static method)": [[3, "pytket.circuit.Op.create", false]], "created_qubits (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.created_qubits", false]], "crx() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CRx", false]], "cry() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CRy", false]], "crz() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CRz", false]], "cs() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CS", false]], "csdg() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CSdg", false]], "cswap() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CSWAP", false]], "csx() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CSX", false]], "csxdg() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CSXdg", false]], "cu1() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CU1", false]], "cu3() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CU3", false]], "customgate (class in pytket.circuit)": [[3, "pytket.circuit.CustomGate", false]], "customgatedef (class in pytket.circuit)": [[3, "pytket.circuit.CustomGateDef", false]], "custompass() (in module pytket.passes)": [[17, "pytket.passes.CustomPass", false]], "customroutingpass() (in module pytket.passes)": [[17, "pytket.passes.CustomRoutingPass", false]], "cv() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CV", false]], "cvdg() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CVdg", false]], "cx() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CX", false]], "cxconfigtype (class in pytket.circuit)": [[3, "pytket.circuit.CXConfigType", false]], "cxmappingpass() (in module pytket.passes)": [[17, "pytket.passes.CXMappingPass", false]], "cy() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CY", false]], "cz() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.CZ", false]], "d() (pytket.zx.flow method)": [[29, "pytket.zx.Flow.d", false]], "dagger (pytket.circuit.op property)": [[3, "pytket.circuit.Op.dagger", false]], "dagger() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.dagger", false]], "decompose_boxes() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.decompose_boxes", false]], "decomposearbitrarilycontrolledgates() (in module pytket.passes)": [[17, "pytket.passes.DecomposeArbitrarilyControlledGates", false]], "decomposeboxes() (in module pytket.passes)": [[17, "pytket.passes.DecomposeBoxes", false]], "decomposeboxes() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.DecomposeBoxes", false]], "decomposebridge() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.DecomposeBRIDGE", false]], "decomposeccx() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.DecomposeCCX", false]], "decomposeclassicalexp() (in module pytket.passes)": [[17, "pytket.passes.DecomposeClassicalExp", false]], "decomposecontrolledrys() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.DecomposeControlledRys", false]], "decomposecxdirected() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.DecomposeCXDirected", false]], "decomposemultiqubitscx() (in module pytket.passes)": [[17, "pytket.passes.DecomposeMultiQubitsCX", false]], "decomposenphasedx() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.DecomposeNPhasedX", false]], "decomposesinglequbitstk1() (in module pytket.passes)": [[17, "pytket.passes.DecomposeSingleQubitsTK1", false]], "decomposeswap() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.DecomposeSWAP", false]], "decomposeswapstocircuit() (in module pytket.passes)": [[17, "pytket.passes.DecomposeSwapsToCircuit", false]], "decomposeswapstocxs() (in module pytket.passes)": [[17, "pytket.passes.DecomposeSwapsToCXs", false]], "decomposeswaptocx() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.DecomposeSWAPtoCX", false]], "decomposetk2() (in module pytket.passes)": [[17, "pytket.passes.DecomposeTK2", false]], "decomposetk2() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.DecomposeTK2", false]], "default() (pytket.config.pytket_config.pytketconfig class method)": [[6, "pytket.config.pytket_config.PytketConfig.default", false]], "default_compilation_pass() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.default_compilation_pass", false]], "defaultmappingpass() (in module pytket.passes)": [[17, "pytket.passes.DefaultMappingPass", false]], "defaultregisterpredicate (class in pytket.predicates)": [[20, "pytket.predicates.DefaultRegisterPredicate", false]], "define() (pytket.circuit.customgatedef static method)": [[3, "pytket.circuit.CustomGateDef.define", false]], "definition (pytket.circuit.customgatedef property)": [[3, "pytket.circuit.CustomGateDef.definition", false]], "degree() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.degree", false]], "delaymeasures() (in module pytket.passes)": [[17, "pytket.passes.DelayMeasures", false]], "density_matrix (pytket.backends.backendresult.storedresult attribute)": [[1, "pytket.backends.backendresult.StoredResult.density_matrix", false]], "depth() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.depth", false]], "depth_2q() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.depth_2q", false]], "depth_by_type() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.depth_by_type", false]], "diagonalbox (class in pytket.circuit)": [[3, "pytket.circuit.DiagonalBox", false]], "diagram (pytket.zx.zxbox property)": [[29, "pytket.zx.ZXBox.diagram", false]], "directedgen (class in pytket.zx)": [[29, "pytket.zx.DirectedGen", false]], "directednesspredicate (class in pytket.predicates)": [[20, "pytket.predicates.DirectednessPredicate", false]], "discarded_qubits (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.discarded_qubits", false]], "div (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.DIV", false]], "dmap (pytket.zx.flow property)": [[29, "pytket.zx.Flow.dmap", false]], "dot_state() (pytket.pauli.qubitpaulistring method)": [[18, "pytket.pauli.QubitPauliString.dot_state", false]], "dot_state() (pytket.pauli.qubitpaulitensor method)": [[18, "pytket.pauli.QubitPauliTensor.dot_state", false]], "dot_state() (pytket.utils.qubitpaulioperator method)": [[27, "pytket.utils.QubitPauliOperator.dot_state", false]], "dummybox (class in pytket.circuit)": [[3, "pytket.circuit.DummyBox", false]], "ecr() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.ECR", false]], "empiricaldistribution (class in pytket.utils.distribution)": [[27, "pytket.utils.distribution.EmpiricalDistribution", false]], "empty_cache() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.empty_cache", false]], "eq (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.Eq", false]], "eq (pytket.circuit.logic_exp.bitwiseop attribute)": [[5, "pytket.circuit.logic_exp.BitWiseOp.EQ", false]], "eq (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.EQ", false]], "error (pytket.backends.status.statusenum attribute)": [[1, "pytket.backends.status.StatusEnum.ERROR", false]], "error_detail (pytket.backends.status.circuitstatus attribute)": [[1, "pytket.backends.status.CircuitStatus.error_detail", false]], "error_time (pytket.backends.status.circuitstatus attribute)": [[1, "pytket.backends.status.CircuitStatus.error_time", false]], "eswap() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.ESWAP", false]], "euleranglereduction() (in module pytket.passes)": [[17, "pytket.passes.EulerAngleReduction", false]], "eval_vals() (pytket.circuit.logic_exp.and method)": [[5, "pytket.circuit.logic_exp.And.eval_vals", false]], "eval_vals() (pytket.circuit.logic_exp.bitor method)": [[5, "pytket.circuit.logic_exp.BitOr.eval_vals", false]], "eval_vals() (pytket.circuit.logic_exp.logicexp method)": [[5, "pytket.circuit.logic_exp.LogicExp.eval_vals", false]], "expbox (class in pytket.circuit)": [[3, "pytket.circuit.ExpBox", false]], "expectation() (pytket.utils.distribution.probabilitydistribution method)": [[27, "pytket.utils.distribution.ProbabilityDistribution.expectation", false]], "expectation_allows_nonhermitian (pytket.backends.backend property)": [[1, "pytket.backends.Backend.expectation_allows_nonhermitian", false]], "expectation_from_counts() (in module pytket.utils)": [[27, "pytket.utils.expectation_from_counts", false]], "expectation_from_shots() (in module pytket.utils)": [[27, "pytket.utils.expectation_from_shots", false]], "expr (pytket.circuit.clexprop property)": [[3, "pytket.circuit.ClExprOp.expr", false]], "expr (pytket.circuit.wiredclexpr property)": [[3, "pytket.circuit.WiredClExpr.expr", false]], "extend_at_boundary_paulis() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.extend_at_boundary_paulis", false]], "extend_for_px_outputs() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.extend_for_PX_outputs", false]], "factory() (pytket.circuit.logic_exp.logicexp class method)": [[5, "pytket.circuit.logic_exp.LogicExp.factory", false]], "filter_by_type() (in module pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.filter_by_type", false]], "final_map (pytket.predicates.compilationunit property)": [[20, "pytket.predicates.CompilationUnit.final_map", false]], "flatten_registers() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.flatten_registers", false]], "flattenregisters() (in module pytket.passes)": [[17, "pytket.passes.FlattenRegisters", false]], "flattenrelabelregisterspass() (in module pytket.passes)": [[17, "pytket.passes.FlattenRelabelRegistersPass", false]], "flow (class in pytket.zx)": [[29, "pytket.zx.Flow", false]], "focus() (pytket.zx.flow method)": [[29, "pytket.zx.Flow.focus", false]], "framerandomisation (class in pytket.tailoring)": [[24, "pytket.tailoring.FrameRandomisation", false]], "free_symbols() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.free_symbols", false]], "free_symbols() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.free_symbols", false]], "free_symbols() (pytket.circuit.command method)": [[3, "pytket.circuit.Command.free_symbols", false]], "free_symbols() (pytket.circuit.op method)": [[3, "pytket.circuit.Op.free_symbols", false]], "fresh_symbol() (in module pytket.circuit)": [[3, "pytket.circuit.fresh_symbol", false]], "from_default_config_file() (pytket.config.pytket_config.pytketextconfig class method)": [[6, "pytket.config.pytket_config.PytketExtConfig.from_default_config_file", false]], "from_dict() (pytket.architecture.architecture static method)": [[0, "pytket.architecture.Architecture.from_dict", false]], "from_dict() (pytket.architecture.fullyconnected static method)": [[0, "pytket.architecture.FullyConnected.from_dict", false]], "from_dict() (pytket.partition.measurementbitmap static method)": [[16, "pytket.partition.MeasurementBitMap.from_dict", false]], "from_dict() (pytket.partition.measurementsetup static method)": [[16, "pytket.partition.MeasurementSetup.from_dict", false]], "from_dict() (pytket.passes.basepass static method)": [[17, "pytket.passes.BasePass.from_dict", false]], "from_dict() (pytket.placement.placement static method)": [[19, "pytket.placement.Placement.from_dict", false]], "from_dict() (pytket.predicates.predicate static method)": [[20, "pytket.predicates.Predicate.from_dict", false]], "from_dict() (pytket.backends.backendinfo.backendinfo class method)": [[1, "pytket.backends.backendinfo.BackendInfo.from_dict", false]], "from_dict() (pytket.backends.backendresult.backendresult class method)": [[1, "pytket.backends.backendresult.BackendResult.from_dict", false]], "from_dict() (pytket.backends.status.circuitstatus class method)": [[1, "pytket.backends.status.CircuitStatus.from_dict", false]], "from_dict() (pytket.circuit.circuit static method)": [[4, "pytket.circuit.Circuit.from_dict", false]], "from_dict() (pytket.circuit.customgatedef static method)": [[3, "pytket.circuit.CustomGateDef.from_dict", false]], "from_dict() (pytket.circuit.logic_exp.logicexp class method)": [[5, "pytket.circuit.logic_exp.LogicExp.from_dict", false]], "from_dict() (pytket.circuit.wiredclexpr static method)": [[3, "pytket.circuit.WiredClExpr.from_dict", false]], "from_dict() (pytket.utils.outcomearray class method)": [[27, "pytket.utils.OutcomeArray.from_dict", false]], "from_dict() (pytket.utils.spam.spamcorrecter class method)": [[27, "pytket.utils.spam.SpamCorrecter.from_dict", false]], "from_empirical_distribution() (pytket.utils.distribution.probabilitydistribution class method)": [[27, "pytket.utils.distribution.ProbabilityDistribution.from_empirical_distribution", false]], "from_extension_dict() (pytket.config.pytket_config.pytketextconfig class method)": [[6, "pytket.config.pytket_config.PytketExtConfig.from_extension_dict", false]], "from_ints() (pytket.utils.outcomearray class method)": [[27, "pytket.utils.OutcomeArray.from_ints", false]], "from_list() (pytket.pauli.qubitpaulistring static method)": [[18, "pytket.pauli.QubitPauliString.from_list", false]], "from_list() (pytket.unit_id.bit static method)": [[26, "pytket.unit_id.Bit.from_list", false]], "from_list() (pytket.unit_id.node static method)": [[26, "pytket.unit_id.Node.from_list", false]], "from_list() (pytket.unit_id.qubit static method)": [[26, "pytket.unit_id.Qubit.from_list", false]], "from_list() (pytket.unit_id.wasmstate static method)": [[26, "pytket.unit_id.WasmState.from_list", false]], "from_list() (pytket.utils.qubitpaulioperator class method)": [[27, "pytket.utils.QubitPauliOperator.from_list", false]], "from_name() (pytket.circuit.optype static method)": [[15, "pytket.circuit.OpType.from_name", false]], "from_pytketconfig() (pytket.config.pytket_config.pytketextconfig class method)": [[6, "pytket.config.pytket_config.PytketExtConfig.from_pytketconfig", false]], "from_readouts() (pytket.utils.outcomearray class method)": [[27, "pytket.utils.OutcomeArray.from_readouts", false]], "from_str() (pytket.backends.resulthandle.resulthandle class method)": [[1, "pytket.backends.resulthandle.ResultHandle.from_str", false]], "fsim() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.FSim", false]], "fullmappingpass() (in module pytket.passes)": [[17, "pytket.passes.FullMappingPass", false]], "fullpeepholeoptimise() (in module pytket.passes)": [[17, "pytket.passes.FullPeepholeOptimise", false]], "fullyconnected (class in pytket.architecture)": [[0, "pytket.architecture.FullyConnected", false]], "func_name (pytket.circuit.wasmop property)": [[3, "pytket.circuit.WASMOp.func_name", false]], "gadgetise_interior_paulis() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.gadgetise_interior_paulis", false]], "gate (pytket.circuit.customgate property)": [[3, "pytket.circuit.CustomGate.gate", false]], "gate_counts() (in module pytket.utils.stats)": [[27, "pytket.utils.stats.gate_counts", false]], "gatesetpredicate (class in pytket.predicates)": [[20, "pytket.predicates.GateSetPredicate", false]], "gen_term_sequence_circuit() (in module pytket.utils)": [[27, "pytket.utils.gen_term_sequence_circuit", false]], "geq (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.GEQ", false]], "get_action() (pytket.circuit.conjugationbox method)": [[3, "pytket.circuit.ConjugationBox.get_action", false]], "get_adjacent_nodes() (pytket.architecture.architecture method)": [[0, "pytket.architecture.Architecture.get_adjacent_nodes", false]], "get_all_circuits() (pytket.tailoring.framerandomisation method)": [[24, "pytket.tailoring.FrameRandomisation.get_all_circuits", false]], "get_all_circuits() (pytket.tailoring.pauliframerandomisation method)": [[24, "pytket.tailoring.PauliFrameRandomisation.get_all_circuits", false]], "get_all_circuits() (pytket.tailoring.universalframerandomisation method)": [[24, "pytket.tailoring.UniversalFrameRandomisation.get_all_circuits", false]], "get_bitlist() (pytket.backends.backendresult.backendresult method)": [[1, "pytket.backends.backendresult.BackendResult.get_bitlist", false]], "get_bitstring_op_pair_list() (pytket.circuit.multiplexedrotationbox method)": [[3, "pytket.circuit.MultiplexedRotationBox.get_bitstring_op_pair_list", false]], "get_bitstring_op_pair_list() (pytket.circuit.multiplexedtensoredu2box method)": [[3, "pytket.circuit.MultiplexedTensoredU2Box.get_bitstring_op_pair_list", false]], "get_bitstring_op_pair_list() (pytket.circuit.multiplexedu2box method)": [[3, "pytket.circuit.MultiplexedU2Box.get_bitstring_op_pair_list", false]], "get_bitstring_op_pair_list() (pytket.circuit.multiplexorbox method)": [[3, "pytket.circuit.MultiplexorBox.get_bitstring_op_pair_list", false]], "get_boundary() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.get_boundary", false]], "get_c_register() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.get_c_register", false]], "get_circuit() (pytket.tableau.unitarytableaubox method)": [[23, "pytket.tableau.UnitaryTableauBox.get_circuit", false]], "get_circuit() (pytket.circuit.circbox method)": [[3, "pytket.circuit.CircBox.get_circuit", false]], "get_circuit() (pytket.circuit.conjugationbox method)": [[3, "pytket.circuit.ConjugationBox.get_circuit", false]], "get_circuit() (pytket.circuit.customgate method)": [[3, "pytket.circuit.CustomGate.get_circuit", false]], "get_circuit() (pytket.circuit.diagonalbox method)": [[3, "pytket.circuit.DiagonalBox.get_circuit", false]], "get_circuit() (pytket.circuit.expbox method)": [[3, "pytket.circuit.ExpBox.get_circuit", false]], "get_circuit() (pytket.circuit.multiplexedrotationbox method)": [[3, "pytket.circuit.MultiplexedRotationBox.get_circuit", false]], "get_circuit() (pytket.circuit.multiplexedtensoredu2box method)": [[3, "pytket.circuit.MultiplexedTensoredU2Box.get_circuit", false]], "get_circuit() (pytket.circuit.multiplexedu2box method)": [[3, "pytket.circuit.MultiplexedU2Box.get_circuit", false]], "get_circuit() (pytket.circuit.multiplexorbox method)": [[3, "pytket.circuit.MultiplexorBox.get_circuit", false]], "get_circuit() (pytket.circuit.pauliexpbox method)": [[3, "pytket.circuit.PauliExpBox.get_circuit", false]], "get_circuit() (pytket.circuit.pauliexpcommutingsetbox method)": [[3, "pytket.circuit.PauliExpCommutingSetBox.get_circuit", false]], "get_circuit() (pytket.circuit.pauliexppairbox method)": [[3, "pytket.circuit.PauliExpPairBox.get_circuit", false]], "get_circuit() (pytket.circuit.phasepolybox method)": [[3, "pytket.circuit.PhasePolyBox.get_circuit", false]], "get_circuit() (pytket.circuit.projectorassertionbox method)": [[3, "pytket.circuit.ProjectorAssertionBox.get_circuit", false]], "get_circuit() (pytket.circuit.qcontrolbox method)": [[3, "pytket.circuit.QControlBox.get_circuit", false]], "get_circuit() (pytket.circuit.stabiliserassertionbox method)": [[3, "pytket.circuit.StabiliserAssertionBox.get_circuit", false]], "get_circuit() (pytket.circuit.statepreparationbox method)": [[3, "pytket.circuit.StatePreparationBox.get_circuit", false]], "get_circuit() (pytket.circuit.termsequencebox method)": [[3, "pytket.circuit.TermSequenceBox.get_circuit", false]], "get_circuit() (pytket.circuit.toffolibox method)": [[3, "pytket.circuit.ToffoliBox.get_circuit", false]], "get_circuit() (pytket.circuit.unitary1qbox method)": [[3, "pytket.circuit.Unitary1qBox.get_circuit", false]], "get_circuit() (pytket.circuit.unitary2qbox method)": [[3, "pytket.circuit.Unitary2qBox.get_circuit", false]], "get_circuit() (pytket.circuit.unitary3qbox method)": [[3, "pytket.circuit.Unitary3qBox.get_circuit", false]], "get_circuit_renderer() (in module pytket.circuit.display)": [[7, "pytket.circuit.display.get_circuit_renderer", false]], "get_commands() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.get_commands", false]], "get_compiled_circuit() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.get_compiled_circuit", false]], "get_compiled_circuits() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.get_compiled_circuits", false]], "get_compute() (pytket.circuit.conjugationbox method)": [[3, "pytket.circuit.ConjugationBox.get_compute", false]], "get_config_file_path() (in module pytket.config)": [[6, "pytket.config.get_config_file_path", false]], "get_control_state() (pytket.circuit.qcontrolbox method)": [[3, "pytket.circuit.QControlBox.get_control_state", false]], "get_control_state_bits() (pytket.circuit.qcontrolbox method)": [[3, "pytket.circuit.QControlBox.get_control_state_bits", false]], "get_counts() (pytket.backends.backendresult.backendresult method)": [[1, "pytket.backends.backendresult.BackendResult.get_counts", false]], "get_cx_config() (pytket.circuit.pauliexpbox method)": [[3, "pytket.circuit.PauliExpBox.get_cx_config", false]], "get_cx_config() (pytket.circuit.pauliexpcommutingsetbox method)": [[3, "pytket.circuit.PauliExpCommutingSetBox.get_cx_config", false]], "get_cx_config() (pytket.circuit.pauliexppairbox method)": [[3, "pytket.circuit.PauliExpPairBox.get_cx_config", false]], "get_cx_config() (pytket.circuit.termsequencebox method)": [[3, "pytket.circuit.TermSequenceBox.get_cx_config", false]], "get_dag() (pytket.utils.graph method)": [[27, "pytket.utils.Graph.get_DAG", false]], "get_debug_info() (pytket.backends.backendresult.backendresult method)": [[1, "pytket.backends.backendresult.BackendResult.get_debug_info", false]], "get_density_matrix() (pytket.backends.backendresult.backendresult method)": [[1, "pytket.backends.backendresult.BackendResult.get_density_matrix", false]], "get_depth_weight() (pytket.circuit.termsequencebox method)": [[3, "pytket.circuit.TermSequenceBox.get_depth_weight", false]], "get_diagonal() (pytket.circuit.diagonalbox method)": [[3, "pytket.circuit.DiagonalBox.get_diagonal", false]], "get_dict() (pytket.utils.qubitpaulioperator method)": [[27, "pytket.utils.QubitPauliOperator.get_dict", false]], "get_distance() (pytket.architecture.architecture method)": [[0, "pytket.architecture.Architecture.get_distance", false]], "get_distribution() (pytket.backends.backendresult.backendresult method)": [[1, "pytket.backends.backendresult.BackendResult.get_distribution", false]], "get_empirical_distribution() (pytket.backends.backendresult.backendresult method)": [[1, "pytket.backends.backendresult.BackendResult.get_empirical_distribution", false]], "get_exp() (pytket.circuit.classicalexpbox method)": [[3, "pytket.circuit.ClassicalExpBox.get_exp", false]], "get_func() (pytket.utils.symbolic.symgateregister class method)": [[27, "pytket.utils.symbolic.SymGateRegister.get_func", false]], "get_gate_depth() (pytket.circuit.resourcedata method)": [[3, "pytket.circuit.ResourceData.get_gate_depth", false]], "get_gate_set() (pytket.passes.basepass method)": [[17, "pytket.passes.BasePass.get_gate_set", false]], "get_graph_colouring_method() (pytket.circuit.termsequencebox method)": [[3, "pytket.circuit.TermSequenceBox.get_graph_colouring_method", false]], "get_impl_diag() (pytket.circuit.multiplexedu2box method)": [[3, "pytket.circuit.MultiplexedU2Box.get_impl_diag", false]], "get_matrix() (pytket.circuit.projectorassertionbox method)": [[3, "pytket.circuit.ProjectorAssertionBox.get_matrix", false]], "get_matrix() (pytket.circuit.unitary1qbox method)": [[3, "pytket.circuit.Unitary1qBox.get_matrix", false]], "get_matrix() (pytket.circuit.unitary2qbox method)": [[3, "pytket.circuit.Unitary2qBox.get_matrix", false]], "get_matrix() (pytket.circuit.unitary3qbox method)": [[3, "pytket.circuit.Unitary3qBox.get_matrix", false]], "get_max() (pytket.circuit.resourcebounds method)": [[3, "pytket.circuit.ResourceBounds.get_max", false]], "get_metric() (pytket.passes.repeatwithmetricpass method)": [[17, "pytket.passes.RepeatWithMetricPass.get_metric", false]], "get_min() (pytket.circuit.resourcebounds method)": [[3, "pytket.circuit.ResourceBounds.get_min", false]], "get_misc() (pytket.backends.backendinfo.backendinfo method)": [[1, "pytket.backends.backendinfo.BackendInfo.get_misc", false]], "get_n_bits() (pytket.circuit.dummybox method)": [[3, "pytket.circuit.DummyBox.get_n_bits", false]], "get_n_controls() (pytket.circuit.qcontrolbox method)": [[3, "pytket.circuit.QControlBox.get_n_controls", false]], "get_n_i() (pytket.circuit.classicalexpbox method)": [[3, "pytket.circuit.ClassicalExpBox.get_n_i", false]], "get_n_io() (pytket.circuit.classicalexpbox method)": [[3, "pytket.circuit.ClassicalExpBox.get_n_io", false]], "get_n_o() (pytket.circuit.classicalexpbox method)": [[3, "pytket.circuit.ClassicalExpBox.get_n_o", false]], "get_n_qubits() (pytket.circuit.dummybox method)": [[3, "pytket.circuit.DummyBox.get_n_qubits", false]], "get_name() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.get_name", false]], "get_name() (pytket.circuit.op method)": [[3, "pytket.circuit.Op.get_name", false]], "get_op() (pytket.circuit.qcontrolbox method)": [[3, "pytket.circuit.QControlBox.get_op", false]], "get_op_map() (pytket.circuit.multiplexedrotationbox method)": [[3, "pytket.circuit.MultiplexedRotationBox.get_op_map", false]], "get_op_map() (pytket.circuit.multiplexedtensoredu2box method)": [[3, "pytket.circuit.MultiplexedTensoredU2Box.get_op_map", false]], "get_op_map() (pytket.circuit.multiplexedu2box method)": [[3, "pytket.circuit.MultiplexedU2Box.get_op_map", false]], "get_op_map() (pytket.circuit.multiplexorbox method)": [[3, "pytket.circuit.MultiplexorBox.get_op_map", false]], "get_op_type_count() (pytket.circuit.resourcedata method)": [[3, "pytket.circuit.ResourceData.get_op_type_count", false]], "get_op_type_depth() (pytket.circuit.resourcedata method)": [[3, "pytket.circuit.ResourceData.get_op_type_depth", false]], "get_operator_expectation_value() (in module pytket.utils)": [[27, "pytket.utils.get_operator_expectation_value", false]], "get_parallel_measure() (pytket.utils.spam.spamcorrecter method)": [[27, "pytket.utils.spam.SpamCorrecter.get_parallel_measure", false]], "get_partition_strategy() (pytket.circuit.termsequencebox method)": [[3, "pytket.circuit.TermSequenceBox.get_partition_strategy", false]], "get_pass() (pytket.passes.repeatpass method)": [[17, "pytket.passes.RepeatPass.get_pass", false]], "get_pass() (pytket.passes.repeatuntilsatisfiedpass method)": [[17, "pytket.passes.RepeatUntilSatisfiedPass.get_pass", false]], "get_pass() (pytket.passes.repeatwithmetricpass method)": [[17, "pytket.passes.RepeatWithMetricPass.get_pass", false]], "get_pauli_expectation_value() (in module pytket.utils)": [[27, "pytket.utils.get_pauli_expectation_value", false]], "get_paulis() (pytket.circuit.pauliexpbox method)": [[3, "pytket.circuit.PauliExpBox.get_paulis", false]], "get_paulis() (pytket.circuit.pauliexpcommutingsetbox method)": [[3, "pytket.circuit.PauliExpCommutingSetBox.get_paulis", false]], "get_paulis() (pytket.circuit.termsequencebox method)": [[3, "pytket.circuit.TermSequenceBox.get_paulis", false]], "get_paulis_pair() (pytket.circuit.pauliexppairbox method)": [[3, "pytket.circuit.PauliExpPairBox.get_paulis_pair", false]], "get_permutation() (pytket.circuit.toffolibox method)": [[3, "pytket.circuit.ToffoliBox.get_permutation", false]], "get_phase() (pytket.circuit.pauliexpbox method)": [[3, "pytket.circuit.PauliExpBox.get_phase", false]], "get_phase_pair() (pytket.circuit.pauliexppairbox method)": [[3, "pytket.circuit.PauliExpPairBox.get_phase_pair", false]], "get_placement_map() (pytket.placement.placement method)": [[19, "pytket.placement.Placement.get_placement_map", false]], "get_placement_maps() (pytket.placement.placement method)": [[19, "pytket.placement.Placement.get_placement_maps", false]], "get_postconditions() (pytket.passes.basepass method)": [[17, "pytket.passes.BasePass.get_postconditions", false]], "get_preconditions() (pytket.passes.basepass method)": [[17, "pytket.passes.BasePass.get_preconditions", false]], "get_predicate() (pytket.passes.repeatuntilsatisfiedpass method)": [[17, "pytket.passes.RepeatUntilSatisfiedPass.get_predicate", false]], "get_probability_distribution() (pytket.backends.backendresult.backendresult method)": [[1, "pytket.backends.backendresult.BackendResult.get_probability_distribution", false]], "get_q_register() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.get_q_register", false]], "get_qbitlist() (pytket.backends.backendresult.backendresult method)": [[1, "pytket.backends.backendresult.BackendResult.get_qbitlist", false]], "get_qtype() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.get_qtype", false]], "get_qubit_graph() (pytket.utils.graph method)": [[27, "pytket.utils.Graph.get_qubit_graph", false]], "get_render_options() (pytket.circuit.display.circuitrenderer method)": [[7, "pytket.circuit.display.CircuitRenderer.get_render_options", false]], "get_resource_data() (pytket.circuit.dummybox method)": [[3, "pytket.circuit.DummyBox.get_resource_data", false]], "get_resources() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.get_resources", false]], "get_result() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.get_result", false]], "get_result() (pytket.backends.backendresult.backendresult method)": [[1, "pytket.backends.backendresult.BackendResult.get_result", false]], "get_results() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.get_results", false]], "get_rotation_axis() (pytket.circuit.toffolibox method)": [[3, "pytket.circuit.ToffoliBox.get_rotation_axis", false]], "get_row_product() (pytket.tableau.unitaryrevtableau method)": [[23, "pytket.tableau.UnitaryRevTableau.get_row_product", false]], "get_row_product() (pytket.tableau.unitarytableau method)": [[23, "pytket.tableau.UnitaryTableau.get_row_product", false]], "get_scores() (pytket.passes.passselector method)": [[17, "pytket.passes.PassSelector.get_scores", false]], "get_sequence() (pytket.passes.sequencepass method)": [[17, "pytket.passes.SequencePass.get_sequence", false]], "get_shots() (pytket.backends.backendresult.backendresult method)": [[1, "pytket.backends.backendresult.BackendResult.get_shots", false]], "get_stabilisers() (pytket.circuit.stabiliserassertionbox method)": [[3, "pytket.circuit.StabiliserAssertionBox.get_stabilisers", false]], "get_state() (pytket.backends.backendresult.backendresult method)": [[1, "pytket.backends.backendresult.BackendResult.get_state", false]], "get_statevector() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.get_statevector", false]], "get_statevector() (pytket.circuit.statepreparationbox method)": [[3, "pytket.circuit.StatePreparationBox.get_statevector", false]], "get_strat() (pytket.circuit.toffolibox method)": [[3, "pytket.circuit.ToffoliBox.get_strat", false]], "get_synthesis_strategy() (pytket.circuit.termsequencebox method)": [[3, "pytket.circuit.TermSequenceBox.get_synthesis_strategy", false]], "get_tableau() (pytket.tableau.unitarytableaubox method)": [[23, "pytket.tableau.UnitaryTableauBox.get_tableau", false]], "get_two_qubit_gate_depth() (pytket.circuit.resourcedata method)": [[3, "pytket.circuit.ResourceData.get_two_qubit_gate_depth", false]], "get_uncompute() (pytket.circuit.conjugationbox method)": [[3, "pytket.circuit.ConjugationBox.get_uncompute", false]], "get_unitary() (pytket.backends.backendresult.backendresult method)": [[1, "pytket.backends.backendresult.BackendResult.get_unitary", false]], "get_unitary() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.get_unitary", false]], "get_unitary() (pytket.circuit.op method)": [[3, "pytket.circuit.Op.get_unitary", false]], "get_unitary_times_other() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.get_unitary_times_other", false]], "get_vertex_zxgen() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.get_vertex_ZXGen", false]], "get_wire_ends() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.get_wire_ends", false]], "get_wire_qtype() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.get_wire_qtype", false]], "get_wire_type() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.get_wire_type", false]], "get_xrow() (pytket.tableau.unitaryrevtableau method)": [[23, "pytket.tableau.UnitaryRevTableau.get_xrow", false]], "get_xrow() (pytket.tableau.unitarytableau method)": [[23, "pytket.tableau.UnitaryTableau.get_xrow", false]], "get_zrow() (pytket.tableau.unitaryrevtableau method)": [[23, "pytket.tableau.UnitaryRevTableau.get_zrow", false]], "get_zrow() (pytket.tableau.unitarytableau method)": [[23, "pytket.tableau.UnitaryTableau.get_zrow", false]], "get_zxtype() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.get_zxtype", false]], "globalisephasedx() (in module pytket.passes)": [[17, "pytket.passes.GlobalisePhasedX", false]], "globalisephasedx() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.GlobalisePhasedX", false]], "gpi() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.GPI", false]], "gpi2() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.GPI2", false]], "graph (class in pytket.utils)": [[27, "pytket.utils.Graph", false]], "graphcolourmethod (class in pytket.partition)": [[16, "pytket.partition.GraphColourMethod", false]], "graphplacement (class in pytket.placement)": [[19, "pytket.placement.GraphPlacement", false]], "greedypaulisimp() (in module pytket.passes)": [[17, "pytket.passes.GreedyPauliSimp", false]], "greedypaulisimp() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.GreedyPauliSimp", false]], "gt (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.GT", false]], "guidedpaulisimp() (in module pytket.passes)": [[17, "pytket.passes.GuidedPauliSimp", false]], "h() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.H", false]], "identify_causal_flow() (pytket.zx.flow static method)": [[29, "pytket.zx.Flow.identify_causal_flow", false]], "identify_focussed_sets() (pytket.zx.flow static method)": [[29, "pytket.zx.Flow.identify_focussed_sets", false]], "identify_pauli_flow() (pytket.zx.flow static method)": [[29, "pytket.zx.Flow.identify_pauli_flow", false]], "if_bit() (in module pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.if_bit", false]], "if_not_bit() (in module pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.if_not_bit", false]], "implicit_qubit_permutation() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.implicit_qubit_permutation", false]], "implies() (pytket.predicates.predicate method)": [[20, "pytket.predicates.Predicate.implies", false]], "index (pytket.unit_id.unitid property)": [[26, "pytket.unit_id.UnitID.index", false]], "index (pytket.circuit.clbitvar property)": [[3, "pytket.circuit.ClBitVar.index", false]], "index (pytket.circuit.clregvar property)": [[3, "pytket.circuit.ClRegVar.index", false]], "initial_map (pytket.predicates.compilationunit property)": [[20, "pytket.predicates.CompilationUnit.initial_map", false]], "input_widths (pytket.circuit.wasmop property)": [[3, "pytket.circuit.WASMOp.input_widths", false]], "internalise_gadgets() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.internalise_gadgets", false]], "invert (pytket.partition.measurementbitmap property)": [[16, "pytket.partition.MeasurementBitMap.invert", false]], "io_extension() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.io_extension", false]], "is_clifford() (pytket.circuit.op method)": [[3, "pytket.circuit.Op.is_clifford", false]], "is_clifford_type() (pytket.circuit.op method)": [[3, "pytket.circuit.Op.is_clifford_type", false]], "is_gate() (pytket.circuit.op method)": [[3, "pytket.circuit.Op.is_gate", false]], "is_inverse() (pytket.circuit.statepreparationbox method)": [[3, "pytket.circuit.StatePreparationBox.is_inverse", false]], "is_registered() (pytket.utils.symbolic.symgateregister class method)": [[27, "pytket.utils.symbolic.SymGateRegister.is_registered", false]], "is_simple (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.is_simple", false]], "is_symbolic() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.is_symbolic", false]], "is_upper_triangle() (pytket.circuit.diagonalbox method)": [[3, "pytket.circuit.DiagonalBox.is_upper_triangle", false]], "iswap() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.ISWAP", false]], "iswapmax() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.ISWAPMax", false]], "kakdecomposition() (in module pytket.passes)": [[17, "pytket.passes.KAKDecomposition", false]], "kakdecomposition() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.KAKDecomposition", false]], "leq (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.LEQ", false]], "level (class in pytket.logging)": [[13, "pytket.logging.level", false]], "lexilabellingmethod (class in pytket.mapping)": [[14, "pytket.mapping.LexiLabellingMethod", false]], "lexirouteroutingmethod (class in pytket.mapping)": [[14, "pytket.mapping.LexiRouteRoutingMethod", false]], "linear_transformation (pytket.circuit.phasepolybox property)": [[3, "pytket.circuit.PhasePolyBox.linear_transformation", false]], "lineplacement (class in pytket.placement)": [[19, "pytket.placement.LinePlacement", false]], "load_config_file() (in module pytket.config)": [[6, "pytket.config.load_config_file", false]], "logicexp (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.LogicExp", false]], "lower (pytket.circuit.rangepredicateop property)": [[3, "pytket.circuit.RangePredicateOp.lower", false]], "lsh (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.LSH", false]], "lt (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.LT", false]], "map (pytket.pauli.qubitpaulistring property)": [[18, "pytket.pauli.QubitPauliString.map", false]], "map() (pytket.utils.distribution.empiricaldistribution method)": [[27, "pytket.utils.distribution.EmpiricalDistribution.map", false]], "map() (pytket.utils.distribution.probabilitydistribution method)": [[27, "pytket.utils.distribution.ProbabilityDistribution.map", false]], "mappingmanager (class in pytket.mapping)": [[14, "pytket.mapping.MappingManager", false]], "maxnclregpredicate (class in pytket.predicates)": [[20, "pytket.predicates.MaxNClRegPredicate", false]], "maxnqubitspredicate (class in pytket.predicates)": [[20, "pytket.predicates.MaxNQubitsPredicate", false]], "maxtwoqubitgatespredicate (class in pytket.predicates)": [[20, "pytket.predicates.MaxTwoQubitGatesPredicate", false]], "measure() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.Measure", false]], "measure_all() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.measure_all", false]], "measure_register() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.measure_register", false]], "measurement_circs (pytket.partition.measurementsetup property)": [[16, "pytket.partition.MeasurementSetup.measurement_circs", false]], "measurement_reduction() (in module pytket.partition)": [[16, "pytket.partition.measurement_reduction", false]], "measurementbitmap (class in pytket.partition)": [[16, "pytket.partition.MeasurementBitMap", false]], "measurementsetup (class in pytket.partition)": [[16, "pytket.partition.MeasurementSetup", false]], "merge_gadgets() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.merge_gadgets", false]], "message (pytket.backends.status.circuitstatus attribute)": [[1, "pytket.backends.status.CircuitStatus.message", false]], "modify_config() (pytket.placement.graphplacement method)": [[19, "pytket.placement.GraphPlacement.modify_config", false]], "modify_config() (pytket.placement.noiseawareplacement method)": [[19, "pytket.placement.NoiseAwarePlacement.modify_config", false]], "module": [[0, "module-pytket.architecture", false], [1, "module-pytket.backends", false], [1, "module-pytket.backends.backendinfo", false], [1, "module-pytket.backends.backendresult", false], [1, "module-pytket.backends.resulthandle", false], [1, "module-pytket.backends.status", false], [3, "module-pytket.circuit", false], [5, "module-pytket.circuit.logic_exp", false], [6, "module-pytket.config", false], [7, "module-pytket.circuit.display", false], [13, "module-pytket.logging", false], [14, "module-pytket.mapping", false], [16, "module-pytket.partition", false], [17, "module-pytket.passes", false], [17, "module-pytket.passes.script", false], [18, "module-pytket.pauli", false], [19, "module-pytket.placement", false], [20, "module-pytket.predicates", false], [21, "module-pytket.qasm", false], [22, "module-pytket.quipper", false], [23, "module-pytket.tableau", false], [24, "module-pytket.tailoring", false], [25, "module-pytket.transform", false], [26, "module-pytket.unit_id", false], [27, "module-pytket.utils", false], [27, "module-pytket.utils.distribution", false], [27, "module-pytket.utils.spam", false], [27, "module-pytket.utils.stats", false], [27, "module-pytket.utils.symbolic", false], [28, "module-pytket.wasm", false], [29, "module-pytket.zx", false]], "mul (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.MUL", false]], "multibitop (class in pytket.circuit)": [[3, "pytket.circuit.MultiBitOp", false]], "multigatereorderroutingmethod (class in pytket.mapping)": [[14, "pytket.mapping.MultiGateReorderRoutingMethod", false]], "multiplexedrotationbox (class in pytket.circuit)": [[3, "pytket.circuit.MultiplexedRotationBox", false]], "multiplexedtensoredu2box (class in pytket.circuit)": [[3, "pytket.circuit.MultiplexedTensoredU2Box", false]], "multiplexedu2box (class in pytket.circuit)": [[3, "pytket.circuit.MultiplexedU2Box", false]], "multiplexorbox (class in pytket.circuit)": [[3, "pytket.circuit.MultiplexorBox", false]], "multiply_scalar() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.multiply_scalar", false]], "n_1qb_gates() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.n_1qb_gates", false]], "n_2qb_gates() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.n_2qb_gates", false]], "n_bits (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.n_bits", false]], "n_gates (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.n_gates", false]], "n_gates_of_type() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.n_gates_of_type", false]], "n_i32 (pytket.circuit.wasmop property)": [[3, "pytket.circuit.WASMOp.n_i32", false]], "n_input_outputs (pytket.circuit.classicalop property)": [[3, "pytket.circuit.ClassicalOp.n_input_outputs", false]], "n_inputs (pytket.circuit.classicalop property)": [[3, "pytket.circuit.ClassicalOp.n_inputs", false]], "n_nodes (pytket.backends.backendinfo.backendinfo property)": [[1, "pytket.backends.backendinfo.BackendInfo.n_nodes", false]], "n_nqb_gates() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.n_nqb_gates", false]], "n_outcomes (pytket.utils.outcomearray property)": [[27, "pytket.utils.OutcomeArray.n_outcomes", false]], "n_outputs (pytket.circuit.classicalop property)": [[3, "pytket.circuit.ClassicalOp.n_outputs", false]], "n_ports (pytket.zx.directedgen property)": [[29, "pytket.zx.DirectedGen.n_ports", false]], "n_ports (pytket.zx.zxbox property)": [[29, "pytket.zx.ZXBox.n_ports", false]], "n_qubits (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.n_qubits", false]], "n_qubits (pytket.circuit.op property)": [[3, "pytket.circuit.Op.n_qubits", false]], "n_qubits (pytket.circuit.phasepolybox property)": [[3, "pytket.circuit.PhasePolyBox.n_qubits", false]], "n_vertices (pytket.zx.zxdiagram property)": [[29, "pytket.zx.ZXDiagram.n_vertices", false]], "n_wires (pytket.zx.zxdiagram property)": [[29, "pytket.zx.ZXDiagram.n_wires", false]], "naiveplacementpass() (in module pytket.passes)": [[17, "pytket.passes.NaivePlacementPass", false]], "name (pytket.circuit.optype property)": [[15, "pytket.circuit.OpType.name", false]], "name (pytket.logging.level property)": [[13, "pytket.logging.level.name", false]], "name (pytket.partition.graphcolourmethod property)": [[16, "pytket.partition.GraphColourMethod.name", false]], "name (pytket.partition.paulipartitionstrat property)": [[16, "pytket.partition.PauliPartitionStrat.name", false]], "name (pytket.passes.cnotsynthtype property)": [[17, "pytket.passes.CNotSynthType.name", false]], "name (pytket.passes.safetymode property)": [[17, "pytket.passes.SafetyMode.name", false]], "name (pytket.pauli.pauli property)": [[18, "pytket.pauli.Pauli.name", false]], "name (pytket.transform.paulisynthstrat property)": [[25, "pytket.transform.PauliSynthStrat.name", false]], "name (pytket.unit_id.bitregister property)": [[26, "pytket.unit_id.BitRegister.name", false]], "name (pytket.unit_id.qubitregister property)": [[26, "pytket.unit_id.QubitRegister.name", false]], "name (pytket.unit_id.unittype property)": [[26, "pytket.unit_id.UnitType.name", false]], "name (pytket.zx.quantumtype property)": [[29, "pytket.zx.QuantumType.name", false]], "name (pytket.zx.zxtype property)": [[29, "pytket.zx.ZXType.name", false]], "name (pytket.zx.zxwiretype property)": [[29, "pytket.zx.ZXWireType.name", false]], "name (pytket.circuit.basisorder property)": [[3, "pytket.circuit.BasisOrder.name", false]], "name (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.name", false]], "name (pytket.circuit.clop property)": [[3, "pytket.circuit.ClOp.name", false]], "name (pytket.circuit.customgate property)": [[3, "pytket.circuit.CustomGate.name", false]], "name (pytket.circuit.customgatedef property)": [[3, "pytket.circuit.CustomGateDef.name", false]], "name (pytket.circuit.cxconfigtype property)": [[3, "pytket.circuit.CXConfigType.name", false]], "name (pytket.circuit.toffoliboxsynthstrat property)": [[3, "pytket.circuit.ToffoliBoxSynthStrat.name", false]], "neighbours() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.neighbours", false]], "neq (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.Neq", false]], "neq (pytket.circuit.logic_exp.bitwiseop attribute)": [[5, "pytket.circuit.logic_exp.BitWiseOp.NEQ", false]], "neq (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.NEQ", false]], "nobarrierspredicate (class in pytket.predicates)": [[20, "pytket.predicates.NoBarriersPredicate", false]], "noclassicalbitspredicate (class in pytket.predicates)": [[20, "pytket.predicates.NoClassicalBitsPredicate", false]], "noclassicalcontrolpredicate (class in pytket.predicates)": [[20, "pytket.predicates.NoClassicalControlPredicate", false]], "node (class in pytket.unit_id)": [[26, "pytket.unit_id.Node", false]], "nodes (pytket.architecture.architecture property)": [[0, "pytket.architecture.Architecture.nodes", false]], "nodes (pytket.architecture.fullyconnected property)": [[0, "pytket.architecture.FullyConnected.nodes", false]], "nodes (pytket.backends.backendinfo.backendinfo property)": [[1, "pytket.backends.backendinfo.BackendInfo.nodes", false]], "nofastfeedforwardpredicate (class in pytket.predicates)": [[20, "pytket.predicates.NoFastFeedforwardPredicate", false]], "noiseawareplacement (class in pytket.placement)": [[19, "pytket.placement.NoiseAwarePlacement", false]], "nomidmeasurepredicate (class in pytket.predicates)": [[20, "pytket.predicates.NoMidMeasurePredicate", false]], "normalisedtk2predicate (class in pytket.predicates)": [[20, "pytket.predicates.NormalisedTK2Predicate", false]], "normalisetk2() (in module pytket.passes)": [[17, "pytket.passes.NormaliseTK2", false]], "normalisetk2() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.NormaliseTK2", false]], "nosymbolspredicate (class in pytket.predicates)": [[20, "pytket.predicates.NoSymbolsPredicate", false]], "not (pytket.circuit.logic_exp.bitwiseop attribute)": [[5, "pytket.circuit.logic_exp.BitWiseOp.NOT", false]], "not (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.NOT", false]], "nowireswapspredicate (class in pytket.predicates)": [[20, "pytket.predicates.NoWireSwapsPredicate", false]], "nullaryop (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.NullaryOp", false]], "num_bits (pytket.circuit.wasmop property)": [[3, "pytket.circuit.WASMOp.num_bits", false]], "num_w (pytket.circuit.wasmop property)": [[3, "pytket.circuit.WASMOp.num_w", false]], "odd() (pytket.zx.flow method)": [[29, "pytket.zx.Flow.odd", false]], "one (pytket.circuit.logic_exp.bitwiseop attribute)": [[5, "pytket.circuit.logic_exp.BitWiseOp.ONE", false]], "op (class in pytket.circuit)": [[3, "pytket.circuit.Op", false]], "op (pytket.circuit.clexpr property)": [[3, "pytket.circuit.ClExpr.op", false]], "op (pytket.circuit.command property)": [[3, "pytket.circuit.Command.op", false]], "op (pytket.circuit.conditional property)": [[3, "pytket.circuit.Conditional.op", false]], "opgroup (pytket.circuit.command property)": [[3, "pytket.circuit.Command.opgroup", false]], "opgroups (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.opgroups", false]], "ops_of_type() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.ops_of_type", false]], "optimisecliffords() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.OptimiseCliffords", false]], "optimisepauligadgets() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.OptimisePauliGadgets", false]], "optimisephasegadgets() (in module pytket.passes)": [[17, "pytket.passes.OptimisePhaseGadgets", false]], "optimisephasegadgets() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.OptimisePhaseGadgets", false]], "optimisepostrouting() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.OptimisePostRouting", false]], "optimisestandard() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.OptimiseStandard", false]], "optype (class in pytket.circuit)": [[15, "pytket.circuit.OpType", false]], "or (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.Or", false]], "or (pytket.circuit.logic_exp.bitwiseop attribute)": [[5, "pytket.circuit.logic_exp.BitWiseOp.OR", false]], "or (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.OR", false]], "other_end() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.other_end", false]], "outcomearray (class in pytket.utils)": [[27, "pytket.utils.OutcomeArray", false]], "output_posn (pytket.circuit.wiredclexpr property)": [[3, "pytket.circuit.WiredClExpr.output_posn", false]], "output_widths (pytket.circuit.wasmop property)": [[3, "pytket.circuit.WASMOp.output_widths", false]], "parallel_h_removal() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.parallel_h_removal", false]], "param (pytket.zx.cliffordgen property)": [[29, "pytket.zx.CliffordGen.param", false]], "param (pytket.zx.phasedgen property)": [[29, "pytket.zx.PhasedGen.param", false]], "params (pytket.circuit.customgate property)": [[3, "pytket.circuit.CustomGate.params", false]], "params (pytket.circuit.op property)": [[3, "pytket.circuit.Op.params", false]], "passselector (class in pytket.passes)": [[17, "pytket.passes.PassSelector", false]], "pauli (class in pytket.pauli)": [[18, "pytket.pauli.Pauli", false]], "pauli_string_mult() (in module pytket.pauli)": [[18, "pytket.pauli.pauli_string_mult", false]], "pauliexpbox (class in pytket.circuit)": [[3, "pytket.circuit.PauliExpBox", false]], "pauliexpcommutingsetbox (class in pytket.circuit)": [[3, "pytket.circuit.PauliExpCommutingSetBox", false]], "pauliexponentials() (in module pytket.passes)": [[17, "pytket.passes.PauliExponentials", false]], "pauliexppairbox (class in pytket.circuit)": [[3, "pytket.circuit.PauliExpPairBox", false]], "pauliframerandomisation (class in pytket.tailoring)": [[24, "pytket.tailoring.PauliFrameRandomisation", false]], "paulipartitionstrat (class in pytket.partition)": [[16, "pytket.partition.PauliPartitionStrat", false]], "paulisimp() (in module pytket.passes)": [[17, "pytket.passes.PauliSimp", false]], "paulisquash() (in module pytket.passes)": [[17, "pytket.passes.PauliSquash", false]], "paulistabiliser (class in pytket.pauli)": [[18, "pytket.pauli.PauliStabiliser", false]], "paulisynthstrat (class in pytket.transform)": [[25, "pytket.transform.PauliSynthStrat", false]], "peepholeoptimise2q() (in module pytket.passes)": [[17, "pytket.passes.PeepholeOptimise2Q", false]], "permute_basis_indexing() (in module pytket.utils)": [[27, "pytket.utils.permute_basis_indexing", false]], "permute_qubits_in_statevector() (in module pytket.utils)": [[27, "pytket.utils.permute_qubits_in_statevector", false]], "permute_rows_cols_in_unitary() (in module pytket.utils)": [[27, "pytket.utils.permute_rows_cols_in_unitary", false]], "persistent_handles (pytket.backends.backend property)": [[1, "pytket.backends.Backend.persistent_handles", false]], "phase (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.phase", false]], "phase() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.Phase", false]], "phase_polynomial (pytket.circuit.phasepolybox property)": [[3, "pytket.circuit.PhasePolyBox.phase_polynomial", false]], "phase_polynomial_as_list (pytket.circuit.phasepolybox property)": [[3, "pytket.circuit.PhasePolyBox.phase_polynomial_as_list", false]], "phasedgen (class in pytket.zx)": [[29, "pytket.zx.PhasedGen", false]], "phasediswap() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.PhasedISWAP", false]], "phasedx() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.PhasedX", false]], "phasepolybox (class in pytket.circuit)": [[3, "pytket.circuit.PhasePolyBox", false]], "place() (pytket.placement.placement method)": [[19, "pytket.placement.Placement.place", false]], "place_fully_connected() (in module pytket.placement)": [[19, "pytket.placement.place_fully_connected", false]], "place_with_map() (in module pytket.placement)": [[19, "pytket.placement.place_with_map", false]], "place_with_map() (pytket.placement.placement static method)": [[19, "pytket.placement.Placement.place_with_map", false]], "placement (class in pytket.placement)": [[19, "pytket.placement.Placement", false]], "placementpass() (in module pytket.passes)": [[17, "pytket.passes.PlacementPass", false]], "placementpredicate (class in pytket.predicates)": [[20, "pytket.predicates.PlacementPredicate", false]], "pop_result() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.pop_result", false]], "pow (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.POW", false]], "predicate (class in pytket.predicates)": [[20, "pytket.predicates.Predicate", false]], "predicateexp (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.PredicateExp", false]], "prepare_circuit() (in module pytket.utils)": [[27, "pytket.utils.prepare_circuit", false]], "probabilitydistribution (class in pytket.utils.distribution)": [[27, "pytket.utils.distribution.ProbabilityDistribution", false]], "probs_from_counts() (in module pytket.utils)": [[27, "pytket.utils.probs_from_counts", false]], "probs_from_state() (in module pytket.utils)": [[27, "pytket.utils.probs_from_state", false]], "process_circuit() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.process_circuit", false]], "process_circuits() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.process_circuits", false]], "projectorassertionbox (class in pytket.circuit)": [[3, "pytket.circuit.ProjectorAssertionBox", false]], "pushcliffordsthroughmeasures() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.PushCliffordsThroughMeasures", false]], "pytket.architecture": [[0, "module-pytket.architecture", false]], "pytket.circuit": [[3, "module-pytket.circuit", false]], "pytket.logging": [[13, "module-pytket.logging", false]], "pytket.mapping": [[14, "module-pytket.mapping", false]], "pytket.partition": [[16, "module-pytket.partition", false]], "pytket.passes": [[17, "module-pytket.passes", false]], "pytket.pauli": [[18, "module-pytket.pauli", false]], "pytket.placement": [[19, "module-pytket.placement", false]], "pytket.predicates": [[20, "module-pytket.predicates", false]], "pytket.tableau": [[23, "module-pytket.tableau", false]], "pytket.tailoring": [[24, "module-pytket.tailoring", false]], "pytket.transform": [[25, "module-pytket.transform", false]], "pytket.unit_id": [[26, "module-pytket.unit_id", false]], "pytket.zx": [[29, "module-pytket.zx", false]], "pytket.backends": [[1, "module-pytket.backends", false]], "pytket.backends.backendinfo": [[1, "module-pytket.backends.backendinfo", false]], "pytket.backends.backendresult": [[1, "module-pytket.backends.backendresult", false]], "pytket.backends.resulthandle": [[1, "module-pytket.backends.resulthandle", false]], "pytket.backends.status": [[1, "module-pytket.backends.status", false]], "pytket.circuit.display": [[7, "module-pytket.circuit.display", false]], "pytket.circuit.logic_exp": [[5, "module-pytket.circuit.logic_exp", false]], "pytket.config": [[6, "module-pytket.config", false]], "pytket.passes.script": [[17, "module-pytket.passes.script", false]], "pytket.qasm": [[21, "module-pytket.qasm", false]], "pytket.quipper": [[22, "module-pytket.quipper", false]], "pytket.utils": [[27, "module-pytket.utils", false]], "pytket.utils.distribution": [[27, "module-pytket.utils.distribution", false]], "pytket.utils.spam": [[27, "module-pytket.utils.spam", false]], "pytket.utils.stats": [[27, "module-pytket.utils.stats", false]], "pytket.utils.symbolic": [[27, "module-pytket.utils.symbolic", false]], "pytket.wasm": [[28, "module-pytket.wasm", false]], "pytketconfig (class in pytket.config.pytket_config)": [[6, "pytket.config.pytket_config.PytketConfig", false]], "pytketextconfig (class in pytket.config.pytket_config)": [[6, "pytket.config.pytket_config.PytketExtConfig", false]], "q_registers (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.q_registers", false]], "qcontrolbox (class in pytket.circuit)": [[3, "pytket.circuit.QControlBox", false]], "qind_to_squind() (pytket.architecture.squaregrid method)": [[0, "pytket.architecture.SquareGrid.qind_to_squind", false]], "qtype (pytket.zx.zxgen property)": [[29, "pytket.zx.ZXGen.qtype", false]], "quantumtype (class in pytket.zx)": [[29, "pytket.zx.QuantumType", false]], "qubit (class in pytket.unit_id)": [[26, "pytket.unit_id.Qubit", false]], "qubit_create() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.qubit_create", false]], "qubit_create_all() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.qubit_create_all", false]], "qubit_discard() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.qubit_discard", false]], "qubit_discard_all() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.qubit_discard_all", false]], "qubit_indices (pytket.circuit.phasepolybox property)": [[3, "pytket.circuit.PhasePolyBox.qubit_indices", false]], "qubit_is_created() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.qubit_is_created", false]], "qubit_is_discarded() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.qubit_is_discarded", false]], "qubit_readout (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.qubit_readout", false]], "qubit_to_bit_map (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.qubit_to_bit_map", false]], "qubitpaulioperator (class in pytket.utils)": [[27, "pytket.utils.QubitPauliOperator", false]], "qubitpaulistring (class in pytket.pauli)": [[18, "pytket.pauli.QubitPauliString", false]], "qubitpaulitensor (class in pytket.pauli)": [[18, "pytket.pauli.QubitPauliTensor", false]], "qubitregister (class in pytket.unit_id)": [[26, "pytket.unit_id.QubitRegister", false]], "qubits (pytket.circuit.circuit property)": [[4, "pytket.circuit.Circuit.qubits", false]], "qubits (pytket.circuit.command property)": [[3, "pytket.circuit.Command.qubits", false]], "queue_position (pytket.backends.status.circuitstatus attribute)": [[1, "pytket.backends.status.CircuitStatus.queue_position", false]], "queued (pytket.backends.status.statusenum attribute)": [[1, "pytket.backends.status.StatusEnum.QUEUED", false]], "queued_time (pytket.backends.status.circuitstatus attribute)": [[1, "pytket.backends.status.CircuitStatus.queued_time", false]], "rangepredicateop (class in pytket.circuit)": [[3, "pytket.circuit.RangePredicateOp", false]], "read_file() (pytket.config.pytket_config.pytketconfig class method)": [[6, "pytket.config.pytket_config.PytketConfig.read_file", false]], "readout_counts() (in module pytket.utils)": [[27, "pytket.utils.readout_counts", false]], "rebase_pass() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.rebase_pass", false]], "rebase_to_mbqc() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.rebase_to_mbqc", false]], "rebase_to_zx() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.rebase_to_zx", false]], "rebasecustom() (in module pytket.passes)": [[17, "pytket.passes.RebaseCustom", false]], "rebasetket() (in module pytket.passes)": [[17, "pytket.passes.RebaseTket", false]], "rebasetocirq() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.RebaseToCirq", false]], "rebasetocliffordsingles() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.RebaseToCliffordSingles", false]], "rebasetoionq() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.RebaseToIonQ", false]], "rebasetoprojectq() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.RebaseToProjectQ", false]], "rebasetopyzx() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.RebaseToPyZX", false]], "rebasetoquil() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.RebaseToQuil", false]], "rebasetorzrx() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.RebaseToRzRx", false]], "rebasetotket() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.RebaseToTket", false]], "red_to_green() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.red_to_green", false]], "reduce_graphlike_form() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.reduce_graphlike_form", false]], "reducesingles() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.ReduceSingles", false]], "reg_eq() (in module pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.reg_eq", false]], "reg_geq() (in module pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.reg_geq", false]], "reg_gt() (in module pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.reg_gt", false]], "reg_leq() (in module pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.reg_leq", false]], "reg_lt() (in module pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.reg_lt", false]], "reg_name (pytket.unit_id.unitid property)": [[26, "pytket.unit_id.UnitID.reg_name", false]], "reg_neq() (in module pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.reg_neq", false]], "reg_posn (pytket.circuit.wiredclexpr property)": [[3, "pytket.circuit.WiredClExpr.reg_posn", false]], "regadd (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegAdd", false]], "regand (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegAnd", false]], "regdiv (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegDiv", false]], "regeq (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegEq", false]], "reggeq (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegGeq", false]], "reggt (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegGt", false]], "register_func() (pytket.utils.symbolic.symgateregister class method)": [[27, "pytket.utils.symbolic.SymGateRegister.register_func", false]], "regleq (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegLeq", false]], "reglogicexp (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegLogicExp", false]], "reglsh (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegLsh", false]], "reglt (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegLt", false]], "regmul (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegMul", false]], "regneg (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegNeg", false]], "regneq (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegNeq", false]], "regnot (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegNot", false]], "regor (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegOr", false]], "regpow (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegPow", false]], "regrsh (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegRsh", false]], "regsub (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegSub", false]], "regxor (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.RegXor", false]], "remove_blank_wires() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.remove_blank_wires", false]], "remove_interior_cliffords() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.remove_interior_cliffords", false]], "remove_interior_paulis() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.remove_interior_paulis", false]], "remove_vertex() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.remove_vertex", false]], "remove_wire() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.remove_wire", false]], "removebarriers() (in module pytket.passes)": [[17, "pytket.passes.RemoveBarriers", false]], "removediscarded() (in module pytket.passes)": [[17, "pytket.passes.RemoveDiscarded", false]], "removeimplicitqubitpermutation() (in module pytket.passes)": [[17, "pytket.passes.RemoveImplicitQubitPermutation", false]], "removephaseops() (in module pytket.passes)": [[17, "pytket.passes.RemovePhaseOps", false]], "removeredundancies() (in module pytket.passes)": [[17, "pytket.passes.RemoveRedundancies", false]], "removeredundancies() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.RemoveRedundancies", false]], "rename_args() (pytket.circuit.logic_exp.logicexp method)": [[5, "pytket.circuit.logic_exp.LogicExp.rename_args", false]], "rename_units() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.rename_units", false]], "renamequbitspass() (in module pytket.passes)": [[17, "pytket.passes.RenameQubitsPass", false]], "render_circuit_as_html() (pytket.circuit.display.circuitrenderer method)": [[7, "pytket.circuit.display.CircuitRenderer.render_circuit_as_html", false]], "render_circuit_jupyter() (pytket.circuit.display.circuitrenderer method)": [[7, "pytket.circuit.display.CircuitRenderer.render_circuit_jupyter", false]], "repeat() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.repeat", false]], "repeat() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.repeat", false]], "repeatpass (class in pytket.passes)": [[17, "pytket.passes.RepeatPass", false]], "repeatuntilsatisfiedpass (class in pytket.passes)": [[17, "pytket.passes.RepeatUntilSatisfiedPass", false]], "repeatwithmetricpass (class in pytket.passes)": [[17, "pytket.passes.RepeatWithMetricPass", false]], "replace_implicit_wire_swaps() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.replace_implicit_wire_swaps", false]], "replace_swaps() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.replace_SWAPs", false]], "required_predicates (pytket.backends.backend property)": [[1, "pytket.backends.Backend.required_predicates", false]], "reset() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.Reset", false]], "resourcebounds (class in pytket.circuit)": [[3, "pytket.circuit.ResourceBounds", false]], "resourcedata (class in pytket.circuit)": [[3, "pytket.circuit.ResourceData", false]], "resulthandle (class in pytket.backends.resulthandle)": [[1, "pytket.backends.resulthandle.ResultHandle", false]], "results (pytket.partition.measurementsetup property)": [[16, "pytket.partition.MeasurementSetup.results", false]], "retrying (pytket.backends.status.statusenum attribute)": [[1, "pytket.backends.status.StatusEnum.RETRYING", false]], "rewrite (class in pytket.zx)": [[29, "pytket.zx.Rewrite", false]], "ringarch (class in pytket.architecture)": [[0, "pytket.architecture.RingArch", false]], "round_angles() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.round_angles", false]], "roundangles() (in module pytket.passes)": [[17, "pytket.passes.RoundAngles", false]], "route_circuit() (pytket.mapping.mappingmanager method)": [[14, "pytket.mapping.MappingManager.route_circuit", false]], "routingmethod (class in pytket.mapping)": [[14, "pytket.mapping.RoutingMethod", false]], "routingmethodcircuit (class in pytket.mapping)": [[14, "pytket.mapping.RoutingMethodCircuit", false]], "routingpass() (in module pytket.passes)": [[17, "pytket.passes.RoutingPass", false]], "rsh (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.RSH", false]], "run_circuit() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.run_circuit", false]], "run_circuits() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.run_circuits", false]], "running (pytket.backends.status.statusenum attribute)": [[1, "pytket.backends.status.StatusEnum.RUNNING", false]], "running_time (pytket.backends.status.circuitstatus attribute)": [[1, "pytket.backends.status.CircuitStatus.running_time", false]], "rx() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.Rx", false]], "ry() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.Ry", false]], "rz() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.Rz", false]], "s() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.S", false]], "safetymode (class in pytket.passes)": [[17, "pytket.passes.SafetyMode", false]], "sample_circuits() (pytket.tailoring.framerandomisation method)": [[24, "pytket.tailoring.FrameRandomisation.sample_circuits", false]], "sample_circuits() (pytket.tailoring.pauliframerandomisation method)": [[24, "pytket.tailoring.PauliFrameRandomisation.sample_circuits", false]], "sample_circuits() (pytket.tailoring.universalframerandomisation method)": [[24, "pytket.tailoring.UniversalFrameRandomisation.sample_circuits", false]], "sample_mean() (pytket.utils.distribution.empiricaldistribution method)": [[27, "pytket.utils.distribution.EmpiricalDistribution.sample_mean", false]], "sample_variance() (pytket.utils.distribution.empiricaldistribution method)": [[27, "pytket.utils.distribution.EmpiricalDistribution.sample_variance", false]], "save_dag() (pytket.utils.graph method)": [[27, "pytket.utils.Graph.save_DAG", false]], "save_qubit_graph() (pytket.utils.graph method)": [[27, "pytket.utils.Graph.save_qubit_graph", false]], "save_render_options() (pytket.circuit.display.circuitrenderer method)": [[7, "pytket.circuit.display.CircuitRenderer.save_render_options", false]], "scalar (pytket.zx.zxdiagram property)": [[29, "pytket.zx.ZXDiagram.scalar", false]], "scratch_reg_resize_pass() (in module pytket.passes)": [[17, "pytket.passes.scratch_reg_resize_pass", false]], "sdg() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.Sdg", false]], "self_loop_removal() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.self_loop_removal", false]], "separate_boundaries() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.separate_boundaries", false]], "separate_classical() (in module pytket.transform)": [[25, "pytket.transform.separate_classical", false]], "sequence() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.sequence", false]], "sequence() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.sequence", false]], "sequencepass (class in pytket.passes)": [[17, "pytket.passes.SequencePass", false]], "set_level() (in module pytket.logging)": [[13, "pytket.logging.set_level", false]], "set_render_options() (pytket.circuit.display.circuitrenderer method)": [[7, "pytket.circuit.display.CircuitRenderer.set_render_options", false]], "set_value() (pytket.circuit.logic_exp.logicexp method)": [[5, "pytket.circuit.logic_exp.LogicExp.set_value", false]], "set_vertex_zxgen() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.set_vertex_ZXGen", false]], "set_wire_qtype() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.set_wire_qtype", false]], "set_wire_type() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.set_wire_type", false]], "setbitsop (class in pytket.circuit)": [[3, "pytket.circuit.SetBitsOp", false]], "shots (pytket.backends.backendresult.storedresult attribute)": [[1, "pytket.backends.backendresult.StoredResult.shots", false]], "signature (pytket.zx.directedgen property)": [[29, "pytket.zx.DirectedGen.signature", false]], "signature (pytket.zx.zxbox property)": [[29, "pytket.zx.ZXBox.signature", false]], "simplifyinitial() (in module pytket.passes)": [[17, "pytket.passes.SimplifyInitial", false]], "simplifymeasured() (in module pytket.passes)": [[17, "pytket.passes.SimplifyMeasured", false]], "size (pytket.unit_id.bitregister property)": [[26, "pytket.unit_id.BitRegister.size", false]], "size (pytket.unit_id.qubitregister property)": [[26, "pytket.unit_id.QubitRegister.size", false]], "spamcorrecter (class in pytket.utils.spam)": [[27, "pytket.utils.spam.SpamCorrecter", false]], "spider_fusion() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.spider_fusion", false]], "squaregrid (class in pytket.architecture)": [[0, "pytket.architecture.SquareGrid", false]], "squashcustom() (in module pytket.passes)": [[17, "pytket.passes.SquashCustom", false]], "squashrzphasedx() (in module pytket.passes)": [[17, "pytket.passes.SquashRzPhasedX", false]], "squashtk1() (in module pytket.passes)": [[17, "pytket.passes.SquashTK1", false]], "squind_to_qind() (pytket.architecture.squaregrid method)": [[0, "pytket.architecture.SquareGrid.squind_to_qind", false]], "stabiliserassertionbox (class in pytket.circuit)": [[3, "pytket.circuit.StabiliserAssertionBox", false]], "state (pytket.backends.backendresult.storedresult attribute)": [[1, "pytket.backends.backendresult.StoredResult.state", false]], "state_expectation() (pytket.pauli.qubitpaulistring method)": [[18, "pytket.pauli.QubitPauliString.state_expectation", false]], "state_expectation() (pytket.pauli.qubitpaulitensor method)": [[18, "pytket.pauli.QubitPauliTensor.state_expectation", false]], "state_expectation() (pytket.utils.qubitpaulioperator method)": [[27, "pytket.utils.QubitPauliOperator.state_expectation", false]], "statepreparationbox (class in pytket.circuit)": [[3, "pytket.circuit.StatePreparationBox", false]], "status (pytket.backends.status.circuitstatus attribute)": [[1, "pytket.backends.status.CircuitStatus.status", false]], "storedresult (class in pytket.backends.backendresult)": [[1, "pytket.backends.backendresult.StoredResult", false]], "string (pytket.pauli.paulistabiliser property)": [[18, "pytket.pauli.PauliStabiliser.string", false]], "string (pytket.pauli.qubitpaulitensor property)": [[18, "pytket.pauli.QubitPauliTensor.string", false]], "sub (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.SUB", false]], "submitted (pytket.backends.status.statusenum attribute)": [[1, "pytket.backends.status.StatusEnum.SUBMITTED", false]], "submitted_time (pytket.backends.status.circuitstatus attribute)": [[1, "pytket.backends.status.CircuitStatus.submitted_time", false]], "subs() (pytket.utils.qubitpaulioperator method)": [[27, "pytket.utils.QubitPauliOperator.subs", false]], "substitute_named() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.substitute_named", false]], "support (pytket.utils.distribution.empiricaldistribution property)": [[27, "pytket.utils.distribution.EmpiricalDistribution.support", false]], "support (pytket.utils.distribution.probabilitydistribution property)": [[27, "pytket.utils.distribution.ProbabilityDistribution.support", false]], "supports_contextual_optimisation (pytket.backends.backend property)": [[1, "pytket.backends.Backend.supports_contextual_optimisation", false]], "supports_counts (pytket.backends.backend property)": [[1, "pytket.backends.Backend.supports_counts", false]], "supports_density_matrix (pytket.backends.backend property)": [[1, "pytket.backends.Backend.supports_density_matrix", false]], "supports_expectation (pytket.backends.backend property)": [[1, "pytket.backends.Backend.supports_expectation", false]], "supports_shots (pytket.backends.backend property)": [[1, "pytket.backends.Backend.supports_shots", false]], "supports_state (pytket.backends.backend property)": [[1, "pytket.backends.Backend.supports_state", false]], "supports_unitary (pytket.backends.backend property)": [[1, "pytket.backends.Backend.supports_unitary", false]], "swap() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.SWAP", false]], "sx() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.SX", false]], "sxdg() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.SXdg", false]], "sycamore() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.Sycamore", false]], "symbol_substitution() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.symbol_substitution", false]], "symbol_substitution() (pytket.circuit.circbox method)": [[3, "pytket.circuit.CircBox.symbol_substitution", false]], "symbol_substitution() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.symbol_substitution", false]], "symgateregister (class in pytket.utils.symbolic)": [[27, "pytket.utils.symbolic.SymGateRegister", false]], "synthesisepauligraph() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.SynthesisePauliGraph", false]], "synthesisetk() (in module pytket.passes)": [[17, "pytket.passes.SynthesiseTK", false]], "synthesisetket() (in module pytket.passes)": [[17, "pytket.passes.SynthesiseTket", false]], "synthesiseumd() (in module pytket.passes)": [[17, "pytket.passes.SynthesiseUMD", false]], "t() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.T", false]], "tdg() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.Tdg", false]], "term_sequence() (in module pytket.partition)": [[16, "pytket.partition.term_sequence", false]], "termsequencebox (class in pytket.circuit)": [[3, "pytket.circuit.TermSequenceBox", false]], "threequbitsquash() (in module pytket.passes)": [[17, "pytket.passes.ThreeQubitSquash", false]], "threequbitsquash() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.ThreeQubitSquash", false]], "tk1() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.TK1", false]], "tk2() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.TK2", false]], "to_circuit() (pytket.tableau.unitaryrevtableau method)": [[23, "pytket.tableau.UnitaryRevTableau.to_circuit", false]], "to_circuit() (pytket.tableau.unitarytableau method)": [[23, "pytket.tableau.UnitaryTableau.to_circuit", false]], "to_circuit() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.to_circuit", false]], "to_dict() (pytket.architecture.architecture method)": [[0, "pytket.architecture.Architecture.to_dict", false]], "to_dict() (pytket.architecture.fullyconnected method)": [[0, "pytket.architecture.FullyConnected.to_dict", false]], "to_dict() (pytket.partition.measurementbitmap method)": [[16, "pytket.partition.MeasurementBitMap.to_dict", false]], "to_dict() (pytket.partition.measurementsetup method)": [[16, "pytket.partition.MeasurementSetup.to_dict", false]], "to_dict() (pytket.passes.basepass method)": [[17, "pytket.passes.BasePass.to_dict", false]], "to_dict() (pytket.passes.sequencepass method)": [[17, "pytket.passes.SequencePass.to_dict", false]], "to_dict() (pytket.placement.placement method)": [[19, "pytket.placement.Placement.to_dict", false]], "to_dict() (pytket.predicates.predicate method)": [[20, "pytket.predicates.Predicate.to_dict", false]], "to_dict() (pytket.backends.backendinfo.backendinfo method)": [[1, "pytket.backends.backendinfo.BackendInfo.to_dict", false]], "to_dict() (pytket.backends.backendresult.backendresult method)": [[1, "pytket.backends.backendresult.BackendResult.to_dict", false]], "to_dict() (pytket.backends.status.circuitstatus method)": [[1, "pytket.backends.status.CircuitStatus.to_dict", false]], "to_dict() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.to_dict", false]], "to_dict() (pytket.circuit.customgatedef method)": [[3, "pytket.circuit.CustomGateDef.to_dict", false]], "to_dict() (pytket.circuit.logic_exp.logicexp method)": [[5, "pytket.circuit.logic_exp.LogicExp.to_dict", false]], "to_dict() (pytket.circuit.wiredclexpr method)": [[3, "pytket.circuit.WiredClExpr.to_dict", false]], "to_dict() (pytket.config.pytket_config.pytketextconfig method)": [[6, "pytket.config.pytket_config.PytketExtConfig.to_dict", false]], "to_dict() (pytket.utils.outcomearray method)": [[27, "pytket.utils.OutcomeArray.to_dict", false]], "to_dict() (pytket.utils.spam.spamcorrecter method)": [[27, "pytket.utils.spam.SpamCorrecter.to_dict", false]], "to_doubled_diagram() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.to_doubled_diagram", false]], "to_graphlike_form() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.to_graphlike_form", false]], "to_graphviz_str() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.to_graphviz_str", false]], "to_intlist() (pytket.utils.outcomearray method)": [[27, "pytket.utils.OutcomeArray.to_intlist", false]], "to_latex_file() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.to_latex_file", false]], "to_list() (pytket.pauli.qubitpaulistring method)": [[18, "pytket.pauli.QubitPauliString.to_list", false]], "to_list() (pytket.unit_id.bit method)": [[26, "pytket.unit_id.Bit.to_list", false]], "to_list() (pytket.unit_id.bitregister method)": [[26, "pytket.unit_id.BitRegister.to_list", false]], "to_list() (pytket.unit_id.node method)": [[26, "pytket.unit_id.Node.to_list", false]], "to_list() (pytket.unit_id.qubit method)": [[26, "pytket.unit_id.Qubit.to_list", false]], "to_list() (pytket.unit_id.qubitregister method)": [[26, "pytket.unit_id.QubitRegister.to_list", false]], "to_list() (pytket.unit_id.wasmstate method)": [[26, "pytket.unit_id.WasmState.to_list", false]], "to_list() (pytket.utils.qubitpaulioperator method)": [[27, "pytket.utils.QubitPauliOperator.to_list", false]], "to_mbqc_diag() (pytket.zx.rewrite static method)": [[29, "pytket.zx.Rewrite.to_MBQC_diag", false]], "to_readout() (pytket.utils.outcomearray method)": [[27, "pytket.utils.OutcomeArray.to_readout", false]], "to_readouts() (pytket.utils.outcomearray method)": [[27, "pytket.utils.OutcomeArray.to_readouts", false]], "to_sparse_matrix() (pytket.pauli.qubitpaulistring method)": [[18, "pytket.pauli.QubitPauliString.to_sparse_matrix", false]], "to_sparse_matrix() (pytket.pauli.qubitpaulitensor method)": [[18, "pytket.pauli.QubitPauliTensor.to_sparse_matrix", false]], "to_sparse_matrix() (pytket.utils.qubitpaulioperator method)": [[27, "pytket.utils.QubitPauliOperator.to_sparse_matrix", false]], "toffolibox (class in pytket.circuit)": [[3, "pytket.circuit.ToffoliBox", false]], "toffoliboxsynthstrat (class in pytket.circuit)": [[3, "pytket.circuit.ToffoliBoxSynthStrat", false]], "total (pytket.utils.distribution.empiricaldistribution property)": [[27, "pytket.utils.distribution.EmpiricalDistribution.total", false]], "transform (class in pytket.transform)": [[25, "pytket.transform.Transform", false]], "transpose (pytket.circuit.op property)": [[3, "pytket.circuit.Op.transpose", false]], "transpose() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.transpose", false]], "type (pytket.unit_id.unitid property)": [[26, "pytket.unit_id.UnitID.type", false]], "type (pytket.zx.zxgen property)": [[29, "pytket.zx.ZXGen.type", false]], "type (pytket.circuit.clexprop property)": [[3, "pytket.circuit.ClExprOp.type", false]], "type (pytket.circuit.op property)": [[3, "pytket.circuit.Op.type", false]], "u1() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.U1", false]], "u2() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.U2", false]], "u3() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.U3", false]], "uccsynthesis() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.UCCSynthesis", false]], "unaryop (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.UnaryOp", false]], "unitary (pytket.backends.backendresult.storedresult attribute)": [[1, "pytket.backends.backendresult.StoredResult.unitary", false]], "unitary1qbox (class in pytket.circuit)": [[3, "pytket.circuit.Unitary1qBox", false]], "unitary2qbox (class in pytket.circuit)": [[3, "pytket.circuit.Unitary2qBox", false]], "unitary3qbox (class in pytket.circuit)": [[3, "pytket.circuit.Unitary3qBox", false]], "unitaryrevtableau (class in pytket.tableau)": [[23, "pytket.tableau.UnitaryRevTableau", false]], "unitarytableau (class in pytket.tableau)": [[23, "pytket.tableau.UnitaryTableau", false]], "unitarytableaubox (class in pytket.tableau)": [[23, "pytket.tableau.UnitaryTableauBox", false]], "unitid (class in pytket.unit_id)": [[26, "pytket.unit_id.UnitID", false]], "unittype (class in pytket.unit_id)": [[26, "pytket.unit_id.UnitType", false]], "universalframerandomisation (class in pytket.tailoring)": [[24, "pytket.tailoring.UniversalFrameRandomisation", false]], "update_default_config_file() (pytket.config.pytket_config.pytketextconfig method)": [[6, "pytket.config.pytket_config.PytketExtConfig.update_default_config_file", false]], "update_pytket_config() (pytket.config.pytket_config.pytketextconfig method)": [[6, "pytket.config.pytket_config.PytketExtConfig.update_pytket_config", false]], "upper (pytket.circuit.rangepredicateop property)": [[3, "pytket.circuit.RangePredicateOp.upper", false]], "userdefinedpredicate (class in pytket.predicates)": [[20, "pytket.predicates.UserDefinedPredicate", false]], "v() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.V", false]], "valid_circuit() (pytket.backends.backend method)": [[1, "pytket.backends.Backend.valid_circuit", false]], "valid_operation() (pytket.architecture.architecture method)": [[0, "pytket.architecture.Architecture.valid_operation", false]], "value (pytket.circuit.conditional property)": [[3, "pytket.circuit.Conditional.value", false]], "values (pytket.circuit.setbitsop property)": [[3, "pytket.circuit.SetBitsOp.values", false]], "variance() (pytket.utils.distribution.probabilitydistribution method)": [[27, "pytket.utils.distribution.ProbabilityDistribution.variance", false]], "vdg() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.Vdg", false]], "verify() (pytket.partition.measurementsetup method)": [[16, "pytket.partition.MeasurementSetup.verify", false]], "verify() (pytket.predicates.predicate method)": [[20, "pytket.predicates.Predicate.verify", false]], "vertices (pytket.zx.zxdiagram property)": [[29, "pytket.zx.ZXDiagram.vertices", false]], "view_browser() (pytket.circuit.display.circuitrenderer method)": [[7, "pytket.circuit.display.CircuitRenderer.view_browser", false]], "view_dag() (pytket.utils.graph method)": [[27, "pytket.utils.Graph.view_DAG", false]], "view_qubit_graph() (pytket.utils.graph method)": [[27, "pytket.utils.Graph.view_qubit_graph", false]], "wasm_uid (pytket.circuit.wasmop property)": [[3, "pytket.circuit.WASMOp.wasm_uid", false]], "wasmfilehandler (class in pytket.wasm)": [[28, "pytket.wasm.WasmFileHandler", false]], "wasmop (class in pytket.circuit)": [[3, "pytket.circuit.WASMOp", false]], "wasmstate (class in pytket.unit_id)": [[26, "pytket.unit_id.WasmState", false]], "while_repeat() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.while_repeat", false]], "width (pytket.circuit.conditional property)": [[3, "pytket.circuit.Conditional.width", false]], "width (pytket.utils.outcomearray property)": [[27, "pytket.utils.OutcomeArray.width", false]], "wire_at_port() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.wire_at_port", false]], "wire_between() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.wire_between", false]], "wiredclexpr (class in pytket.circuit)": [[3, "pytket.circuit.WiredClExpr", false]], "wires (pytket.zx.zxdiagram property)": [[29, "pytket.zx.ZXDiagram.wires", false]], "wires_between() (pytket.zx.zxdiagram method)": [[29, "pytket.zx.ZXDiagram.wires_between", false]], "with_initial_reset() (pytket.circuit.statepreparationbox method)": [[3, "pytket.circuit.StatePreparationBox.with_initial_reset", false]], "write_config_file() (in module pytket.config)": [[6, "pytket.config.write_config_file", false]], "write_file() (pytket.config.pytket_config.pytketconfig method)": [[6, "pytket.config.pytket_config.PytketConfig.write_file", false]], "x() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.X", false]], "xor (class in pytket.circuit.logic_exp)": [[5, "pytket.circuit.logic_exp.Xor", false]], "xor (pytket.circuit.logic_exp.bitwiseop attribute)": [[5, "pytket.circuit.logic_exp.BitWiseOp.XOR", false]], "xor (pytket.circuit.logic_exp.regwiseop attribute)": [[5, "pytket.circuit.logic_exp.RegWiseOp.XOR", false]], "xxphase() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.XXPhase", false]], "xxphase3() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.XXPhase3", false]], "y() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.Y", false]], "yyphase() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.YYPhase", false]], "z() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.Z", false]], "zero (pytket.circuit.logic_exp.bitwiseop attribute)": [[5, "pytket.circuit.logic_exp.BitWiseOp.ZERO", false]], "zxbox (class in pytket.zx)": [[29, "pytket.zx.ZXBox", false]], "zxdiagram (class in pytket.zx)": [[29, "pytket.zx.ZXDiagram", false]], "zxgen (class in pytket.zx)": [[29, "pytket.zx.ZXGen", false]], "zxgraphlikeoptimisation() (in module pytket.passes)": [[17, "pytket.passes.ZXGraphlikeOptimisation", false]], "zxtype (class in pytket.zx)": [[29, "pytket.zx.ZXType", false]], "zxvert (class in pytket.zx)": [[29, "pytket.zx.ZXVert", false]], "zxwire (class in pytket.zx)": [[29, "pytket.zx.ZXWire", false]], "zxwiretype (class in pytket.zx)": [[29, "pytket.zx.ZXWireType", false]], "zzmax() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.ZZMax", false]], "zzphase() (pytket.circuit.circuit method)": [[4, "pytket.circuit.Circuit.ZZPhase", false]], "zzphasetorz() (in module pytket.passes)": [[17, "pytket.passes.ZZPhaseToRz", false]], "zzphasetorz() (pytket.transform.transform static method)": [[25, "pytket.transform.Transform.ZZPhaseToRz", false]]}, "objects": {"pytket": [[1, 0, 0, "-", "backends"], [6, 0, 0, "-", "config"], [21, 0, 0, "-", "qasm"], [22, 0, 0, "-", "quipper"], [27, 0, 0, "-", "utils"], [28, 0, 0, "-", "wasm"]], "pytket": [[0, 0, 0, "-", "architecture"], [3, 0, 0, "-", "circuit"], [13, 0, 0, "-", "logging"], [14, 0, 0, "-", "mapping"], [16, 0, 0, "-", "partition"], [17, 0, 0, "-", "passes"], [18, 0, 0, "-", "pauli"], [19, 0, 0, "-", "placement"], [20, 0, 0, "-", "predicates"], [23, 0, 0, "-", "tableau"], [24, 0, 0, "-", "tailoring"], [25, 0, 0, "-", "transform"], [26, 0, 0, "-", "unit_id"], [29, 0, 0, "-", "zx"]], "pytket.architecture": [[0, 1, 1, "", "Architecture"], [0, 1, 1, "", "FullyConnected"], [0, 1, 1, "", "RingArch"], [0, 1, 1, "", "SquareGrid"]], "pytket.architecture.Architecture": [[0, 2, 1, "", "__init__"], [0, 3, 1, "", "coupling"], [0, 2, 1, "", "from_dict"], [0, 2, 1, "", "get_adjacent_nodes"], [0, 2, 1, "", "get_distance"], [0, 3, 1, "", "nodes"], [0, 2, 1, "", "to_dict"], [0, 2, 1, "", "valid_operation"]], "pytket.architecture.FullyConnected": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "from_dict"], [0, 3, 1, "", "nodes"], [0, 2, 1, "", "to_dict"]], "pytket.architecture.RingArch": [[0, 2, 1, "", "__init__"]], "pytket.architecture.SquareGrid": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "qind_to_squind"], [0, 2, 1, "", "squind_to_qind"]], "pytket.circuit": [[15, 1, 1, "", "OpType"], [3, 4, 1, "", "fresh_symbol"]], "pytket.circuit.OpType": [[15, 2, 1, "", "from_name"], [15, 3, 1, "", "name"]], "pytket.logging": [[13, 1, 1, "", "level"], [13, 4, 1, "", "set_level"]], "pytket.logging.level": [[13, 3, 1, "", "name"]], "pytket.mapping": [[14, 1, 1, "", "AASLabellingMethod"], [14, 1, 1, "", "AASRouteRoutingMethod"], [14, 1, 1, "", "BoxDecompositionRoutingMethod"], [14, 1, 1, "", "LexiLabellingMethod"], [14, 1, 1, "", "LexiRouteRoutingMethod"], [14, 1, 1, "", "MappingManager"], [14, 1, 1, "", "MultiGateReorderRoutingMethod"], [14, 1, 1, "", "RoutingMethod"], [14, 1, 1, "", "RoutingMethodCircuit"]], "pytket.mapping.AASLabellingMethod": [[14, 2, 1, "", "__init__"]], "pytket.mapping.AASRouteRoutingMethod": [[14, 2, 1, "", "__init__"]], "pytket.mapping.BoxDecompositionRoutingMethod": [[14, 2, 1, "", "__init__"]], "pytket.mapping.LexiLabellingMethod": [[14, 2, 1, "", "__init__"]], "pytket.mapping.LexiRouteRoutingMethod": [[14, 2, 1, "", "__init__"]], "pytket.mapping.MappingManager": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "route_circuit"]], "pytket.mapping.MultiGateReorderRoutingMethod": [[14, 2, 1, "", "__init__"]], "pytket.mapping.RoutingMethod": [[14, 2, 1, "", "__init__"]], "pytket.mapping.RoutingMethodCircuit": [[14, 2, 1, "", "__init__"]], "pytket.partition": [[16, 1, 1, "", "GraphColourMethod"], [16, 1, 1, "", "MeasurementBitMap"], [16, 1, 1, "", "MeasurementSetup"], [16, 1, 1, "", "PauliPartitionStrat"], [16, 4, 1, "", "measurement_reduction"], [16, 4, 1, "", "term_sequence"]], "pytket.partition.GraphColourMethod": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "name"]], "pytket.partition.MeasurementBitMap": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "bits"], [16, 3, 1, "", "circ_index"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "invert"], [16, 2, 1, "", "to_dict"]], "pytket.partition.MeasurementSetup": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "add_measurement_circuit"], [16, 2, 1, "", "add_result_for_term"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "measurement_circs"], [16, 3, 1, "", "results"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "verify"]], "pytket.partition.PauliPartitionStrat": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "name"]], "pytket.passes": [[17, 4, 1, "", "AASRouting"], [17, 4, 1, "", "AutoRebase"], [17, 4, 1, "", "AutoSquash"], [17, 1, 1, "", "BasePass"], [17, 1, 1, "", "CNotSynthType"], [17, 4, 1, "", "CXMappingPass"], [17, 4, 1, "", "CliffordPushThroughMeasures"], [17, 4, 1, "", "CliffordResynthesis"], [17, 4, 1, "", "CliffordSimp"], [17, 4, 1, "", "CnXPairwiseDecomposition"], [17, 4, 1, "", "CommuteThroughMultis"], [17, 4, 1, "", "ComposePhasePolyBoxes"], [17, 4, 1, "", "ContextSimp"], [17, 4, 1, "", "CustomPass"], [17, 4, 1, "", "CustomRoutingPass"], [17, 4, 1, "", "DecomposeArbitrarilyControlledGates"], [17, 4, 1, "", "DecomposeBoxes"], [17, 4, 1, "", "DecomposeClassicalExp"], [17, 4, 1, "", "DecomposeMultiQubitsCX"], [17, 4, 1, "", "DecomposeSingleQubitsTK1"], [17, 4, 1, "", "DecomposeSwapsToCXs"], [17, 4, 1, "", "DecomposeSwapsToCircuit"], [17, 4, 1, "", "DecomposeTK2"], [17, 4, 1, "", "DefaultMappingPass"], [17, 4, 1, "", "DelayMeasures"], [17, 4, 1, "", "EulerAngleReduction"], [17, 4, 1, "", "FlattenRegisters"], [17, 4, 1, "", "FlattenRelabelRegistersPass"], [17, 4, 1, "", "FullMappingPass"], [17, 4, 1, "", "FullPeepholeOptimise"], [17, 4, 1, "", "GlobalisePhasedX"], [17, 4, 1, "", "GreedyPauliSimp"], [17, 4, 1, "", "GuidedPauliSimp"], [17, 4, 1, "", "KAKDecomposition"], [17, 4, 1, "", "NaivePlacementPass"], [17, 4, 1, "", "NormaliseTK2"], [17, 4, 1, "", "OptimisePhaseGadgets"], [17, 4, 1, "", "PauliExponentials"], [17, 4, 1, "", "PauliSimp"], [17, 4, 1, "", "PauliSquash"], [17, 4, 1, "", "PeepholeOptimise2Q"], [17, 4, 1, "", "PlacementPass"], [17, 4, 1, "", "RebaseCustom"], [17, 4, 1, "", "RebaseTket"], [17, 4, 1, "", "RemoveBarriers"], [17, 4, 1, "", "RemoveDiscarded"], [17, 4, 1, "", "RemoveImplicitQubitPermutation"], [17, 4, 1, "", "RemovePhaseOps"], [17, 4, 1, "", "RemoveRedundancies"], [17, 4, 1, "", "RenameQubitsPass"], [17, 1, 1, "", "RepeatPass"], [17, 1, 1, "", "RepeatUntilSatisfiedPass"], [17, 1, 1, "", "RepeatWithMetricPass"], [17, 4, 1, "", "RoundAngles"], [17, 4, 1, "", "RoutingPass"], [17, 1, 1, "", "SafetyMode"], [17, 1, 1, "", "SequencePass"], [17, 4, 1, "", "SimplifyInitial"], [17, 4, 1, "", "SimplifyMeasured"], [17, 4, 1, "", "SquashCustom"], [17, 4, 1, "", "SquashRzPhasedX"], [17, 4, 1, "", "SquashTK1"], [17, 4, 1, "", "SynthesiseTK"], [17, 4, 1, "", "SynthesiseTket"], [17, 4, 1, "", "SynthesiseUMD"], [17, 4, 1, "", "ThreeQubitSquash"], [17, 4, 1, "", "ZXGraphlikeOptimisation"], [17, 4, 1, "", "ZZPhaseToRz"]], "pytket.passes.BasePass": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "apply"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "get_gate_set"], [17, 2, 1, "", "get_postconditions"], [17, 2, 1, "", "get_preconditions"], [17, 2, 1, "", "to_dict"]], "pytket.passes.CNotSynthType": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "name"]], "pytket.passes.RepeatPass": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "get_pass"]], "pytket.passes.RepeatUntilSatisfiedPass": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "get_pass"], [17, 2, 1, "", "get_predicate"]], "pytket.passes.RepeatWithMetricPass": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "get_metric"], [17, 2, 1, "", "get_pass"]], "pytket.passes.SafetyMode": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "name"]], "pytket.passes.SequencePass": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "get_sequence"], [17, 2, 1, "", "to_dict"]], "pytket.pauli": [[18, 1, 1, "", "Pauli"], [18, 1, 1, "", "PauliStabiliser"], [18, 1, 1, "", "QubitPauliString"], [18, 1, 1, "", "QubitPauliTensor"], [18, 4, 1, "", "pauli_string_mult"]], "pytket.pauli.Pauli": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "name"]], "pytket.pauli.PauliStabiliser": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "coeff"], [18, 3, 1, "", "string"]], "pytket.pauli.QubitPauliString": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "commutes_with"], [18, 2, 1, "", "compress"], [18, 2, 1, "", "dot_state"], [18, 2, 1, "", "from_list"], [18, 3, 1, "", "map"], [18, 2, 1, "", "state_expectation"], [18, 2, 1, "", "to_list"], [18, 2, 1, "", "to_sparse_matrix"]], "pytket.pauli.QubitPauliTensor": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "coeff"], [18, 2, 1, "", "commutes_with"], [18, 2, 1, "", "compress"], [18, 2, 1, "", "dot_state"], [18, 2, 1, "", "state_expectation"], [18, 3, 1, "", "string"], [18, 2, 1, "", "to_sparse_matrix"]], "pytket.placement": [[19, 1, 1, "", "GraphPlacement"], [19, 1, 1, "", "LinePlacement"], [19, 1, 1, "", "NoiseAwarePlacement"], [19, 1, 1, "", "Placement"], [19, 4, 1, "", "place_fully_connected"], [19, 4, 1, "", "place_with_map"]], "pytket.placement.GraphPlacement": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "modify_config"]], "pytket.placement.LinePlacement": [[19, 2, 1, "", "__init__"]], "pytket.placement.NoiseAwarePlacement": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "modify_config"]], "pytket.placement.Placement": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "get_placement_map"], [19, 2, 1, "", "get_placement_maps"], [19, 2, 1, "", "place"], [19, 2, 1, "", "place_with_map"], [19, 2, 1, "", "to_dict"]], "pytket.predicates": [[20, 1, 1, "", "CliffordCircuitPredicate"], [20, 1, 1, "", "CommutableMeasuresPredicate"], [20, 1, 1, "", "CompilationUnit"], [20, 1, 1, "", "ConnectivityPredicate"], [20, 1, 1, "", "DefaultRegisterPredicate"], [20, 1, 1, "", "DirectednessPredicate"], [20, 1, 1, "", "GateSetPredicate"], [20, 1, 1, "", "MaxNClRegPredicate"], [20, 1, 1, "", "MaxNQubitsPredicate"], [20, 1, 1, "", "MaxTwoQubitGatesPredicate"], [20, 1, 1, "", "NoBarriersPredicate"], [20, 1, 1, "", "NoClassicalBitsPredicate"], [20, 1, 1, "", "NoClassicalControlPredicate"], [20, 1, 1, "", "NoFastFeedforwardPredicate"], [20, 1, 1, "", "NoMidMeasurePredicate"], [20, 1, 1, "", "NoSymbolsPredicate"], [20, 1, 1, "", "NoWireSwapsPredicate"], [20, 1, 1, "", "NormalisedTK2Predicate"], [20, 1, 1, "", "PlacementPredicate"], [20, 1, 1, "", "Predicate"], [20, 1, 1, "", "UserDefinedPredicate"]], "pytket.predicates.CliffordCircuitPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.CommutableMeasuresPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.CompilationUnit": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "check_all_predicates"], [20, 3, 1, "", "circuit"], [20, 3, 1, "", "final_map"], [20, 3, 1, "", "initial_map"]], "pytket.predicates.ConnectivityPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.DefaultRegisterPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.DirectednessPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.GateSetPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.MaxNClRegPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.MaxNQubitsPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.MaxTwoQubitGatesPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.NoBarriersPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.NoClassicalBitsPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.NoClassicalControlPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.NoFastFeedforwardPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.NoMidMeasurePredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.NoSymbolsPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.NoWireSwapsPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.NormalisedTK2Predicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.PlacementPredicate": [[20, 2, 1, "", "__init__"]], "pytket.predicates.Predicate": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "implies"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "verify"]], "pytket.predicates.UserDefinedPredicate": [[20, 2, 1, "", "__init__"]], "pytket.tableau": [[23, 1, 1, "", "UnitaryRevTableau"], [23, 1, 1, "", "UnitaryTableau"], [23, 1, 1, "", "UnitaryTableauBox"]], "pytket.tableau.UnitaryRevTableau": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "apply_gate_at_end"], [23, 2, 1, "", "apply_gate_at_front"], [23, 2, 1, "", "get_row_product"], [23, 2, 1, "", "get_xrow"], [23, 2, 1, "", "get_zrow"], [23, 2, 1, "", "to_circuit"]], "pytket.tableau.UnitaryTableau": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "apply_gate_at_end"], [23, 2, 1, "", "apply_gate_at_front"], [23, 2, 1, "", "get_row_product"], [23, 2, 1, "", "get_xrow"], [23, 2, 1, "", "get_zrow"], [23, 2, 1, "", "to_circuit"]], "pytket.tableau.UnitaryTableauBox": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "get_circuit"], [23, 2, 1, "", "get_tableau"]], "pytket.tailoring": [[24, 1, 1, "", "FrameRandomisation"], [24, 1, 1, "", "PauliFrameRandomisation"], [24, 1, 1, "", "UniversalFrameRandomisation"], [24, 4, 1, "", "apply_clifford_basis_change"], [24, 4, 1, "", "apply_clifford_basis_change_tensor"]], "pytket.tailoring.FrameRandomisation": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "get_all_circuits"], [24, 2, 1, "", "sample_circuits"]], "pytket.tailoring.PauliFrameRandomisation": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "get_all_circuits"], [24, 2, 1, "", "sample_circuits"]], "pytket.tailoring.UniversalFrameRandomisation": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "get_all_circuits"], [24, 2, 1, "", "sample_circuits"]], "pytket.transform": [[25, 1, 1, "", "PauliSynthStrat"], [25, 1, 1, "", "Transform"], [25, 4, 1, "", "separate_classical"]], "pytket.transform.PauliSynthStrat": [[25, 2, 1, "", "__init__"], [25, 3, 1, "", "name"]], "pytket.transform.Transform": [[25, 2, 1, "", "CnXPairwiseDecomposition"], [25, 2, 1, "", "CommuteSQThroughSWAP"], [25, 2, 1, "", "CommuteThroughMultis"], [25, 2, 1, "", "DecomposeBRIDGE"], [25, 2, 1, "", "DecomposeBoxes"], [25, 2, 1, "", "DecomposeCCX"], [25, 2, 1, "", "DecomposeCXDirected"], [25, 2, 1, "", "DecomposeControlledRys"], [25, 2, 1, "", "DecomposeNPhasedX"], [25, 2, 1, "", "DecomposeSWAP"], [25, 2, 1, "", "DecomposeSWAPtoCX"], [25, 2, 1, "", "DecomposeTK2"], [25, 2, 1, "", "GlobalisePhasedX"], [25, 2, 1, "", "GreedyPauliSimp"], [25, 2, 1, "", "KAKDecomposition"], [25, 2, 1, "", "NormaliseTK2"], [25, 2, 1, "", "OptimiseCliffords"], [25, 2, 1, "", "OptimisePauliGadgets"], [25, 2, 1, "", "OptimisePhaseGadgets"], [25, 2, 1, "", "OptimisePostRouting"], [25, 2, 1, "", "OptimiseStandard"], [25, 2, 1, "", "PushCliffordsThroughMeasures"], [25, 2, 1, "", "RebaseToCirq"], [25, 2, 1, "", "RebaseToCliffordSingles"], [25, 2, 1, "", "RebaseToIonQ"], [25, 2, 1, "", "RebaseToProjectQ"], [25, 2, 1, "", "RebaseToPyZX"], [25, 2, 1, "", "RebaseToQuil"], [25, 2, 1, "", "RebaseToRzRx"], [25, 2, 1, "", "RebaseToTket"], [25, 2, 1, "", "ReduceSingles"], [25, 2, 1, "", "RemoveRedundancies"], [25, 2, 1, "", "SynthesisePauliGraph"], [25, 2, 1, "", "ThreeQubitSquash"], [25, 2, 1, "", "UCCSynthesis"], [25, 2, 1, "", "ZZPhaseToRz"], [25, 2, 1, "", "__init__"], [25, 2, 1, "", "apply"], [25, 2, 1, "", "repeat"], [25, 2, 1, "", "round_angles"], [25, 2, 1, "", "sequence"], [25, 2, 1, "", "while_repeat"]], "pytket.unit_id": [[26, 1, 1, "", "Bit"], [26, 1, 1, "", "BitRegister"], [26, 1, 1, "", "Node"], [26, 1, 1, "", "Qubit"], [26, 1, 1, "", "QubitRegister"], [26, 1, 1, "", "UnitID"], [26, 1, 1, "", "UnitType"], [26, 1, 1, "", "WasmState"]], "pytket.unit_id.Bit": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "from_list"], [26, 2, 1, "", "to_list"]], "pytket.unit_id.BitRegister": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "name"], [26, 3, 1, "", "size"], [26, 2, 1, "", "to_list"]], "pytket.unit_id.Node": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "from_list"], [26, 2, 1, "", "to_list"]], "pytket.unit_id.Qubit": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "from_list"], [26, 2, 1, "", "to_list"]], "pytket.unit_id.QubitRegister": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "name"], [26, 3, 1, "", "size"], [26, 2, 1, "", "to_list"]], "pytket.unit_id.UnitID": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "index"], [26, 3, 1, "", "reg_name"], [26, 3, 1, "", "type"]], "pytket.unit_id.UnitType": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "name"]], "pytket.unit_id.WasmState": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "from_list"], [26, 2, 1, "", "to_list"]], "pytket.zx": [[29, 1, 1, "", "CliffordGen"], [29, 1, 1, "", "DirectedGen"], [29, 1, 1, "", "Flow"], [29, 1, 1, "", "PhasedGen"], [29, 1, 1, "", "QuantumType"], [29, 1, 1, "", "Rewrite"], [29, 1, 1, "", "ZXBox"], [29, 1, 1, "", "ZXDiagram"], [29, 1, 1, "", "ZXGen"], [29, 1, 1, "", "ZXType"], [29, 1, 1, "", "ZXVert"], [29, 1, 1, "", "ZXWire"], [29, 1, 1, "", "ZXWireType"], [29, 4, 1, "", "circuit_to_zx"]], "pytket.zx.CliffordGen": [[29, 2, 1, "", "__init__"], [29, 3, 1, "", "param"]], "pytket.zx.DirectedGen": [[29, 2, 1, "", "__init__"], [29, 3, 1, "", "n_ports"], [29, 3, 1, "", "signature"]], "pytket.zx.Flow": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "c"], [29, 3, 1, "", "cmap"], [29, 2, 1, "", "d"], [29, 3, 1, "", "dmap"], [29, 2, 1, "", "focus"], [29, 2, 1, "", "identify_causal_flow"], [29, 2, 1, "", "identify_focussed_sets"], [29, 2, 1, "", "identify_pauli_flow"], [29, 2, 1, "", "odd"]], "pytket.zx.PhasedGen": [[29, 2, 1, "", "__init__"], [29, 3, 1, "", "param"]], "pytket.zx.QuantumType": [[29, 2, 1, "", "__init__"], [29, 3, 1, "", "name"]], "pytket.zx.Rewrite": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "apply"], [29, 2, 1, "", "basic_wires"], [29, 2, 1, "", "decompose_boxes"], [29, 2, 1, "", "extend_at_boundary_paulis"], [29, 2, 1, "", "extend_for_PX_outputs"], [29, 2, 1, "", "gadgetise_interior_paulis"], [29, 2, 1, "", "internalise_gadgets"], [29, 2, 1, "", "io_extension"], [29, 2, 1, "", "merge_gadgets"], [29, 2, 1, "", "parallel_h_removal"], [29, 2, 1, "", "rebase_to_mbqc"], [29, 2, 1, "", "rebase_to_zx"], [29, 2, 1, "", "red_to_green"], [29, 2, 1, "", "reduce_graphlike_form"], [29, 2, 1, "", "remove_interior_cliffords"], [29, 2, 1, "", "remove_interior_paulis"], [29, 2, 1, "", "repeat"], [29, 2, 1, "", "self_loop_removal"], [29, 2, 1, "", "separate_boundaries"], [29, 2, 1, "", "sequence"], [29, 2, 1, "", "spider_fusion"], [29, 2, 1, "", "to_MBQC_diag"], [29, 2, 1, "", "to_graphlike_form"]], "pytket.zx.ZXBox": [[29, 2, 1, "", "__init__"], [29, 3, 1, "", "diagram"], [29, 3, 1, "", "n_ports"], [29, 3, 1, "", "signature"]], "pytket.zx.ZXDiagram": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "add_vertex"], [29, 2, 1, "", "add_wire"], [29, 2, 1, "", "add_zxbox"], [29, 2, 1, "", "adj_wires"], [29, 2, 1, "", "check_validity"], [29, 2, 1, "", "count_vertices"], [29, 2, 1, "", "count_wires"], [29, 2, 1, "", "degree"], [29, 2, 1, "", "free_symbols"], [29, 2, 1, "", "get_boundary"], [29, 2, 1, "", "get_name"], [29, 2, 1, "", "get_qtype"], [29, 2, 1, "", "get_vertex_ZXGen"], [29, 2, 1, "", "get_wire_ends"], [29, 2, 1, "", "get_wire_qtype"], [29, 2, 1, "", "get_wire_type"], [29, 2, 1, "", "get_zxtype"], [29, 2, 1, "", "is_symbolic"], [29, 2, 1, "", "multiply_scalar"], [29, 3, 1, "", "n_vertices"], [29, 3, 1, "", "n_wires"], [29, 2, 1, "", "neighbours"], [29, 2, 1, "", "other_end"], [29, 2, 1, "", "remove_vertex"], [29, 2, 1, "", "remove_wire"], [29, 3, 1, "", "scalar"], [29, 2, 1, "", "set_vertex_ZXGen"], [29, 2, 1, "", "set_wire_qtype"], [29, 2, 1, "", "set_wire_type"], [29, 2, 1, "", "symbol_substitution"], [29, 2, 1, "", "to_circuit"], [29, 2, 1, "", "to_doubled_diagram"], [29, 2, 1, "", "to_graphviz_str"], [29, 3, 1, "", "vertices"], [29, 2, 1, "", "wire_at_port"], [29, 2, 1, "", "wire_between"], [29, 3, 1, "", "wires"], [29, 2, 1, "", "wires_between"]], "pytket.zx.ZXGen": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "create"], [29, 3, 1, "", "qtype"], [29, 3, 1, "", "type"]], "pytket.zx.ZXType": [[29, 2, 1, "", "__init__"], [29, 3, 1, "", "name"]], "pytket.zx.ZXVert": [[29, 2, 1, "", "__init__"]], "pytket.zx.ZXWire": [[29, 2, 1, "", "__init__"]], "pytket.zx.ZXWireType": [[29, 2, 1, "", "__init__"], [29, 3, 1, "", "name"]], "pytket.backends": [[1, 1, 1, "", "Backend"], [1, 0, 0, "-", "backendinfo"], [1, 0, 0, "-", "backendresult"], [1, 0, 0, "-", "resulthandle"], [1, 0, 0, "-", "status"]], "pytket.backends.Backend": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "available_devices"], [1, 3, 1, "", "backend_info"], [1, 2, 1, "", "cancel"], [1, 2, 1, "", "circuit_status"], [1, 2, 1, "", "default_compilation_pass"], [1, 2, 1, "", "empty_cache"], [1, 3, 1, "", "expectation_allows_nonhermitian"], [1, 2, 1, "", "get_compiled_circuit"], [1, 2, 1, "", "get_compiled_circuits"], [1, 2, 1, "", "get_result"], [1, 2, 1, "", "get_results"], [1, 3, 1, "", "persistent_handles"], [1, 2, 1, "", "pop_result"], [1, 2, 1, "", "process_circuit"], [1, 2, 1, "", "process_circuits"], [1, 2, 1, "", "rebase_pass"], [1, 3, 1, "", "required_predicates"], [1, 2, 1, "", "run_circuit"], [1, 2, 1, "", "run_circuits"], [1, 3, 1, "", "supports_contextual_optimisation"], [1, 3, 1, "", "supports_counts"], [1, 3, 1, "", "supports_density_matrix"], [1, 3, 1, "", "supports_expectation"], [1, 3, 1, "", "supports_shots"], [1, 3, 1, "", "supports_state"], [1, 3, 1, "", "supports_unitary"], [1, 2, 1, "", "valid_circuit"]], "pytket.backends.backendinfo": [[1, 1, 1, "", "BackendInfo"]], "pytket.backends.backendinfo.BackendInfo": [[1, 2, 1, "", "add_misc"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "get_misc"], [1, 3, 1, "", "n_nodes"], [1, 3, 1, "", "nodes"], [1, 2, 1, "", "to_dict"]], "pytket.backends.backendresult": [[1, 1, 1, "", "BackendResult"], [1, 1, 1, "", "StoredResult"]], "pytket.backends.backendresult.BackendResult": [[1, 3, 1, "", "contains_measured_results"], [1, 3, 1, "", "contains_state_results"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "get_bitlist"], [1, 2, 1, "", "get_counts"], [1, 2, 1, "", "get_debug_info"], [1, 2, 1, "", "get_density_matrix"], [1, 2, 1, "", "get_distribution"], [1, 2, 1, "", "get_empirical_distribution"], [1, 2, 1, "", "get_probability_distribution"], [1, 2, 1, "", "get_qbitlist"], [1, 2, 1, "", "get_result"], [1, 2, 1, "", "get_shots"], [1, 2, 1, "", "get_state"], [1, 2, 1, "", "get_unitary"], [1, 2, 1, "", "to_dict"]], "pytket.backends.backendresult.StoredResult": [[1, 5, 1, "", "counts"], [1, 5, 1, "", "density_matrix"], [1, 5, 1, "", "shots"], [1, 5, 1, "", "state"], [1, 5, 1, "", "unitary"]], "pytket.backends.resulthandle": [[1, 1, 1, "", "ResultHandle"]], "pytket.backends.resulthandle.ResultHandle": [[1, 2, 1, "", "from_str"]], "pytket.backends.status": [[1, 1, 1, "", "CircuitStatus"], [1, 6, 1, "", "StatusEnum"]], "pytket.backends.status.CircuitStatus": [[1, 5, 1, "", "cancelled_time"], [1, 5, 1, "", "completed_time"], [1, 5, 1, "", "error_detail"], [1, 5, 1, "", "error_time"], [1, 2, 1, "", "from_dict"], [1, 5, 1, "", "message"], [1, 5, 1, "", "queue_position"], [1, 5, 1, "", "queued_time"], [1, 5, 1, "", "running_time"], [1, 5, 1, "", "status"], [1, 5, 1, "", "submitted_time"], [1, 2, 1, "", "to_dict"]], "pytket.backends.status.StatusEnum": [[1, 5, 1, "", "CANCELLED"], [1, 5, 1, "", "CANCELLING"], [1, 5, 1, "", "COMPLETED"], [1, 5, 1, "", "ERROR"], [1, 5, 1, "", "QUEUED"], [1, 5, 1, "", "RETRYING"], [1, 5, 1, "", "RUNNING"], [1, 5, 1, "", "SUBMITTED"]], "pytket.circuit": [[3, 1, 1, "", "BasisOrder"], [3, 1, 1, "", "CXConfigType"], [3, 1, 1, "", "CircBox"], [4, 1, 1, "", "Circuit"], [3, 1, 1, "", "ClBitVar"], [3, 1, 1, "", "ClExpr"], [3, 1, 1, "", "ClExprOp"], [3, 1, 1, "", "ClOp"], [3, 1, 1, "", "ClRegVar"], [3, 1, 1, "", "ClassicalEvalOp"], [3, 1, 1, "", "ClassicalExpBox"], [3, 1, 1, "", "ClassicalOp"], [3, 1, 1, "", "Command"], [3, 1, 1, "", "Conditional"], [3, 1, 1, "", "ConjugationBox"], [3, 1, 1, "", "CopyBitsOp"], [3, 1, 1, "", "CustomGate"], [3, 1, 1, "", "CustomGateDef"], [3, 1, 1, "", "DiagonalBox"], [3, 1, 1, "", "DummyBox"], [3, 1, 1, "", "ExpBox"], [3, 1, 1, "", "MultiBitOp"], [3, 1, 1, "", "MultiplexedRotationBox"], [3, 1, 1, "", "MultiplexedTensoredU2Box"], [3, 1, 1, "", "MultiplexedU2Box"], [3, 1, 1, "", "MultiplexorBox"], [3, 1, 1, "", "Op"], [3, 1, 1, "", "PauliExpBox"], [3, 1, 1, "", "PauliExpCommutingSetBox"], [3, 1, 1, "", "PauliExpPairBox"], [3, 1, 1, "", "PhasePolyBox"], [3, 1, 1, "", "ProjectorAssertionBox"], [3, 1, 1, "", "QControlBox"], [3, 1, 1, "", "RangePredicateOp"], [3, 1, 1, "", "ResourceBounds"], [3, 1, 1, "", "ResourceData"], [3, 1, 1, "", "SetBitsOp"], [3, 1, 1, "", "StabiliserAssertionBox"], [3, 1, 1, "", "StatePreparationBox"], [3, 1, 1, "", "TermSequenceBox"], [3, 1, 1, "", "ToffoliBox"], [3, 1, 1, "", "ToffoliBoxSynthStrat"], [3, 1, 1, "", "Unitary1qBox"], [3, 1, 1, "", "Unitary2qBox"], [3, 1, 1, "", "Unitary3qBox"], [3, 1, 1, "", "WASMOp"], [3, 1, 1, "", "WiredClExpr"], [7, 0, 0, "-", "display"], [5, 0, 0, "-", "logic_exp"]], "pytket.circuit.BasisOrder": [[3, 3, 1, "", "name"]], "pytket.circuit.CXConfigType": [[3, 3, 1, "", "name"]], "pytket.circuit.CircBox": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "circuit_name"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "symbol_substitution"]], "pytket.circuit.Circuit": [[4, 2, 1, "", "AAMS"], [4, 2, 1, "", "CCX"], [4, 2, 1, "", "CH"], [4, 2, 1, "", "CRx"], [4, 2, 1, "", "CRy"], [4, 2, 1, "", "CRz"], [4, 2, 1, "", "CS"], [4, 2, 1, "", "CSWAP"], [4, 2, 1, "", "CSX"], [4, 2, 1, "", "CSXdg"], [4, 2, 1, "", "CSdg"], [4, 2, 1, "", "CU1"], [4, 2, 1, "", "CU3"], [4, 2, 1, "", "CV"], [4, 2, 1, "", "CVdg"], [4, 2, 1, "", "CX"], [4, 2, 1, "", "CY"], [4, 2, 1, "", "CZ"], [4, 2, 1, "", "ECR"], [4, 2, 1, "", "ESWAP"], [4, 2, 1, "", "FSim"], [4, 2, 1, "", "GPI"], [4, 2, 1, "", "GPI2"], [4, 2, 1, "", "H"], [4, 2, 1, "", "ISWAP"], [4, 2, 1, "", "ISWAPMax"], [4, 2, 1, "", "Measure"], [4, 2, 1, "", "Phase"], [4, 2, 1, "", "PhasedISWAP"], [4, 2, 1, "", "PhasedX"], [4, 2, 1, "", "Reset"], [4, 2, 1, "", "Rx"], [4, 2, 1, "", "Ry"], [4, 2, 1, "", "Rz"], [4, 2, 1, "", "S"], [4, 2, 1, "", "SWAP"], [4, 2, 1, "", "SX"], [4, 2, 1, "", "SXdg"], [4, 2, 1, "", "Sdg"], [4, 2, 1, "", "Sycamore"], [4, 2, 1, "", "T"], [4, 2, 1, "", "TK1"], [4, 2, 1, "", "TK2"], [4, 2, 1, "", "Tdg"], [4, 2, 1, "", "U1"], [4, 2, 1, "", "U2"], [4, 2, 1, "", "U3"], [4, 2, 1, "", "V"], [4, 2, 1, "", "Vdg"], [4, 2, 1, "", "X"], [4, 2, 1, "", "XXPhase"], [4, 2, 1, "", "XXPhase3"], [4, 2, 1, "", "Y"], [4, 2, 1, "", "YYPhase"], [4, 2, 1, "", "Z"], [4, 2, 1, "", "ZZMax"], [4, 2, 1, "", "ZZPhase"], [4, 2, 1, "", "__init__"], [4, 2, 1, "", "__iter__"], [4, 2, 1, "", "__rshift__"], [4, 2, 1, "", "add_assertion"], [4, 2, 1, "", "add_barrier"], [4, 2, 1, "", "add_bit"], [4, 2, 1, "", "add_blank_wires"], [4, 2, 1, "", "add_c_and"], [4, 2, 1, "", "add_c_and_to_registers"], [4, 2, 1, "", "add_c_copybits"], [4, 2, 1, "", "add_c_copyreg"], [4, 2, 1, "", "add_c_modifier"], [4, 2, 1, "", "add_c_not"], [4, 2, 1, "", "add_c_not_to_registers"], [4, 2, 1, "", "add_c_or"], [4, 2, 1, "", "add_c_or_to_registers"], [4, 2, 1, "", "add_c_predicate"], [4, 2, 1, "", "add_c_range_predicate"], [4, 2, 1, "", "add_c_register"], [4, 2, 1, "", "add_c_setbits"], [4, 2, 1, "", "add_c_setreg"], [4, 2, 1, "", "add_c_transform"], [4, 2, 1, "", "add_c_xor"], [4, 2, 1, "", "add_c_xor_to_registers"], [4, 2, 1, "", "add_circbox"], [4, 2, 1, "", "add_circbox_regwise"], [4, 2, 1, "", "add_circbox_with_regmap"], [4, 2, 1, "", "add_circuit"], [4, 2, 1, "", "add_classicalexpbox_bit"], [4, 2, 1, "", "add_classicalexpbox_register"], [4, 2, 1, "", "add_clexpr"], [4, 2, 1, "", "add_conditional_barrier"], [4, 2, 1, "", "add_conjugation_box"], [4, 2, 1, "", "add_custom_gate"], [4, 2, 1, "", "add_diagonal_box"], [4, 2, 1, "", "add_dummybox"], [4, 2, 1, "", "add_expbox"], [4, 2, 1, "", "add_gate"], [4, 2, 1, "", "add_multiplexed_tensored_u2"], [4, 2, 1, "", "add_multiplexedrotation"], [4, 2, 1, "", "add_multiplexedu2"], [4, 2, 1, "", "add_multiplexor"], [4, 2, 1, "", "add_pauliexpbox"], [4, 2, 1, "", "add_pauliexpcommutingsetbox"], [4, 2, 1, "", "add_pauliexppairbox"], [4, 2, 1, "", "add_phase"], [4, 2, 1, "", "add_phasepolybox"], [4, 2, 1, "", "add_q_register"], [4, 2, 1, "", "add_qcontrolbox"], [4, 2, 1, "", "add_qubit"], [4, 2, 1, "", "add_state_preparation_box"], [4, 2, 1, "", "add_termsequencebox"], [4, 2, 1, "", "add_toffolibox"], [4, 2, 1, "", "add_unitary1qbox"], [4, 2, 1, "", "add_unitary2qbox"], [4, 2, 1, "", "add_unitary3qbox"], [4, 2, 1, "", "add_wasm"], [4, 2, 1, "", "add_wasm_to_reg"], [4, 2, 1, "", "append"], [4, 3, 1, "", "bit_readout"], [4, 3, 1, "", "bits"], [4, 3, 1, "", "c_registers"], [4, 2, 1, "", "commands_of_type"], [4, 2, 1, "", "copy"], [4, 3, 1, "", "created_qubits"], [4, 2, 1, "", "dagger"], [4, 2, 1, "", "depth"], [4, 2, 1, "", "depth_2q"], [4, 2, 1, "", "depth_by_type"], [4, 3, 1, "", "discarded_qubits"], [4, 2, 1, "", "flatten_registers"], [4, 2, 1, "", "free_symbols"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "get_c_register"], [4, 2, 1, "", "get_commands"], [4, 2, 1, "", "get_q_register"], [4, 2, 1, "", "get_resources"], [4, 2, 1, "", "get_statevector"], [4, 2, 1, "", "get_unitary"], [4, 2, 1, "", "get_unitary_times_other"], [4, 2, 1, "", "implicit_qubit_permutation"], [4, 3, 1, "", "is_simple"], [4, 2, 1, "", "measure_all"], [4, 2, 1, "", "measure_register"], [4, 2, 1, "", "n_1qb_gates"], [4, 2, 1, "", "n_2qb_gates"], [4, 3, 1, "", "n_bits"], [4, 3, 1, "", "n_gates"], [4, 2, 1, "", "n_gates_of_type"], [4, 2, 1, "", "n_nqb_gates"], [4, 3, 1, "", "n_qubits"], [4, 3, 1, "", "name"], [4, 3, 1, "", "opgroups"], [4, 2, 1, "", "ops_of_type"], [4, 3, 1, "", "phase"], [4, 3, 1, "", "q_registers"], [4, 2, 1, "", "qubit_create"], [4, 2, 1, "", "qubit_create_all"], [4, 2, 1, "", "qubit_discard"], [4, 2, 1, "", "qubit_discard_all"], [4, 2, 1, "", "qubit_is_created"], [4, 2, 1, "", "qubit_is_discarded"], [4, 3, 1, "", "qubit_readout"], [4, 3, 1, "", "qubit_to_bit_map"], [4, 3, 1, "", "qubits"], [4, 2, 1, "", "remove_blank_wires"], [4, 2, 1, "", "rename_units"], [4, 2, 1, "", "replace_SWAPs"], [4, 2, 1, "", "replace_implicit_wire_swaps"], [4, 2, 1, "", "substitute_named"], [4, 2, 1, "", "symbol_substitution"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_latex_file"], [4, 2, 1, "", "transpose"]], "pytket.circuit.ClBitVar": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "index"]], "pytket.circuit.ClExpr": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "args"], [3, 2, 1, "", "as_qasm"], [3, 3, 1, "", "op"]], "pytket.circuit.ClExprOp": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "expr"], [3, 3, 1, "", "type"]], "pytket.circuit.ClOp": [[3, 3, 1, "", "name"]], "pytket.circuit.ClRegVar": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "index"]], "pytket.circuit.ClassicalEvalOp": [[3, 2, 1, "", "__init__"]], "pytket.circuit.ClassicalExpBox": [[3, 2, 1, "", "content_equality"], [3, 2, 1, "", "get_exp"], [3, 2, 1, "", "get_n_i"], [3, 2, 1, "", "get_n_io"], [3, 2, 1, "", "get_n_o"]], "pytket.circuit.ClassicalOp": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "n_input_outputs"], [3, 3, 1, "", "n_inputs"], [3, 3, 1, "", "n_outputs"]], "pytket.circuit.Command": [[3, 3, 1, "", "args"], [3, 3, 1, "", "bits"], [3, 2, 1, "", "free_symbols"], [3, 3, 1, "", "op"], [3, 3, 1, "", "opgroup"], [3, 3, 1, "", "qubits"]], "pytket.circuit.Conditional": [[3, 3, 1, "", "op"], [3, 3, 1, "", "value"], [3, 3, 1, "", "width"]], "pytket.circuit.ConjugationBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_action"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_compute"], [3, 2, 1, "", "get_uncompute"]], "pytket.circuit.CopyBitsOp": [[3, 2, 1, "", "__init__"]], "pytket.circuit.CustomGate": [[3, 3, 1, "", "gate"], [3, 2, 1, "", "get_circuit"], [3, 3, 1, "", "name"], [3, 3, 1, "", "params"]], "pytket.circuit.CustomGateDef": [[3, 3, 1, "", "args"], [3, 3, 1, "", "arity"], [3, 2, 1, "", "define"], [3, 3, 1, "", "definition"], [3, 2, 1, "", "from_dict"], [3, 3, 1, "", "name"], [3, 2, 1, "", "to_dict"]], "pytket.circuit.DiagonalBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_diagonal"], [3, 2, 1, "", "is_upper_triangle"]], "pytket.circuit.DummyBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_n_bits"], [3, 2, 1, "", "get_n_qubits"], [3, 2, 1, "", "get_resource_data"]], "pytket.circuit.ExpBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"]], "pytket.circuit.MultiBitOp": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "basic_op"]], "pytket.circuit.MultiplexedRotationBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_bitstring_op_pair_list"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_op_map"]], "pytket.circuit.MultiplexedTensoredU2Box": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_bitstring_op_pair_list"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_op_map"]], "pytket.circuit.MultiplexedU2Box": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_bitstring_op_pair_list"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_impl_diag"], [3, 2, 1, "", "get_op_map"]], "pytket.circuit.MultiplexorBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_bitstring_op_pair_list"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_op_map"]], "pytket.circuit.Op": [[3, 2, 1, "", "create"], [3, 3, 1, "", "dagger"], [3, 2, 1, "", "free_symbols"], [3, 2, 1, "", "get_name"], [3, 2, 1, "", "get_unitary"], [3, 2, 1, "", "is_clifford"], [3, 2, 1, "", "is_clifford_type"], [3, 2, 1, "", "is_gate"], [3, 3, 1, "", "n_qubits"], [3, 3, 1, "", "params"], [3, 3, 1, "", "transpose"], [3, 3, 1, "", "type"]], "pytket.circuit.PauliExpBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_cx_config"], [3, 2, 1, "", "get_paulis"], [3, 2, 1, "", "get_phase"]], "pytket.circuit.PauliExpCommutingSetBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_cx_config"], [3, 2, 1, "", "get_paulis"]], "pytket.circuit.PauliExpPairBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_cx_config"], [3, 2, 1, "", "get_paulis_pair"], [3, 2, 1, "", "get_phase_pair"]], "pytket.circuit.PhasePolyBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 3, 1, "", "linear_transformation"], [3, 3, 1, "", "n_qubits"], [3, 3, 1, "", "phase_polynomial"], [3, 3, 1, "", "phase_polynomial_as_list"], [3, 3, 1, "", "qubit_indices"]], "pytket.circuit.ProjectorAssertionBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_matrix"]], "pytket.circuit.QControlBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_control_state"], [3, 2, 1, "", "get_control_state_bits"], [3, 2, 1, "", "get_n_controls"], [3, 2, 1, "", "get_op"]], "pytket.circuit.RangePredicateOp": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "lower"], [3, 3, 1, "", "upper"]], "pytket.circuit.ResourceBounds": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_max"], [3, 2, 1, "", "get_min"]], "pytket.circuit.ResourceData": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__repr__"], [3, 2, 1, "", "get_gate_depth"], [3, 2, 1, "", "get_op_type_count"], [3, 2, 1, "", "get_op_type_depth"], [3, 2, 1, "", "get_two_qubit_gate_depth"]], "pytket.circuit.SetBitsOp": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "values"]], "pytket.circuit.StabiliserAssertionBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_stabilisers"]], "pytket.circuit.StatePreparationBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_statevector"], [3, 2, 1, "", "is_inverse"], [3, 2, 1, "", "with_initial_reset"]], "pytket.circuit.TermSequenceBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_cx_config"], [3, 2, 1, "", "get_depth_weight"], [3, 2, 1, "", "get_graph_colouring_method"], [3, 2, 1, "", "get_partition_strategy"], [3, 2, 1, "", "get_paulis"], [3, 2, 1, "", "get_synthesis_strategy"]], "pytket.circuit.ToffoliBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_permutation"], [3, 2, 1, "", "get_rotation_axis"], [3, 2, 1, "", "get_strat"]], "pytket.circuit.ToffoliBoxSynthStrat": [[3, 3, 1, "", "name"]], "pytket.circuit.Unitary1qBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_matrix"]], "pytket.circuit.Unitary2qBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_matrix"]], "pytket.circuit.Unitary3qBox": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_circuit"], [3, 2, 1, "", "get_matrix"]], "pytket.circuit.WASMOp": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "func_name"], [3, 3, 1, "", "input_widths"], [3, 3, 1, "", "n_i32"], [3, 3, 1, "", "num_bits"], [3, 3, 1, "", "num_w"], [3, 3, 1, "", "output_widths"], [3, 3, 1, "", "wasm_uid"]], "pytket.circuit.WiredClExpr": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "bit_posn"], [3, 3, 1, "", "expr"], [3, 2, 1, "", "from_dict"], [3, 3, 1, "", "output_posn"], [3, 3, 1, "", "reg_posn"], [3, 2, 1, "", "to_dict"]], "pytket.circuit.display": [[7, 1, 1, "", "CircuitRenderer"], [7, 4, 1, "", "get_circuit_renderer"]], "pytket.circuit.display.CircuitRenderer": [[7, 2, 1, "", "get_render_options"], [7, 2, 1, "", "render_circuit_as_html"], [7, 2, 1, "", "render_circuit_jupyter"], [7, 2, 1, "", "save_render_options"], [7, 2, 1, "", "set_render_options"], [7, 2, 1, "", "view_browser"]], "pytket.circuit.logic_exp": [[5, 1, 1, "", "And"], [5, 1, 1, "", "BinaryOp"], [5, 1, 1, "", "BitAnd"], [5, 1, 1, "", "BitEq"], [5, 1, 1, "", "BitLogicExp"], [5, 1, 1, "", "BitNeq"], [5, 1, 1, "", "BitNot"], [5, 1, 1, "", "BitOne"], [5, 1, 1, "", "BitOr"], [5, 6, 1, "", "BitWiseOp"], [5, 1, 1, "", "BitXor"], [5, 1, 1, "", "BitZero"], [5, 1, 1, "", "Eq"], [5, 1, 1, "", "LogicExp"], [5, 1, 1, "", "Neq"], [5, 1, 1, "", "NullaryOp"], [5, 1, 1, "", "Or"], [5, 1, 1, "", "PredicateExp"], [5, 1, 1, "", "RegAdd"], [5, 1, 1, "", "RegAnd"], [5, 1, 1, "", "RegDiv"], [5, 1, 1, "", "RegEq"], [5, 1, 1, "", "RegGeq"], [5, 1, 1, "", "RegGt"], [5, 1, 1, "", "RegLeq"], [5, 1, 1, "", "RegLogicExp"], [5, 1, 1, "", "RegLsh"], [5, 1, 1, "", "RegLt"], [5, 1, 1, "", "RegMul"], [5, 1, 1, "", "RegNeg"], [5, 1, 1, "", "RegNeq"], [5, 1, 1, "", "RegNot"], [5, 1, 1, "", "RegOr"], [5, 1, 1, "", "RegPow"], [5, 1, 1, "", "RegRsh"], [5, 1, 1, "", "RegSub"], [5, 6, 1, "", "RegWiseOp"], [5, 1, 1, "", "RegXor"], [5, 1, 1, "", "UnaryOp"], [5, 1, 1, "", "Xor"], [5, 4, 1, "", "filter_by_type"], [5, 4, 1, "", "if_bit"], [5, 4, 1, "", "if_not_bit"], [5, 4, 1, "", "reg_eq"], [5, 4, 1, "", "reg_geq"], [5, 4, 1, "", "reg_gt"], [5, 4, 1, "", "reg_leq"], [5, 4, 1, "", "reg_lt"], [5, 4, 1, "", "reg_neq"]], "pytket.circuit.logic_exp.And": [[5, 2, 1, "", "eval_vals"]], "pytket.circuit.logic_exp.BitOr": [[5, 2, 1, "", "eval_vals"]], "pytket.circuit.logic_exp.BitWiseOp": [[5, 5, 1, "", "AND"], [5, 5, 1, "", "EQ"], [5, 5, 1, "", "NEQ"], [5, 5, 1, "", "NOT"], [5, 5, 1, "", "ONE"], [5, 5, 1, "", "OR"], [5, 5, 1, "", "XOR"], [5, 5, 1, "", "ZERO"]], "pytket.circuit.logic_exp.LogicExp": [[5, 2, 1, "", "all_inputs"], [5, 2, 1, "", "all_inputs_ordered"], [5, 2, 1, "", "eval_vals"], [5, 2, 1, "", "factory"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "rename_args"], [5, 2, 1, "", "set_value"], [5, 2, 1, "", "to_dict"]], "pytket.circuit.logic_exp.RegWiseOp": [[5, 5, 1, "", "ADD"], [5, 5, 1, "", "AND"], [5, 5, 1, "", "DIV"], [5, 5, 1, "", "EQ"], [5, 5, 1, "", "GEQ"], [5, 5, 1, "", "GT"], [5, 5, 1, "", "LEQ"], [5, 5, 1, "", "LSH"], [5, 5, 1, "", "LT"], [5, 5, 1, "", "MUL"], [5, 5, 1, "", "NEQ"], [5, 5, 1, "", "NOT"], [5, 5, 1, "", "OR"], [5, 5, 1, "", "POW"], [5, 5, 1, "", "RSH"], [5, 5, 1, "", "SUB"], [5, 5, 1, "", "XOR"]], "pytket.config": [[6, 4, 1, "", "get_config_file_path"], [6, 4, 1, "", "load_config_file"], [6, 4, 1, "", "write_config_file"]], "pytket.config.pytket_config": [[6, 1, 1, "", "PytketConfig"], [6, 1, 1, "", "PytketExtConfig"]], "pytket.config.pytket_config.PytketConfig": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "default"], [6, 2, 1, "", "read_file"], [6, 2, 1, "", "write_file"]], "pytket.config.pytket_config.PytketExtConfig": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "from_default_config_file"], [6, 2, 1, "", "from_extension_dict"], [6, 2, 1, "", "from_pytketconfig"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "update_default_config_file"], [6, 2, 1, "", "update_pytket_config"]], "pytket.passes": [[17, 1, 1, "", "PassSelector"], [17, 4, 1, "", "scratch_reg_resize_pass"], [17, 0, 0, "-", "script"]], "pytket.passes.PassSelector": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "apply"], [17, 2, 1, "", "get_scores"]], "pytket.passes.script": [[17, 4, 1, "", "compilation_pass_from_script"], [17, 4, 1, "", "compilation_pass_grammar"]], "pytket.qasm": [[21, 4, 1, "", "circuit_from_qasm"], [21, 4, 1, "", "circuit_from_qasm_io"], [21, 4, 1, "", "circuit_from_qasm_str"], [21, 4, 1, "", "circuit_from_qasm_wasm"], [21, 4, 1, "", "circuit_to_qasm"], [21, 4, 1, "", "circuit_to_qasm_io"], [21, 4, 1, "", "circuit_to_qasm_str"]], "pytket.quipper": [[22, 4, 1, "", "circuit_from_quipper"]], "pytket.utils": [[27, 1, 1, "", "Graph"], [27, 1, 1, "", "OutcomeArray"], [27, 1, 1, "", "QubitPauliOperator"], [27, 4, 1, "", "append_pauli_measurement"], [27, 4, 1, "", "compare_statevectors"], [27, 4, 1, "", "compare_unitaries"], [27, 4, 1, "", "counts_from_shot_table"], [27, 0, 0, "-", "distribution"], [27, 4, 1, "", "expectation_from_counts"], [27, 4, 1, "", "expectation_from_shots"], [27, 4, 1, "", "gen_term_sequence_circuit"], [27, 4, 1, "", "get_operator_expectation_value"], [27, 4, 1, "", "get_pauli_expectation_value"], [27, 4, 1, "", "permute_basis_indexing"], [27, 4, 1, "", "permute_qubits_in_statevector"], [27, 4, 1, "", "permute_rows_cols_in_unitary"], [27, 4, 1, "", "prepare_circuit"], [27, 4, 1, "", "probs_from_counts"], [27, 4, 1, "", "probs_from_state"], [27, 4, 1, "", "readout_counts"], [27, 0, 0, "-", "spam"], [27, 0, 0, "-", "stats"], [27, 0, 0, "-", "symbolic"]], "pytket.utils.Graph": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "as_nx"], [27, 2, 1, "", "get_DAG"], [27, 2, 1, "", "get_qubit_graph"], [27, 2, 1, "", "save_DAG"], [27, 2, 1, "", "save_qubit_graph"], [27, 2, 1, "", "view_DAG"], [27, 2, 1, "", "view_qubit_graph"]], "pytket.utils.OutcomeArray": [[27, 2, 1, "", "choose_indices"], [27, 2, 1, "", "counts"], [27, 2, 1, "", "from_dict"], [27, 2, 1, "", "from_ints"], [27, 2, 1, "", "from_readouts"], [27, 3, 1, "", "n_outcomes"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_intlist"], [27, 2, 1, "", "to_readout"], [27, 2, 1, "", "to_readouts"], [27, 3, 1, "", "width"]], "pytket.utils.QubitPauliOperator": [[27, 2, 1, "", "__init__"], [27, 3, 1, "", "all_qubits"], [27, 2, 1, "", "compress"], [27, 2, 1, "", "dot_state"], [27, 2, 1, "", "from_list"], [27, 2, 1, "", "get_dict"], [27, 2, 1, "", "state_expectation"], [27, 2, 1, "", "subs"], [27, 2, 1, "", "to_list"], [27, 2, 1, "", "to_sparse_matrix"]], "pytket.utils.distribution": [[27, 1, 1, "", "EmpiricalDistribution"], [27, 1, 1, "", "ProbabilityDistribution"], [27, 4, 1, "", "convex_combination"]], "pytket.utils.distribution.EmpiricalDistribution": [[27, 2, 1, "", "__add__"], [27, 2, 1, "", "__eq__"], [27, 2, 1, "", "__getitem__"], [27, 2, 1, "", "as_counter"], [27, 2, 1, "", "condition"], [27, 2, 1, "", "map"], [27, 2, 1, "", "sample_mean"], [27, 2, 1, "", "sample_variance"], [27, 3, 1, "", "support"], [27, 3, 1, "", "total"]], "pytket.utils.distribution.ProbabilityDistribution": [[27, 2, 1, "", "__getitem__"], [27, 2, 1, "", "as_dict"], [27, 2, 1, "", "as_rv_discrete"], [27, 2, 1, "", "condition"], [27, 2, 1, "", "expectation"], [27, 2, 1, "", "from_empirical_distribution"], [27, 2, 1, "", "map"], [27, 3, 1, "", "support"], [27, 2, 1, "", "variance"]], "pytket.utils.spam": [[27, 1, 1, "", "SpamCorrecter"], [27, 4, 1, "", "compress_counts"]], "pytket.utils.spam.SpamCorrecter": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "calculate_matrices"], [27, 2, 1, "", "calibration_circuits"], [27, 2, 1, "", "correct_counts"], [27, 2, 1, "", "from_dict"], [27, 2, 1, "", "get_parallel_measure"], [27, 2, 1, "", "to_dict"]], "pytket.utils.stats": [[27, 4, 1, "", "gate_counts"]], "pytket.utils.symbolic": [[27, 1, 1, "", "SymGateRegister"], [27, 4, 1, "", "circuit_apply_symbolic_qubit"], [27, 4, 1, "", "circuit_apply_symbolic_statevector"], [27, 4, 1, "", "circuit_to_symbolic_gates"], [27, 4, 1, "", "circuit_to_symbolic_unitary"]], "pytket.utils.symbolic.SymGateRegister": [[27, 2, 1, "", "get_func"], [27, 2, 1, "", "is_registered"], [27, 2, 1, "", "register_func"]], "pytket.wasm": [[28, 1, 1, "", "WasmFileHandler"]], "pytket.wasm.WasmFileHandler": [[28, 2, 1, "", "__init__"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "enum", "Python enum"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:enum"}, "terms": {"": [1, 2, 3, 4, 7, 8, 9, 10, 15, 16, 17, 18, 19, 24, 25, 27, 29], "0": [0, 1, 3, 4, 5, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 25, 27, 29], "00": 3, "01": 3, "010": 27, "011": 27, "01734": 25, "0406176": 3, "0410066": 3, "06": 27, "0625": 27, "08091": 14, "08602": [17, 25], "1": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 29], "10": [3, 4, 10, 11, 12, 14, 27], "100": [10, 17, 19, 25, 27], "1000": [10, 19], "101": 27, "10114": [17, 25], "10966": [17, 25], "10b": 3, "11": [3, 10, 11, 12], "12": [4, 10, 11, 12], "13": [4, 10, 11, 12], "15": 4, "17": 4, "1875": 27, "1901": [17, 25], "1902": 14, "1906": 25, "1d": 27, "1e": [2, 8, 27], "2": [0, 1, 3, 4, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 25, 27, 29], "20": 12, "2103": [17, 25], "23": 4, "2305": [17, 25], "24": 12, "25": [4, 10, 27], "2d": [1, 4, 27], "2i": 15, "2q": 2, "2qb": [17, 25], "2t": 3, "2x2": [1, 3], "3": [0, 1, 3, 4, 9, 10, 11, 12, 15, 17, 25, 27], "300px": 7, "31": 11, "32": [1, 17, 21, 28], "34": 12, "35": [3, 17, 25], "375": 27, "3_summary_of_quantum_oper": 15, "3d": 26, "4": [0, 1, 3, 4, 7, 15, 17, 25, 27], "40": [4, 15], "4375": 27, "45": [17, 25], "4x4": [2, 3, 15], "5": [0, 1, 4, 5, 7, 20, 27, 29], "500": [17, 25], "5625": 27, "6": [0, 1, 12, 27], "64": [2, 10], "7": [0, 1, 3, 4, 17, 25], "75": 27, "8": [0, 1, 3, 4, 21, 23, 27], "8888888888888888": 27, "8x8": 3, "9": [1, 3, 4], "A": [0, 1, 2, 3, 4, 5, 8, 9, 11, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 29], "AND": [2, 3, 4, 5], "And": 5, "As": [1, 10, 12, 16, 17], "At": [1, 12], "BE": [3, 4, 18, 27], "By": [17, 25], "For": [1, 2, 3, 4, 5, 8, 9, 10, 12, 17, 19, 20, 24, 25, 27], "If": [1, 3, 11, 12, 17, 19, 20, 25, 27, 28, 29], "In": [1, 2, 3, 4, 8, 9, 10, 14, 17, 19, 20, 21, 25, 27, 29], "It": [3, 4, 10, 11, 17, 19, 25, 27], "NOT": [3, 4, 5], "No": [22, 29], "Not": [0, 15], "ONE": [2, 5], "OR": [2, 3, 4, 5], "On": [10, 11, 12], "One": [7, 8, 12], "Or": [5, 10], "Such": 16, "The": [0, 1, 2, 3, 4, 6, 8, 10, 11, 12, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29], "There": [1, 2, 8, 9, 10, 11, 12, 17, 20, 27, 29], "These": [1, 4, 8, 9, 15, 16, 17, 22, 25], "To": [11, 12, 19], "__add__": 27, "__eq__": 27, "__getitem__": 27, "__init__": [0, 1, 3, 4, 6, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29], "__iter__": 4, "__repr__": [2, 3], "__rshift__": 4, "__version__": 2, "_buffer": 27, "_for_j": 7, "_nestedsequ": 27, "_process_model": 2, "_supportsarrai": 27, "_tk1_to_rzsx": 2, "_tket": [0, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29], "_tket_reg_width": 4, "a_": 3, "a_1": 27, "a_2": 27, "a_i": [4, 27], "a_n": 27, "aa": 14, "aam": [2, 4, 15, 25], "aaronson": 23, "aaslabellingmethod": [2, 11, 14], "aaslookahead": 14, "aasrout": [2, 11, 17], "aasrouteroutingmethod": [2, 11, 14], "ab": [3, 17, 25], "abc": 3, "abil": 2, "abl": 12, "abort": 2, "about": [1, 2, 29], "abov": [7, 12, 13, 17], "abs_tol": 27, "absenc": 3, "absorb": 29, "abstract": [1, 2, 3, 4, 6, 10], "academ": 11, "accept": [2, 12, 25], "access": [1, 2, 11, 24], "accomplish": 9, "accord": [1, 4, 5, 16, 18, 19, 23, 27], "account": [2, 4, 17, 21, 25], "achiev": [2, 9, 17, 24, 25], "across": [1, 27], "act": [1, 2, 3, 4, 5, 15, 17, 20, 24, 25, 27, 29], "action": [2, 3, 15, 17, 23, 24], "activ": 3, "actual": 27, "acycl": 27, "ad": [2, 3, 4, 8, 17, 19, 23, 25], "adapt": [17, 25], "add": [1, 2, 4, 5, 10, 11, 12, 16, 17, 23, 27, 29], "add_assert": [2, 4], "add_barri": 4, "add_bit": 4, "add_blank_wir": 4, "add_c_and": 4, "add_c_and_to_regist": 4, "add_c_copybit": 4, "add_c_copyreg": 4, "add_c_modifi": 4, "add_c_not": 4, "add_c_not_to_regist": 4, "add_c_or": 4, "add_c_or_to_regist": 4, "add_c_pred": 4, "add_c_range_pred": 4, "add_c_regist": 4, "add_c_setbit": 4, "add_c_setreg": 4, "add_c_transform": 4, "add_c_xor": 4, "add_c_xor_to_regist": 4, "add_circbox": [3, 4], "add_circbox_regwis": [2, 4], "add_circbox_with_regmap": [2, 4], "add_circuit": [2, 4], "add_circuit_with_map": 2, "add_classicalexpbox_bit": 4, "add_classicalexpbox_regist": 4, "add_clecpr_from_logicexp": 2, "add_clexpr": 4, "add_conditional_barri": [2, 4], "add_conjugation_box": 4, "add_custom_g": [2, 4], "add_diagonal_box": 4, "add_dummybox": 4, "add_expbox": 4, "add_gat": [4, 15], "add_gate_method": 4, "add_measurement_circuit": 16, "add_misc": 1, "add_multiplexed_tensored_u2": 4, "add_multiplexedrot": 4, "add_multiplexedu2": 4, "add_multiplexor": 4, "add_pauliexpbox": 4, "add_pauliexpcommutingsetbox": 4, "add_pauliexppairbox": 4, "add_phas": [2, 4], "add_phasepolybox": 4, "add_q_regist": 4, "add_qcontrolbox": 4, "add_qubit": 4, "add_result_for_term": 16, "add_state_preparation_box": 4, "add_termsequencebox": 4, "add_toffolibox": 4, "add_unitary1qbox": 4, "add_unitary2qbox": 4, "add_unitary3qbox": 4, "add_vertex": 29, "add_wasm": [2, 4], "add_wasm_to_reg": 4, "add_wir": 29, "add_zxbox": 29, "addit": [1, 2, 3, 4, 8, 10, 12, 15, 16, 17, 21], "addition": [1, 8], "adj_wir": 29, "adjac": [0, 2, 15, 25, 29], "adjoint": 4, "admit": 29, "advantag": [2, 27], "advis": 1, "aer": 8, "aerbackend": [2, 8, 10], "aerdensitymatrixbackend": 8, "aerstatebackend": 8, "aerunitarybackend": [2, 8], "affect": [2, 17, 29], "after": [1, 2, 4, 15, 17, 19, 23, 25, 27], "after_appli": 17, "afterward": 27, "again": [9, 21, 29], "against": 11, "agnost": 10, "aka": 11, "al": [25, 29], "algorithm": [2, 17, 25, 27], "alia": 1, "align": 2, "all": [0, 1, 2, 3, 4, 5, 7, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 29], "all_edge_gate_error": 1, "all_input": 5, "all_inputs_ord": 5, "all_node_gate_error": 1, "all_qubit": 27, "all_readout_error": 1, "alloc": [2, 11], "allow": [1, 2, 4, 8, 10, 11, 17, 21, 25, 27], "allow_class": [17, 27], "allow_parti": [2, 17], "allow_swap": [2, 17, 25], "allow_zzphas": [2, 17, 25], "allowed_typ": 20, "almost": 17, "alon": [17, 25], "along": [0, 1, 19], "alongsid": 2, "alpha": 15, "alpha_j": 27, "alphabet": 18, "alreadi": [2, 4, 7, 11, 12, 17, 25], "also": [1, 4, 7, 8, 10, 11, 15, 17, 20, 21, 25, 27, 29], "altern": [2, 10, 27], "although": 21, "alwai": [1, 2, 17, 20, 25], "always_squash_symbol": [2, 17], "amazon": [2, 8], "amend": 27, "amount": 1, "an": [0, 1, 2, 3, 4, 7, 8, 10, 11, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29], "analys": 2, "analysi": 4, "ancilla": [2, 4], "angl": [2, 3, 4, 10, 15, 17, 25, 29], "angle0": 4, "angle1": 4, "angle2": 4, "angular": 3, "ani": [1, 2, 3, 4, 5, 6, 11, 15, 17, 20, 21, 24, 25, 27, 29], "annot": 17, "anoth": [4, 12, 20, 24, 27, 29], "ansatz": 11, "answer": 11, "ans\u00e4tz": 27, "anymor": 2, "apach": 11, "api": [2, 10], "appear": [2, 5, 15, 20, 29], "append": [2, 17, 27], "append_pauli_measur": [11, 27], "appli": [1, 2, 3, 4, 7, 8, 10, 11, 15, 17, 19, 23, 25, 27, 29], "applic": [3, 17, 25, 29], "apply_clifford_basis_chang": [11, 24], "apply_clifford_basis_change_tensor": [2, 11, 24], "apply_gate_at_end": 23, "apply_gate_at_front": 23, "approach": [14, 17], "appropri": [3, 11, 19, 27], "approxim": [1, 2, 17, 25, 27], "aqt": [2, 8, 11], "aqtbackend": 8, "aqua": 2, "ar": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 28, 29], "ar_dict": 27, "arbitrari": [2, 15, 16, 17, 25, 26, 29], "arbitrarili": [17, 25], "arc": [17, 19, 25], "architectur": [1, 2, 3, 4, 11, 14, 17, 19, 20, 25, 27], "arg": [0, 1, 2, 3, 4, 17, 18, 20, 23, 25, 26, 29], "arg0": [0, 3, 4, 15, 16, 18, 19, 20, 23, 24, 25, 26, 29], "arg0_in": 4, "arg1": [3, 4, 5, 24], "arg1_in": 4, "arg2": [5, 24], "arg_in": 4, "arg_inout": 4, "arg_out": 4, "args_in": 4, "args_out": 4, "args_wasm": 4, "argument": [1, 2, 3, 4, 5, 8, 17, 19, 21, 25, 27], "ari": 29, "ariti": [3, 4, 23, 29], "arm": [2, 12], "arm64": [2, 12], "around": [2, 29], "arrai": [1, 3, 15, 17, 25, 27], "arrang": [0, 17], "arxiv": [3, 14, 17, 25], "as_count": 27, "as_dict": 27, "as_nx": 27, "as_qasm": 3, "as_rv_discret": 27, "ascii": 22, "ask": [9, 11], "assert": [1, 2, 3, 4, 20], "assign": [2, 3, 4, 19], "assist": 11, "associ": [1, 2, 3, 4, 27], "assum": [3, 4, 16, 17, 19, 25, 27], "asymmetr": 29, "asynchron": 2, "atensor": 3, "attach": 29, "attempt": [2, 5, 17, 27, 29], "attribut": [2, 17], "attributeerror": 1, "audit": 17, "authent": 2, "auto": 2, "auto_rebase_pass": 2, "auto_squash_pass": 2, "automat": [2, 15, 16, 17, 27], "autorebas": [2, 9, 11, 17], "autosquash": [2, 11, 17], "avail": [1, 2, 3, 7, 8, 9, 11, 12, 15, 16, 25, 27, 29], "available_devic": [1, 2], "averag": [1, 19, 25, 27], "averaged_edge_gate_error": 1, "averaged_node_gate_error": 1, "averaged_readout_error": 1, "avg_node_error": 25, "avoid": [1, 2], "awai": [17, 25], "awar": [2, 14, 17, 25], "axi": [3, 15, 29], "azur": [2, 8, 11], "b": [3, 17, 18, 20, 25, 27], "back": [2, 12, 17, 27, 29], "backen": 29, "backend": [2, 3, 4, 10, 11, 19, 20, 21, 27], "backend_info": [1, 2], "backendinfo": [2, 11], "backendresult": [2, 11, 27], "background": 7, "backu": 17, "backward": [3, 17, 25], "balanc": [3, 25], "barrier": [2, 4, 14, 15, 17, 20], "barrier_arg": 4, "barrier_bit": 4, "barrier_qubit": 4, "barrierop": 2, "base": [1, 2, 3, 6, 8, 12, 15, 17, 19, 24, 27, 29], "base_pass_dict": 17, "basepass": [1, 2, 11, 17], "basi": [1, 2, 3, 4, 15, 16, 17, 27, 29], "basic": [1, 2, 3, 11, 25, 29], "basic_op": 3, "basic_wir": 29, "basisord": [1, 2, 3, 11, 27], "batch": 2, "bayesian": 27, "becaus": [12, 17], "becom": 17, "been": [1, 2, 3, 11, 12, 20, 27, 29], "befor": [1, 2, 7, 16, 17, 19, 20, 23, 25, 29], "before_appli": 17, "beforehand": 17, "begin": [15, 22], "behavior": 8, "behaviour": [2, 4], "being": [0, 1, 2, 3, 4, 5, 12, 14, 18, 19, 24], "belong": [4, 16, 27], "below": [1, 2, 4, 8, 17, 27], "benchmark": 11, "best": [1, 2, 3, 17, 19, 25, 27], "beta": 15, "between": [0, 1, 2, 3, 9, 10, 11, 15, 17, 19, 24, 25, 27, 29], "big": [3, 27], "big_endian": 27, "bigger_circ": 4, "binari": [3, 4, 5, 10, 15, 23, 27], "binaryop": 5, "bind": 2, "bistr": 3, "bistring_to_op_list": 3, "bit": [1, 2, 3, 4, 5, 7, 10, 11, 15, 16, 17, 18, 21, 26, 27], "bit_index": 4, "bit_posn": 3, "bit_readout": 4, "bitand": [3, 5], "biteq": [2, 3, 5], "bitlogicexp": [4, 5], "bitmap": 16, "bitneq": [2, 3, 5], "bitnot": [3, 5], "biton": [3, 5], "bitor": [3, 5], "bitregist": [2, 3, 4, 5, 11, 26], "bitstr": [1, 3, 27], "bitstring_to_op_list": 3, "bitwidth": 3, "bitwis": [3, 4, 27], "bitwiseop": [2, 5], "bitxor": [3, 5], "bitzero": [3, 5], "blank": [2, 4, 11], "blow": [17, 25], "bodi": 25, "bool": [0, 1, 3, 4, 5, 7, 14, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 29], "boolean": [3, 15, 17, 27, 29], "both": [2, 3, 15, 21, 27, 29], "bound": [2, 3, 4, 6, 15, 19], "boundari": [24, 29], "box": [2, 3, 7, 14, 15, 17, 23, 25, 29], "boxdecompositionroutingmethod": [2, 11, 14], "braket": [2, 8, 11], "braketbackend": 8, "branch": 15, "break": [2, 17, 25], "brew": 12, "bridg": [2, 15, 17, 25], "browser": [2, 7], "browser_new": 7, "bug": [2, 10, 11], "bugfix": 2, "build": [2, 6, 10, 11, 16, 27], "built": [2, 10, 12], "byte": 27, "bytecod": 2, "c": [2, 3, 4, 10, 12, 15, 17, 20, 22, 24, 25, 27, 29], "c0": 27, "c_bit": 1, "c_dagger": 24, "c_regist": [2, 4], "cach": 1, "calcul": [1, 2, 4, 8, 18, 27], "calculate_matric": 27, "calculu": [2, 11, 17], "calibr": 27, "calibration_circuit": 27, "call": [1, 2, 3, 4, 15, 17, 25, 29], "callabl": [14, 17, 20, 25, 27], "callback": 17, "caller": [17, 27], "can": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 19, 20, 21, 25, 27, 29], "cancel": [1, 2, 3, 17, 25], "cancelled_tim": 1, "candid": [17, 25], "cannot": [2, 3, 9, 12, 17], "canon": 3, "capabl": 2, "capac": 27, "captur": [14, 29], "care": 9, "cartan": [17, 25], "case": [1, 2, 3, 9, 11, 16, 17, 25, 27], "caus": [2, 3, 15], "causal": [4, 17, 29], "cbit": 1, "cc": 15, "cccc": 15, "ccx": [4, 10, 15, 17, 25], "cdiscard": 22, "cdot": [3, 15], "cell": 7, "certain": [2, 3, 17, 25], "cgate": 22, "ch": [4, 15], "chain": [2, 17, 29], "chamber": [17, 25], "chanc": [17, 25], "chang": [1, 2, 3, 7, 15, 17, 24, 25, 29], "changelog": 11, "channel": 11, "characteris": [2, 27], "check": [0, 1, 2, 3, 4, 11, 14, 16, 17, 27, 28, 29], "check_all_pred": 20, "check_fil": 28, "check_funct": [17, 20], "check_register_align": 2, "check_valid": 29, "chemistri": 2, "choic": 9, "choos": 27, "choose_indic": 27, "chosen": [3, 15, 17, 25, 27], "cinit": 22, "circ": [2, 3, 7, 10, 16, 17, 21, 23, 25, 27], "circ_index": 16, "circbox": [2, 3, 4, 11, 15, 17, 27], "circl": 19, "circuit": [1, 2, 8, 9, 10, 11, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "circuit_apply_symbolic_qubit": 27, "circuit_apply_symbolic_statevector": 27, "circuit_from_qasm": [10, 11, 21], "circuit_from_qasm_io": [11, 21], "circuit_from_qasm_str": [2, 11, 21], "circuit_from_qasm_wasm": [2, 11, 21], "circuit_from_quipp": [11, 22], "circuit_nam": [2, 3], "circuit_render": 7, "circuit_statu": 1, "circuit_to_qasm": [11, 21], "circuit_to_qasm_io": [2, 11, 21], "circuit_to_qasm_str": [11, 21], "circuit_to_symbolic_g": 27, "circuit_to_symbolic_unitari": 27, "circuit_to_zx": [2, 11, 29], "circuitdisplayconfig": 7, "circuitrender": [2, 7], "circuitstatu": [1, 2], "circumst": 2, "cirq": [2, 8, 10, 11], "cirqcliffordsamplebackend": 8, "cirqcliffordsimbackend": 8, "cirqdensitymatrixsamplebackend": 8, "cirqdensitymatrixsimbackend": 8, "cirqstatesamplebackend": 8, "cirqstatesimbackend": 8, "class": [0, 1, 2, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29], "classic": [1, 2, 3, 4, 5, 7, 8, 10, 15, 17, 20, 21, 22, 25, 26, 27, 29], "classical_in": 29, "classical_input": 29, "classical_out": 29, "classical_output": 29, "classicalevalop": [3, 11], "classicalexpbox": [2, 3, 4, 11, 15, 17], "classicalop": [3, 11], "classicaltransform": [4, 15], "classicl": 4, "classmethod": [1, 5, 6, 27], "clbitvar": [3, 11], "cleaner": 2, "clexpr": [2, 3, 11, 15], "clexprop": [2, 3, 11, 17, 21], "clifford": [2, 3, 11, 16, 17, 20, 23, 24, 25, 29], "cliffordcircuitpred": [2, 11, 20], "cliffordgen": [11, 29], "cliffordpushthroughmeasur": [2, 11, 17], "cliffordresynthesi": [2, 11, 17], "cliffordsimp": [2, 11, 17], "cliffordsimpnoswap": 17, "clop": [2, 3, 11], "cloud": 11, "cloutput": 17, "clregvar": [3, 11], "cluster": 11, "cmap": [5, 29], "cmd": 2, "cnot": [2, 3, 17, 22], "cnotsynthtyp": [11, 17], "cnrx": [2, 15, 17], "cnry": [15, 17], "cnrz": [2, 15, 17], "cnx": [2, 3, 15, 17, 25], "cnxpairwisedecomposit": [2, 11, 17, 25], "cny": [2, 15, 17], "cnz": [2, 15, 17], "co": 15, "code": [2, 10, 11, 12], "coeff": 18, "coeffici": [2, 3, 18, 27], "col": 26, "collaps": [2, 7, 17], "collect": [1, 3, 4, 15, 17, 25, 27], "colour": [2, 3, 16, 27, 29], "colour_method": 27, "column": [0, 1, 3, 4, 7, 26, 27], "com": [1, 2, 11], "combin": [2, 4, 16, 23, 24, 25, 27, 29], "come": [10, 17, 25], "command": [2, 3, 4, 8, 11, 12], "commands_of_typ": [2, 4], "commonli": 4, "commun": 11, "commut": [2, 3, 14, 15, 16, 17, 18, 25], "commutablemeasurespred": [2, 11, 17, 20], "commutes_with": 18, "commutesqthroughswap": 25, "commutethroughmulti": [11, 17, 25], "commutingset": [3, 16, 27], "compar": [3, 7, 16, 27], "compare_statevector": [11, 27], "compare_unitari": [11, 27], "comparison": [3, 14], "compat": [0, 1, 2, 3, 7, 10, 12, 15, 17, 25, 28, 29], "compil": [1, 2, 8, 10, 11, 12, 15, 17, 20, 27], "compilation_pass": 17, "compilation_pass_from_script": [2, 17], "compilation_pass_grammar": 17, "compilation_unit": 17, "compilationunit": [2, 11, 17, 20], "compile_circuit": 2, "compiled_circ": 10, "compilerpass": 2, "complement": 29, "complet": [1, 2, 4, 14, 29], "completed_tim": 1, "complex": [1, 2, 17, 18, 27, 29], "complex128": [3, 4, 18], "compliant": 12, "complilation_pass_from_script": 17, "compon": [3, 10, 23, 27, 29], "compos": [10, 15, 17, 25, 29], "composephasepolybox": [2, 11, 17], "composit": [2, 3, 4, 10, 17], "composition": 17, "compound": [2, 15], "compress": [18, 27], "compress_count": 27, "compris": [20, 24, 27], "comput": [1, 2, 3, 4, 8, 10, 11, 15, 17, 24, 26, 27], "computation": 1, "concern": 12, "concret": [17, 25], "conda": [2, 12], "condens": 7, "condense_c_bit": 7, "condit": [2, 3, 4, 10, 11, 15, 17, 20, 25, 27], "condition": [3, 15], "condition_bit": 4, "condition_valu": [2, 4], "config": [2, 7, 11, 17], "config_file_path": 6, "configur": [2, 3, 6, 7, 8, 16, 17], "conform": 17, "conjug": [24, 29], "conjugationbox": [2, 3, 4, 11, 15], "conjunct": [8, 11], "connect": [0, 1, 2, 4, 7, 8, 10, 11, 17, 19, 20, 25, 27, 29], "connectivitypred": [2, 11, 20], "connectivti": 17, "consid": [2, 17, 19, 20, 23, 25], "consider": [17, 25], "consist": [2, 4, 15, 17, 18], "constant": [2, 3, 5, 29], "constpred": 2, "constrain": [3, 17], "constraint": [1, 2, 8, 19], "construct": [0, 1, 2, 3, 4, 5, 6, 10, 15, 16, 17, 18, 19, 20, 23, 26, 27, 28, 29], "constructor": [0, 2, 3, 14, 19, 20, 24, 29], "consult": 1, "contact": 11, "contain": [0, 1, 2, 3, 4, 7, 9, 14, 15, 17, 19, 20, 21, 23, 26, 27, 29], "contains_measured_result": 1, "contains_state_result": 1, "content": [3, 29], "content_equ": 3, "contextsimp": [11, 17], "contextu": [1, 2], "contigu": [2, 4, 17, 27], "continu": 29, "contractur": 2, "contrast": 8, "contribut": 27, "control": [1, 2, 3, 4, 7, 10, 15, 17, 20, 22, 25], "control_0": 4, "control_1": 4, "control_qubit": 4, "control_st": [2, 3], "conveni": [1, 2, 17, 21, 25], "convent": [2, 3, 4, 9, 18, 27], "convers": [2, 3, 21], "convert": [0, 1, 2, 7, 9, 11, 17, 21, 22, 23, 25, 27, 29], "convex": 27, "convex_combin": 27, "copi": [3, 4, 15, 20, 29], "copybit": [2, 15], "copybitsop": [3, 11], "core": [1, 12], "correct": [1, 2, 4, 16, 27, 29], "correct_count": 27, "correctli": 2, "correl": 27, "correspond": [0, 1, 2, 3, 4, 10, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29], "corrupt": 2, "cost": [2, 3, 17, 25], "could": [2, 3, 24], "count": [1, 2, 3, 4, 17, 23, 25, 27, 29], "count_vertic": 29, "count_wir": 29, "counter": [1, 3, 27], "counts_from_shot_t": [11, 27], "countsdict": 27, "coupl": [0, 1, 2, 11, 12], "cover": [3, 4], "cowtan": 25, "cphase": 15, "crash": 2, "creat": [1, 2, 3, 4, 11, 17, 19, 27, 29], "create_all_qubit": 17, "created_qubit": [2, 4], "creation": 2, "credenti": 10, "creg": 4, "creg_nam": 4, "cregmap": 4, "criterion": 27, "critic": [2, 13], "crop_param": 7, "cross": 8, "crx": [2, 4, 15], "cry": [2, 4, 15], "crz": [4, 15, 25], "csc_matrix": [18, 27], "csdg": [2, 4, 15], "css": 2, "cswap": [2, 4, 15, 22], "csx": [2, 4, 15], "csxdg": [2, 4, 15], "cterm": 22, "ctr": 27, "cu1": [2, 4, 15], "cu3": [2, 4, 15], "current": [3, 4, 6, 7, 8, 11, 12, 17, 20, 22, 23, 25, 27, 29], "custom": [2, 3, 4, 10, 14, 17], "custom_deserialis": [2, 17], "custom_render": 7, "customg": [2, 3, 4, 11, 15], "customgatedef": [2, 3, 4, 11, 15], "custompass": [2, 11, 17], "customroutingpass": [11, 17], "cutensornet": [8, 11], "cv": [2, 4, 15], "cvdg": [2, 4, 15], "cx": [2, 3, 4, 7, 9, 10, 15, 16, 17, 24, 25], "cx_config": [16, 17, 25], "cx_config_typ": 3, "cx_fidel": [17, 25], "cx_replac": 17, "cxconfigtyp": [2, 3, 11, 16, 17, 25], "cxmappingpass": [2, 11, 17], "cy": [2, 4, 15], "cycl": [2, 3, 24], "cycletyp": 24, "cyclicbutterfli": 2, "cz": [4, 15, 25], "d": [1, 3, 27, 29], "dag": [2, 4, 27], "dagcircuit": 2, "dagger": [2, 3, 4, 15, 24], "dark": 7, "dark_them": 7, "data": [1, 2, 3, 4, 15, 26, 27, 29], "date": 10, "datetim": 1, "dbox0": 4, "dbox1": 4, "debug": [1, 13], "declar": 14, "decompos": [1, 2, 3, 9, 14, 17, 25, 27], "decompose_box": 29, "decomposearbitrarilycontrolledg": [2, 11, 17], "decomposebox": [2, 11, 17, 25], "decomposebridg": 25, "decomposeccx": 25, "decomposeclassicalexp": [2, 11, 17], "decomposecontrolledri": 25, "decomposecxdirect": 25, "decomposemultiqubitscx": [2, 11, 17], "decomposemultiqubitsibm": 2, "decomposenphasedx": [2, 25], "decomposesinglequbitsibm": 2, "decomposesinglequbitstk1": [2, 11, 17], "decomposeswap": 25, "decomposeswapstocircuit": [11, 17], "decomposeswapstocx": [2, 11, 17], "decomposeswaptocx": 25, "decomposetk2": [2, 11, 17, 25], "decomposit": [2, 3, 9, 11, 16, 17, 25], "deconstruct": 2, "decreas": [1, 2, 3, 17], "deduc": 24, "deem": [2, 17, 25], "def": [2, 4], "default": [1, 2, 3, 4, 6, 7, 8, 10, 13, 16, 17, 18, 20, 21, 23, 25, 26, 27, 29], "default_compilation_pass": [1, 2], "defaultmappingpass": [2, 11, 17], "defaultregisterpred": [11, 20], "defin": [1, 2, 3, 4, 6, 7, 8, 9, 10, 14, 15, 17, 20, 22, 27, 29], "definit": [2, 3, 4, 10, 17, 27], "degre": [1, 3, 15, 16, 17, 25, 29], "delai": [2, 17, 20], "delay_measur": [2, 17], "delaymeasur": [2, 11, 17], "delet": [7, 27], "dens": [18, 27], "densiti": [1, 11], "density_matrix": [1, 8], "depend": [1, 2, 3, 15, 17, 22], "depict": 29, "deprec": [1, 2, 3, 4, 15, 17, 19, 25], "depth": [2, 3, 4, 11, 14, 17, 19, 25, 29], "depth_2q": [2, 4], "depth_by_typ": [2, 4], "depth_weight": [3, 17, 25], "deriv": [1, 25, 27], "describ": [0, 1, 3, 4, 11, 12, 17, 19, 23, 26, 29], "descript": [1, 29], "deseri": 2, "design": [8, 10, 17, 19], "desir": [13, 16, 17, 23, 27], "destin": 4, "detail": [1, 2, 10, 11, 27], "detect": [2, 3], "determin": [1, 2, 4, 27], "develop": [1, 11, 12], "devic": [0, 1, 2, 8, 10, 11, 15, 17, 19, 25, 26, 27], "device_nam": 1, "diag": 29, "diagnos": 12, "diagon": [2, 3, 15, 17, 25], "diagonalbox": [2, 3, 4, 11, 15], "diagonalis": [2, 11, 16, 17, 25], "diagram": [2, 7, 29], "dic": [1, 5], "dict": [0, 1, 3, 4, 5, 6, 7, 14, 16, 17, 18, 19, 20, 24, 25, 27, 29], "dictat": [16, 17, 25], "dictionari": [1, 2, 3, 4, 5, 6, 17, 18, 19, 27], "differ": [1, 8, 9, 10, 15, 29], "digit": 27, "digraph": 27, "dilk": 25, "dimens": [4, 26, 27], "dimension": [2, 26], "direct": [2, 7, 9, 17, 20, 25, 27, 29], "directed": 17, "directed_cx": 17, "directedgen": [11, 29], "directednesspred": [11, 20], "directli": [1, 2, 4, 7, 10, 11, 29], "disabl": [17, 25], "disallow": 2, "discard": [2, 4, 17, 27], "discarded_qubit": [2, 4], "disconnect": 29, "discount": [17, 25], "discount_r": [17, 25], "discuss": [5, 11], "displai": [2, 3, 11], "disregard": [17, 25], "dist": 27, "dist1": 27, "dist2": 27, "dist3": 27, "dist4": 27, "distanc": [0, 19], "distinct": 4, "distinguish": 29, "distribut": [1, 2, 11, 12], "div": 5, "divis": 3, "dlo": [1, 3], "dmap": 29, "do": [2, 4, 17, 20, 21, 25], "doc": [1, 2, 27], "document": [1, 2, 10, 15], "doe": [1, 2, 3, 15, 16, 17, 19, 27], "doesn": [4, 17, 24], "domain": 27, "done": [7, 9], "dot": [18, 27], "dot_stat": [18, 27], "doubl": 29, "doubleabl": 29, "doubli": 26, "drop": 2, "dterm": 22, "dtype": 27, "due": [1, 2, 4, 11, 17, 22], "dummybox": [2, 3, 4, 11, 15], "duncan": [17, 25], "dure": [1, 2], "dyadic": 2, "dynam": 2, "e": [0, 1, 2, 3, 4, 5, 8, 9, 12, 15, 17, 19, 23, 25, 26, 27, 29], "each": [1, 2, 3, 4, 10, 11, 14, 16, 17, 19, 20, 24, 25, 27, 29], "earlier": [17, 25], "ecr": [2, 4, 15], "ed": 27, "edg": [2, 4, 17, 19, 25, 29], "effect": [3, 19, 23, 29], "effici": [2, 4, 25], "either": [1, 2, 3, 4, 5, 7, 11, 17, 23, 25, 26, 27, 29], "element": [4, 5, 26, 27], "els": [11, 17, 18, 20, 25, 29], "email": 11, "embed": 10, "empir": 27, "empiricaldistribut": [1, 27], "emploi": 14, "empriricaldistribut": [2, 27], "empti": [0, 1, 2, 4, 16, 17, 18, 29], "empty_cach": 1, "emul": [0, 2, 11], "enabl": [1, 2, 8, 10, 17], "encapsul": [1, 2, 3, 4, 16, 29], "encod": [3, 4, 5, 15, 21, 27], "encrypt": 2, "end": [2, 3, 4, 15, 17, 20, 22, 25, 29], "endian": [3, 4, 27], "enforc": 20, "ensur": [1, 2, 29], "entangl": 15, "entir": [2, 3, 27], "entri": [1, 3, 17, 18, 19, 27], "enum": [1, 2, 3, 5, 15, 16, 17, 25, 26, 29], "enumer": [1, 5], "env": 7, "environ": [2, 7, 12], "eq": 5, "equal": [2, 3, 5, 17, 24, 25, 27], "equival": [1, 2, 4, 5, 15, 16, 17, 23, 25], "err": 13, "error": [1, 2, 13, 17, 19, 25, 27, 29], "error_detail": 1, "error_tim": 1, "escap": 2, "estim": [1, 2, 17, 19, 25, 27], "eswap": [2, 4, 15], "et": [25, 29], "etc": [2, 3, 12, 27, 29], "euler": 17, "euleranglereduct": [2, 11, 17], "eumen": 2, "eval_v": 5, "evalu": [5, 17, 25], "evaluat": 3, "even": [2, 7, 15, 17], "everi": [2, 3, 17, 24, 25, 29], "evolv": 27, "exact": [1, 17, 25, 27], "exactli": [17, 25, 29], "exampl": [1, 2, 3, 8, 9, 10, 11, 17, 20, 27], "except": [2, 17, 20, 23, 29], "exchang": 11, "excit": 27, "exclud": [4, 17, 25], "excluded_opgroup": [2, 17, 25], "excluded_typ": [2, 17, 25], "execut": [0, 1, 2, 3, 10, 15, 20], "exhaust": [2, 16], "exist": [1, 2, 4, 17, 25, 27, 29], "exp": 2, "expand": 29, "expans": 2, "expbox": [3, 4, 11, 15], "expctat": 16, "expect": [1, 2, 4, 15, 16, 18, 27, 29], "expectation_allows_nonhermitian": 1, "expectation_from_count": [11, 27], "expectation_from_shot": [11, 27], "experi": [10, 16, 27], "explicit": [2, 3, 27, 29], "explicitli": [1, 3, 27], "explicitmodifi": [4, 15], "explicitpred": [4, 15], "expon": 2, "exponenti": [2, 3, 11, 15, 16, 17, 27], "export": [2, 7, 21], "expos": 2, "expr": [3, 4, 17, 27, 29], "expres": 5, "express": [2, 3, 4, 5, 7, 15, 17, 20, 21, 25, 27, 29], "ext_dict": 6, "extend": [2, 17, 27], "extend_at_boundary_pauli": 29, "extend_for_px_output": 29, "extens": [1, 2, 6, 7, 9, 10, 12, 21, 29], "extern": [2, 3, 21], "extra": [1, 2, 15, 18, 29], "extract": [2, 17, 29], "f": 27, "facil": 2, "fact": 27, "factori": [1, 5], "fagan": [17, 25], "fail": [1, 4, 12, 17], "failur": [1, 2], "fair": 11, "fals": [1, 3, 4, 7, 16, 17, 18, 20, 25, 27, 28, 29], "familiar": 2, "faq": 11, "fashion": 3, "fast": [1, 20, 25], "faster": [2, 16], "favour": 2, "fcnode": 0, "featur": [1, 2, 4, 8, 10, 11], "feedforward": [1, 20], "feel": [11, 12], "few": 17, "fewer": [2, 4, 17, 25], "fidel": [2, 17, 19, 25], "field": [1, 2, 3], "file": [2, 4, 6, 7, 21, 22, 27, 28], "filehandl": 4, "filenam": [4, 21, 27], "filepath": 28, "fill": 4, "filter": [2, 27, 29], "filter_by_typ": 5, "final": [2, 3, 4, 10, 17, 25, 27], "final_map": 20, "find": [3, 12, 16, 17, 19, 24, 25], "finish": 1, "first": [0, 2, 4, 5, 14, 15, 16, 19, 27, 29], "fix": [2, 3, 4, 10, 11, 12, 25, 27], "flag": [1, 2, 3, 10, 16], "flatten_regist": [2, 4], "flattenregist": [2, 11, 17], "flattenrelabelregisterspass": [2, 11, 17], "flexibl": [2, 10], "flip": [16, 29], "float": [1, 2, 3, 4, 7, 17, 19, 25, 27, 29], "flow": [2, 11, 15, 29], "fmt": 27, "focu": [17, 29], "focus": 10, "focuss": 29, "fold": [5, 17, 25], "follow": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 17, 20, 21, 25, 27, 29], "forc": [2, 27], "forestbackend": [2, 8], "foreststatebackend": 8, "form": [1, 3, 6, 15, 17, 18, 25, 27, 29], "formal": 17, "format": [1, 3, 7, 9, 21, 22, 27], "former": 2, "found": [1, 3, 11, 17, 19, 24, 25, 29], "frac": [15, 27], "frac12": [3, 15], "frac14": 15, "frac16": 15, "fraction": 2, "fragment": 2, "frame": 24, "framerandomis": [11, 24], "frametyp": 24, "framework": [10, 29], "free": [2, 11, 12, 27, 29], "free_symbol": [2, 3, 4, 29], "frequenc": 10, "frequent": 9, "fresh_symbol": [3, 11], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "from_default_config_fil": 6, "from_dict": [0, 1, 2, 3, 4, 5, 16, 17, 19, 20, 27], "from_empirical_distribut": 27, "from_extension_dict": 6, "from_int": 27, "from_list": [18, 26, 27], "from_nam": 15, "from_openfermion": 2, "from_pytketconfig": 6, "from_readout": 27, "from_str": 1, "front": [14, 17, 25], "fsim": [2, 4, 15], "full": [2, 7, 8, 14, 17, 18, 22, 27], "fulli": [0, 2], "fullmappingpass": [11, 17], "fullpeeopholeoptimis": 2, "fullpeepholeoptimis": [2, 11, 17], "fully_connect": 19, "fullyconnect": [0, 1, 2, 11, 19], "func_nam": 3, "funcnam": 4, "function": [0, 2, 3, 4, 5, 7, 9, 11, 14, 15, 17, 18, 20, 21, 23, 25, 26, 27, 29], "further": [1, 2, 4, 17, 25, 27, 29], "furthermor": 27, "futur": 17, "g": [2, 3, 8, 9, 12, 15, 23, 26, 27, 29], "gadget": [3, 11, 17, 25, 29], "gadgetise_interior_pauli": 29, "gagdet": 17, "gamma": 15, "gate": [1, 2, 3, 7, 9, 10, 11, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27], "gate_count": [2, 27], "gate_depth": [3, 4], "gate_set": 1, "gateerror": 2, "gateset": [2, 9, 17, 20, 25], "gatesetpred": [2, 11, 20], "gauss": 17, "gen": 29, "gen_auto_rebase_pass": 2, "gen_term_sequence_circuit": [2, 11, 27], "gener": [0, 1, 2, 4, 7, 9, 10, 11, 15, 16, 17, 18, 19, 21, 22, 25, 27, 29], "generalis": 2, "gentl": 10, "genuin": 4, "geq": 5, "get": [2, 4, 6, 7, 11, 19, 27], "get_": 1, "get_act": 3, "get_adjacent_nod": 0, "get_all_circuit": 24, "get_bitlist": 1, "get_bitstring_op_pair_list": 3, "get_boundari": 29, "get_c_regist": [2, 4], "get_circuit": [2, 3, 23], "get_circuit_render": 7, "get_command": 4, "get_compiled_circuit": [1, 2, 10], "get_comput": 3, "get_config": 2, "get_config_file_path": [6, 11], "get_control_st": 3, "get_control_state_bit": 3, "get_count": [1, 2, 10, 27], "get_cx_config": 3, "get_dag": 27, "get_debug_info": [1, 2], "get_density_matrix": 1, "get_depth_weight": 3, "get_diagon": 3, "get_dict": [2, 27], "get_dist": 0, "get_distribut": 1, "get_empirical_distribut": 1, "get_exp": 3, "get_func": 27, "get_gate_depth": 3, "get_gate_set": 17, "get_graph_colouring_method": 3, "get_impl_diag": 3, "get_matrix": 3, "get_max": 3, "get_metr": [2, 17], "get_min": 3, "get_misc": 1, "get_n_bit": 3, "get_n_control": 3, "get_n_i": 3, "get_n_io": 3, "get_n_o": 3, "get_n_qubit": 3, "get_nam": [3, 29], "get_op": 3, "get_op_map": [2, 3], "get_op_type_count": 3, "get_op_type_depth": 3, "get_operator_expectation_valu": [2, 11, 27], "get_parallel_measur": 27, "get_partition_strategi": 3, "get_pass": [2, 17], "get_pauli": 3, "get_pauli_expectation_valu": [11, 27], "get_paulis_pair": 3, "get_permut": 3, "get_phas": 3, "get_phase_pair": 3, "get_placement_map": 19, "get_postcondit": [2, 17], "get_precondit": [2, 17], "get_pred": [2, 17], "get_probability_distribut": [1, 2], "get_q_regist": [2, 4], "get_qbitlist": 1, "get_qtyp": 29, "get_qubit_graph": 27, "get_render_opt": 7, "get_resourc": [2, 3, 4], "get_resource_data": 3, "get_result": [1, 2], "get_rotation_axi": 3, "get_row_product": 23, "get_scor": 17, "get_sequ": [2, 17], "get_shot": [1, 2, 27], "get_stabilis": 3, "get_stat": [1, 2], "get_statevector": [2, 3, 4], "get_strat": 3, "get_synthesis_strategi": 3, "get_tableau": 23, "get_two_qubit_gate_depth": 3, "get_uncomput": 3, "get_unitari": [1, 2, 3, 4], "get_unitary_times_oth": 4, "get_vertex_zxgen": 29, "get_wire_end": 29, "get_wire_qtyp": 29, "get_wire_typ": 29, "get_xrow": 23, "get_zrow": 23, "get_zxtyp": 29, "getter": 2, "github": [2, 11, 12], "give": [1, 2, 3, 11, 24, 25, 27, 29], "given": [0, 1, 2, 3, 4, 6, 7, 14, 15, 17, 19, 20, 22, 23, 24, 25, 27, 29], "global": [0, 2, 4, 13, 15, 17, 18, 22, 25, 27, 29], "globalisephasedx": [2, 11, 17, 25], "globalphasedxpred": 2, "go": 2, "good": 3, "googl": 2, "goto": 15, "gottesman": 23, "gphase": 22, "gpi": [2, 4, 15, 25], "gpi2": [2, 4, 15, 25], "grammar": [2, 17], "graph": [0, 2, 3, 11, 16, 17, 19, 20, 25, 27, 29], "graph_colour": 3, "graphcolourmethod": [2, 3, 11, 16, 27], "graphlik": 29, "graphplac": [2, 11, 17, 19], "graphviz": [2, 27, 29], "greater": [2, 3, 4, 5], "greedi": [2, 3, 17, 25], "greedili": 16, "greedypaulisimp": [2, 11, 17, 25], "green": 29, "grid": [0, 2, 26], "gridnod": 0, "group": [3, 4, 17], "grow": 1, "gt": 5, "gu": 23, "guarante": [1, 2, 3, 4, 29], "guid": [10, 11, 12], "guidedpaulisimp": [2, 11, 17, 27], "h": [1, 3, 4, 7, 9, 10, 15, 17, 24, 25, 27, 29], "h1": 8, "h2": 8, "ha": [1, 2, 3, 4, 8, 11, 12, 16, 17, 19, 20, 27, 29], "had": [12, 17], "hadamard": [4, 10, 15, 29], "half": [2, 3, 4, 15, 17, 25, 29], "halfturn": 4, "halt": 15, "hamilton": 17, "hamiltonian": [2, 19, 27], "hampath": 17, "hand": 10, "handi": 10, "handl": [1, 2, 9, 21, 26, 29], "handler": [4, 28], "hardcod": 9, "harder": 3, "hardwar": [1, 2, 9], "hashabl": 1, "have": [1, 2, 3, 4, 8, 9, 11, 12, 15, 17, 19, 20, 21, 25, 27, 29], "haven": 12, "hbox": 29, "header": [2, 21], "height": 7, "held": [4, 17], "help": 11, "here": [9, 10, 11], "hermitan": 1, "hermitian": [2, 3, 15], "hexagonalgrid": 2, "high": [2, 27], "higher": [1, 4, 9, 10], "highest": [16, 25], "hit": 2, "hold": [3, 4, 6, 15, 20, 27], "homonym": 2, "honeywel": 2, "honeywellbackend": 2, "hopf": 29, "how": [2, 3, 9, 10, 12, 27, 29], "howev": [1, 3, 17, 21], "hqslib1": [2, 21], "html": [2, 7, 15, 27], "http": [1, 2, 15, 17, 25, 27], "hypercub": 3, "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29], "ibm": [2, 8, 9, 10, 15], "ibm_nairobi": 10, "ibmq": [2, 8, 10], "ibmqbackend": [2, 8, 10], "ibmqemulatorbackend": [2, 8], "id": [1, 2, 3, 4, 26], "ideal": 1, "ident": [2, 4, 15, 17, 18, 23, 25, 27, 29], "identif": 29, "identifi": [1, 2, 3, 4, 25, 29], "identify_causal_flow": 29, "identify_focussed_set": 29, "identify_pauli_flow": 29, "ie": [15, 17, 25], "if_bit": 5, "if_not_bit": 5, "ignor": [1, 2, 4, 17, 22, 24, 27], "iht": 27, "ilo": [1, 3, 4, 18, 27], "imag": 27, "imagin": 3, "imaginari": 27, "immedi": 15, "immutabledensematrix": 27, "immutablematrix": 27, "impact": [17, 25], "impl_diag": 3, "implement": [1, 2, 3, 9, 14, 17, 18, 25, 27, 29], "impli": [2, 17, 20], "implicit": [2, 4, 17, 21, 25], "implicit_qubit_permut": 4, "import": [2, 4, 7, 9, 10, 11, 21], "improv": [2, 17, 23, 25], "inaccuraci": 2, "incid": 29, "includ": [1, 2, 3, 4, 8, 10, 12, 16, 17, 20, 21, 27, 29], "include_condit": [2, 4], "include_gate_def": 21, "inclus": 3, "incompet": 2, "incorpor": 2, "incorrect": 2, "increas": [0, 1, 2, 3, 4, 12, 17, 20, 27], "indefinit": 1, "independ": 19, "index": [0, 2, 3, 4, 11, 16, 17, 18, 21, 23, 26, 27], "indic": [0, 2, 3, 4, 16, 19, 23, 27, 29], "individu": [2, 3, 10, 17, 24, 25, 27, 29], "ineffici": 2, "inequ": [3, 5], "infer": 27, "info": [13, 27], "inform": [1, 2, 3, 13, 14, 15, 17, 27, 29], "inherit": [0, 1, 14, 29], "init": 6, "initi": [2, 3, 4, 7, 10, 14, 17, 27], "initial_map": 20, "initialis": [1, 2, 10], "inject": 27, "inlin": 7, "inner": 29, "input": [1, 2, 3, 4, 15, 16, 17, 20, 23, 24, 25, 27, 29], "input_arrai": 27, "input_bit": 3, "input_fil": [21, 22], "input_qb": 27, "input_reg": [3, 4], "input_st": 27, "input_width": 3, "insert": [2, 11, 14, 25, 27], "insid": [2, 17, 29], "inspect": [2, 17], "instal": [1, 2, 7, 8, 9, 10, 27], "instanc": [0, 1, 2, 3, 4, 6, 7, 8, 15, 16, 17, 18, 19, 20, 24, 26, 27, 29], "instanti": [4, 7], "instead": [1, 2, 3, 4, 9, 12, 17, 19], "instruct": [10, 17, 27], "int": [0, 1, 2, 3, 4, 5, 7, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29], "int_dist_from_st": 2, "int_siz": 28, "integ": [3, 4, 17, 25, 27, 28, 29], "intend": 27, "intens": 1, "inter": [1, 14], "interact": [1, 3, 4, 7, 10, 11, 12, 15, 19], "interest": [1, 4], "interfac": [1, 2, 8, 10, 11], "interior": [4, 29], "intermedi": 10, "intern": [1, 2, 7, 17, 29], "internalis": 29, "internalise_gadget": 29, "internet": 7, "interoper": 10, "interpret": [3, 9, 27], "interpret_math": 7, "interv": [1, 3, 17, 20, 25], "interven": 4, "introduc": [2, 17, 24, 25, 27, 29], "introduct": [2, 10, 11], "intuit": [3, 25], "invalid": [1, 2, 3, 29], "invalidresulttyp": 1, "invers": [4, 17, 25, 27], "invert": 16, "invok": 17, "involv": 5, "io_extens": 29, "ionq": [2, 25], "iqm": [8, 11], "iqmbackend": 8, "is_clifford": [2, 3], "is_clifford_typ": [2, 3], "is_gat": 3, "is_invers": 3, "is_regist": 27, "is_simpl": 4, "is_symbol": 29, "is_upper_triangl": 3, "isol": 2, "issu": [2, 12], "iswap": [2, 4, 15], "iswapmax": [2, 4, 15], "ita": [3, 15], "item": 27, "iter": [1, 2, 3, 4, 5, 16, 17, 25, 27, 29], "its": [1, 2, 4, 10, 15, 17, 20, 23, 25, 27, 29], "itself": 1, "j": [3, 4, 7], "jinja2": [2, 7], "job": 1, "join": 11, "json": [0, 1, 2, 3, 4, 5, 16, 17, 18, 19, 20, 26, 27], "jump": 15, "jupyt": [2, 7], "just": 2, "k": [3, 27, 29], "kak": [2, 17, 25], "kakdecomposit": [2, 11, 17, 25], "keen": 11, "keep": [2, 10, 17], "keep_blank_classical_wir": 4, "kei": [1, 3, 4, 27], "keyerror": 1, "keyword": [1, 2, 4, 17, 22, 25], "knowledg": [2, 17], "known": [1, 2, 12, 17, 25, 27], "kwarg": [0, 1, 2, 3, 4, 7, 17, 18, 19, 20, 23, 25, 26, 27, 29], "label": [0, 2, 14, 15, 17, 19], "lambda": [15, 17, 25, 27], "langl": 27, "languag": 10, "larg": 3, "larger": 2, "largestfirst": [16, 27], "lark": 2, "last": [3, 20, 29], "later": [2, 10], "latest": [11, 12], "latex": [2, 3, 4], "lattic": 0, "layer": [0, 14, 26], "lazi": [3, 16, 27], "ldot": [15, 27], "le": 3, "lead": 2, "least": [1, 17, 18, 25, 29], "leav": [17, 25, 27], "left": [2, 3, 4, 15, 17, 19, 25, 27], "legaci": 22, "length": [2, 23, 26, 27, 28], "leq": 5, "less": [3, 5, 17, 25, 27], "letter": 18, "level": [1, 2, 9, 10, 11, 13, 27], "lexicograph": [1, 2, 3, 4, 14], "lexilabellingmethod": [2, 11, 14, 17], "lexirout": 14, "lexiroutelabellingmethod": 2, "lexirouteroutingmethod": [2, 11, 14, 17], "librari": [8, 11], "licens": 11, "light": 1, "like": [10, 11, 12, 27], "likewis": 4, "limit": [2, 17, 22], "line": [2, 7, 19], "linear": [2, 3, 4, 15, 26], "linear_transform": 3, "lineplac": [2, 11, 19], "link": [0, 11, 12], "link_error": 19, "linux": [2, 10, 11, 12], "list": [0, 1, 2, 3, 4, 5, 7, 8, 11, 16, 17, 18, 19, 24, 25, 26, 27, 29], "list_i": 4, "list_o": 4, "liter": 7, "littl": [3, 4, 27], "load": [5, 6, 7], "load_config_fil": [6, 11], "local": 29, "locat": 27, "log": [2, 11], "log_level": 13, "logarithm": 3, "logic": [2, 5, 14, 15, 19, 25, 27], "logic_exp": [3, 4, 11], "logicexp": [2, 3, 5], "long": 2, "longer": [2, 12, 19, 25, 27, 29], "longest": 4, "look": 11, "lookahead": [14, 17, 25], "loop": [25, 29], "low": 3, "lower": [2, 3, 4, 17, 19, 27], "lowest": 2, "lsh": 5, "lt": 5, "ltsc": 12, "lvert": 3, "m": [3, 4, 12, 18, 23], "m1": [2, 12], "mac": 12, "machin": [6, 27], "maco": [2, 10, 11, 12], "made": [2, 3, 4, 15, 25, 29], "magnitud": [2, 27], "mai": [1, 3, 4, 11, 12, 15, 16, 17, 20, 24, 25, 27, 29], "main": [3, 25], "major": 2, "make": [2, 3, 4, 21, 27, 29], "manag": [7, 10], "mani": [1, 2, 4, 9, 10, 17, 29], "manipul": [2, 10], "manner": 3, "manual": [1, 2, 4, 5, 9, 10, 17, 19, 20], "map": [0, 1, 2, 3, 4, 5, 11, 16, 17, 18, 19, 20, 24, 25, 27, 29], "mappingmanag": [11, 14], "mapsto": 15, "margin": [1, 27], "marginalis": 1, "match": [1, 2, 3, 4, 5, 17, 18, 19, 23, 25, 27, 29], "math": 7, "mathemat": 27, "mathrm": [15, 17], "matr": 4, "matric": [1, 2, 27], "matrix": [1, 2, 3, 4, 11, 15, 17, 18, 27], "max": 3, "max_depth": 14, "max_lookahead": [2, 17, 25], "max_siz": [14, 17], "max_tqe_candid": [2, 17, 25], "maxim": 15, "maximum": [1, 2, 3, 14, 17, 19, 21, 25], "maximum_line_depth": 19, "maximum_line_g": 19, "maximum_match": 19, "maximum_pattern_depth": 19, "maximum_pattern_g": 19, "maxnclregpred": [2, 11, 20], "maxnqubitspred": [11, 20], "maxtwoqubitgatespred": [11, 20], "maxval": 4, "maxwidth": [2, 21], "mbqc": 29, "mean": [2, 3, 4, 17, 19, 27], "meaning": 4, "measur": [1, 2, 4, 10, 15, 16, 17, 19, 20, 25, 27, 29], "measure_al": [4, 7, 10], "measure_regist": [2, 4], "measurement_circ": 16, "measurement_reduct": [11, 16], "measurementbitmap": [2, 11, 16], "measurementsetup": [2, 11, 16], "meet": [1, 10], "member": [3, 13, 15, 16, 17, 18, 25, 26, 27, 29], "memori": [1, 2, 28], "merg": [3, 17, 25, 29], "merge_gadget": 29, "messag": [1, 2], "met": [17, 25], "meta": [15, 20], "metaop": 2, "meth": 2, "method": [0, 1, 2, 3, 6, 9, 10, 11, 14, 16, 17, 19, 21, 23, 25, 27, 29], "metric": 17, "mid": [2, 17, 27], "midcircuit": 1, "might": 12, "millisecond": 19, "min": 3, "min_height": 7, "min_p": [1, 2, 27], "min_siz": 17, "min_width": 7, "minim": [17, 25], "minimis": [2, 27], "minimum": [1, 3, 16, 27], "minor": 2, "minval": 4, "misc": 1, "miss": [2, 21], "mitig": 2, "mix": [2, 29], "mixtur": [1, 8], "mode": [7, 12], "model": [2, 8], "modif": [14, 17], "modifi": [4, 14, 15, 17, 19, 27], "modify_config": 19, "modul": [1, 2, 3, 4, 6, 8, 10, 11, 19, 21, 24, 27, 28], "molecular": 27, "monomorph": 19, "monomorphsim": 19, "monoton": 27, "month": [17, 25], "more": [1, 2, 4, 5, 10, 11, 12, 15, 17, 18, 19, 20, 25, 27], "most": [2, 3, 11, 12, 17, 18, 20, 27, 29], "move": [2, 17, 25], "much": [2, 16, 17], "mul": [5, 27], "multi": [2, 3, 7, 14, 17, 25], "multibit": 15, "multibitop": [2, 3, 11], "multidigraph": 27, "multidimension": 1, "multigatereorderroutingmethod": [2, 11, 14], "multipl": [2, 3, 4, 7, 15, 17, 24, 27, 29], "multiplex": [2, 3, 15], "multiplexedrotationbox": [2, 3, 4, 11, 15], "multiplexedtensoredu2box": [2, 3, 4, 11, 15], "multiplexedu2box": [2, 3, 4, 11, 15], "multiplexor": [2, 3, 15], "multiplexorbox": [2, 3, 4, 11, 15], "multipli": [2, 3, 4, 29], "multiply_scalar": 29, "multiqg": [2, 3], "multiqubit": [2, 25], "must": [1, 2, 3, 4, 11, 17, 19, 20, 21, 22, 23, 25, 27, 29], "mutat": [3, 10], "mutual": [16, 17, 25], "my": 9, "my_qasm_fil": 10, "n": [0, 2, 3, 4, 15, 16, 17, 18, 20, 23, 25, 27, 29], "n_1qb_gate": [2, 4], "n_2qb_gate": [2, 4], "n_bit": [3, 4], "n_cl_reg": 1, "n_column": 0, "n_control": 3, "n_gate": 4, "n_gates_of_typ": [2, 4], "n_i32": 3, "n_input": 3, "n_input_output": 3, "n_layer": 0, "n_node": 1, "n_nqb_gate": [2, 4], "n_outcom": 27, "n_output": 3, "n_port": 29, "n_qubit": [3, 4, 18], "n_row": 0, "n_shot": [1, 2, 10, 27], "n_vertic": 29, "n_wire": 29, "nairobi": 10, "nairobi_devic": 10, "naiveplacementpass": [2, 11, 17], "name": [0, 1, 2, 3, 4, 7, 8, 11, 13, 15, 16, 17, 18, 22, 25, 26, 27, 29], "namedtupl": 1, "namespac": [2, 4], "nan": 2, "nativ": [2, 10, 12, 27], "natur": [2, 3], "naur": 17, "nb": 17, "ndarrai": [1, 3, 4, 8, 18, 23, 27], "nearest": [3, 17], "necessari": [1, 27], "necessarili": [3, 15, 25], "need": [2, 3, 4, 11, 12, 16, 17, 20, 25], "neg": [27, 29], "negat": [3, 27], "neighbour": [3, 15, 29], "neighbourhood": 29, "neither": 4, "neq": 5, "nest": [5, 7, 17], "network": 11, "networkx": [2, 27], "new": [1, 2, 3, 4, 7, 11, 14, 16, 17, 18, 19, 24, 25, 26, 27, 29], "next": 29, "nisq": 10, "nobarrierspred": [2, 11, 20], "noclassicalbitspred": [11, 20], "noclassicalcontrolpred": [11, 20], "node": [0, 1, 2, 11, 17, 19, 20, 25, 26, 27, 29], "node_0": 0, "node_1": 0, "node_error": 19, "nodegraph": 2, "nofastfeedforwardpred": [11, 20], "nois": [2, 8, 17, 24, 25, 27], "noiseawareplac": [2, 11, 19], "noiseless": 8, "noisemodel": 8, "noisi": 10, "nomidmeasurepred": [11, 20], "non": [0, 1, 2, 3, 4, 17, 20, 23, 25, 27, 29], "nonconflictingset": 16, "none": [0, 1, 3, 4, 5, 6, 7, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29], "noop": 15, "nor": 4, "normalis": [2, 3, 17, 20, 25], "normalisedtk2pred": [2, 11, 17, 20, 25], "normalisetk2": [2, 11, 17, 25], "nosymbolspred": [11, 20], "notat": 2, "note": [1, 9, 15, 17, 20, 21, 27], "notebook": [2, 4, 10, 11, 17, 20], "notimplementederror": 1, "now": [2, 12, 22], "nowireswapspred": [11, 20], "np": [1, 27], "nphasedx": [2, 15, 17, 25], "nqb": 23, "nullaryop": 5, "num_bit": 3, "num_w": 3, "number": [0, 1, 2, 3, 4, 7, 10, 14, 16, 17, 18, 19, 20, 23, 24, 25, 27, 29], "numer": [2, 4, 11, 17, 25, 26, 27, 29], "numpi": [1, 2, 3, 4, 18, 23, 27], "o": [16, 29], "o1pass": 2, "o2pass": 2, "object": [0, 1, 2, 3, 4, 6, 14, 16, 17, 18, 19, 20, 21, 27, 29], "observ": [1, 27], "obtain": [1, 12, 17, 25, 27], "occasion": 2, "occupi": [1, 3], "occur": [2, 3, 4, 17, 19, 20, 25, 29], "odd": 29, "off": [13, 23], "offer": 8, "offici": 12, "offlin": 7, "offline_displai": 7, "often": 16, "old": [11, 17], "older": [10, 11, 12], "omit": [17, 27], "onc": [2, 29], "one": [1, 2, 3, 4, 5, 7, 9, 11, 15, 17, 20, 25, 27, 29], "ones": [3, 20], "onli": [1, 2, 3, 4, 5, 7, 9, 13, 14, 15, 17, 20, 22, 24, 25, 27, 29], "onlin": 2, "only_reduc": [2, 17], "only_zero": [17, 25], "onto": [4, 25], "op": [2, 3, 4, 5, 11, 15, 17, 28], "op_map": 3, "op_node_error": 25, "op_type_count": [3, 4], "op_type_depth": [3, 4], "open": [2, 3, 4, 7, 29], "openbla": 12, "openfermion": 2, "openqasm": [3, 10, 21], "oper": [0, 1, 2, 3, 4, 5, 8, 9, 11, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 29], "operand": 29, "operator_matrix": 2, "opgroup": [2, 3, 4, 17, 25], "opposit": [2, 9], "ops_of_typ": [2, 4], "optim": [2, 10, 17, 25], "optimis": [1, 2, 3, 4, 10, 11, 17, 23, 25], "optimisation_level": [1, 2], "optimisatioon": 1, "optimiseclifford": 25, "optimisecliffordszx": 2, "optimisepauligadget": [2, 25], "optimisephasegadget": [2, 11, 17, 25], "optimisepostrout": [2, 25], "optimisestandard": [2, 25], "option": [1, 2, 3, 4, 6, 7, 8, 16, 17, 21, 25, 27, 28, 29], "optyp": [1, 2, 3, 4, 9, 11, 17, 20, 23, 24, 25, 27], "optypevector": 24, "order": [1, 2, 3, 4, 5, 9, 11, 14, 15, 16, 17, 18, 19, 20, 24, 27, 29], "org": [3, 15, 17, 25, 27], "orient": [7, 17, 25], "origin": [19, 20, 25, 27], "other": [1, 2, 3, 4, 10, 11, 12, 15, 17, 18, 20, 21, 25, 27, 29], "other_end": 29, "otherwis": [1, 12, 17, 25, 27, 29], "otim": [3, 15, 27], "our": [3, 10, 11, 12], "out": [2, 4, 10, 17, 25, 27, 29], "outcom": [1, 15, 27], "outcomearrai": [1, 11, 27], "outdegre": 19, "outer": 4, "outlin": 14, "output": [1, 2, 3, 4, 5, 7, 15, 17, 20, 21, 23, 24, 25, 27, 29], "output_fil": 21, "output_posn": 3, "output_reg": 4, "output_width": 3, "outsid": 25, "over": [1, 2, 3, 4, 5, 15, 17, 18, 22, 23, 25, 27, 29], "overal": [2, 3, 4, 17], "overheard": 19, "overload": [0, 3, 4, 17, 18, 20, 23, 25, 26, 29], "overrid": 27, "overridden": 2, "overwritten": 2, "own": [1, 2, 10, 17, 20, 27], "p": [15, 17, 23, 24, 27], "p_config": 6, "p_j": 27, "packag": [2, 4, 6, 10, 11, 12], "pad": [4, 18, 27], "page": [9, 10, 11], "pair": [0, 2, 3, 4, 15, 17, 18, 19, 25, 27, 29], "pairsimplement": 3, "pairwis": [15, 17, 25], "paper": 11, "parallel": [3, 4, 15, 27, 29], "parallel_h_remov": 29, "parallel_measur": 27, "parallelmeasur": 27, "param": [3, 4, 7, 29], "paramet": [0, 1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "parameteris": [2, 3, 4, 29], "parametris": [3, 15], "paramt": 19, "parent": 14, "pariti": [16, 27], "pars": 2, "parser": [2, 21, 22], "part": 2, "partial": [14, 19], "particular": [2, 4, 29], "partit": [2, 3, 11, 27], "partition_strat": 27, "partitioning_strategi": 3, "pass": [1, 2, 4, 10, 11, 19, 25, 27], "pass_list": 17, "passess": 2, "passlist": 17, "passselector": [2, 11, 17], "password": 2, "past": [17, 25], "patch": 2, "path": [4, 6, 17, 19, 21, 27, 28], "pathlik": 21, "pattern": [2, 3, 19], "pauli": [2, 3, 11, 15, 16, 17, 23, 24, 25, 27, 29], "pauli_gadget": 3, "pauli_list": 27, "pauli_str": 27, "pauli_string_mult": [11, 18], "pauli_tensor_matrix": 2, "pauliexpbox": [2, 3, 4, 11, 15, 27], "pauliexpcommutingsetbox": [2, 3, 4, 11, 15], "pauliexponenti": [2, 11, 17], "pauliexppairbox": [2, 3, 4, 11, 15], "pauliframerandomis": [2, 11, 24], "paulipartitionstrat": [3, 11, 16, 27], "paulis0": 3, "paulis1": 3, "paulisimp": [2, 11, 17, 27], "paulisquash": [2, 11, 17], "paulistabilis": [2, 3, 11, 18], "paulisynthstrat": [2, 3, 11, 17, 25], "pdf": 27, "peculiar": 4, "peephol": 17, "peepholeoptimise2q": [2, 11, 17], "pennylan": [8, 11], "per": 1, "perform": [0, 1, 2, 3, 4, 9, 10, 15, 16, 17, 18, 19, 23, 24, 25, 27, 29], "perhap": 15, "perman": 15, "permit": [2, 14, 20], "permut": [1, 2, 3, 14, 15, 17, 21, 25, 27], "permute_basis_index": [11, 27], "permute_qubits_in_statevector": [11, 27], "permute_rows_cols_in_unitari": [11, 27], "persist": 1, "persistent_handl": 1, "ph": 3, "phase": [2, 3, 4, 11, 15, 17, 20, 22, 23, 24, 25, 27, 29], "phase_polynomi": 3, "phase_polynomial_as_list": 3, "phasedgen": [11, 29], "phasediswap": [2, 4, 15], "phasedx": [2, 4, 15, 17, 25], "phasepolybox": [2, 3, 4, 11, 15], "phi": 15, "phi_0": 15, "phi_1": 15, "physic": [2, 14, 19, 25, 26, 27], "physicalcircuit": 2, "pi": [2, 3, 4, 10, 15, 17, 25, 27, 29], "pick": [11, 14], "pickl": 2, "pip": [7, 8, 10, 11], "pip3": 12, "pivot": 29, "pkg": 11, "pkg_resourc": [2, 11], "place": [1, 2, 3, 4, 15, 17, 19, 25, 27, 29], "place_fully_connect": [11, 19], "place_with_map": [11, 19], "placehold": [3, 15], "placement": [0, 2, 11, 17, 20, 25], "placementpass": [11, 17], "placementpred": [11, 20], "placer": 17, "plane": 29, "platform": [2, 8, 10, 11], "pleas": [1, 4, 11, 12, 19], "plug": 2, "png": 27, "point": [2, 4, 12, 17, 25, 27, 29], "poll": 1, "polynomi": [2, 3, 15, 17], "polynomin": 17, "poorli": 27, "pop_result": 1, "popular": [2, 10], "port": [3, 29], "port0": 29, "port1": 29, "posisbli": 4, "posit": [1, 2, 3, 26, 27, 29], "possibl": [1, 2, 3, 4, 7, 10, 11, 12, 16, 17, 25, 27, 29], "possibli": [3, 4, 17, 29], "post": [1, 25, 27], "postcondit": 17, "postprocess": 1, "postselect": 29, "potenti": 3, "pow": 5, "power": [2, 10], "ppcirc": [1, 27], "pre": [2, 17, 25], "precis": [17, 25], "precondit": [2, 17], "predic": [1, 2, 3, 4, 5, 11, 15, 17], "predicateexp": 5, "prefer": [2, 3, 11, 17, 25], "prefix": [12, 27], "premium": 2, "prepar": [2, 3, 8, 15, 27], "prepare_circuit": [11, 27], "present": [1, 2, 7, 9, 17, 29], "preserv": [2, 17, 24, 25], "prevent": 15, "previous": 2, "primit": [1, 2], "print": [4, 7, 10], "priori": 27, "prioritis": [17, 25, 27], "probabilitydistribut": [1, 2, 27], "probabl": [1, 2, 27], "problem": [2, 11, 12], "probs_from_count": [11, 27], "probs_from_st": [11, 27], "proce": 14, "procedur": [2, 27], "proceed": [17, 25], "process": [1, 2, 8, 17, 25, 27, 29], "process_circuit": [1, 2], "produc": [0, 1, 2, 4, 8, 17, 25, 27], "product": [2, 3, 4, 18, 27], "program": [2, 15, 19, 22], "project": [11, 15], "projector": 3, "projectorassertionbox": [2, 3, 4, 11], "projectq": [2, 3, 8, 11, 25], "projectqbackend": 8, "propag": 3, "proper": 29, "properli": 2, "properti": [0, 1, 2, 3, 4, 7, 13, 15, 16, 17, 18, 20, 25, 26, 27, 29], "prototyp": 27, "provid": [1, 2, 3, 4, 8, 9, 10, 11, 17, 19, 20, 24, 25, 27], "prune": 27, "psi": 27, "pu": 23, "public": [11, 17], "publish": 12, "pure": [3, 4, 8, 17, 27], "purpos": [14, 17, 27], "push": [2, 29], "pushcliffordsthroughmeasur": [2, 25], "px": 29, "py": [2, 4, 27, 29], "pybind11": 4, "pypi": [2, 10, 11, 12], "pyquil": [2, 8, 11, 12], "pysimplex": [8, 11], "python": [2, 3, 4, 8, 10, 11, 12, 14, 17], "python3": 12, "pytket": [2, 8, 9, 10], "pytket_aqt": 2, "pytket_config": 6, "pytket_honeywel": 2, "pytket_qiskit": 2, "pytket_qsharp": 2, "pytketconfig": [2, 6, 11], "pytketextconfig": [6, 11], "pyzx": [2, 8, 11, 25], "pz": 29, "q": [2, 4, 9, 17, 22, 23], "q_bit": 1, "q_regist": [2, 4], "qasm": [2, 3, 8, 10, 11], "qasm_str": 21, "qb": 23, "qbit": 1, "qc": [2, 9, 10], "qcontrolbox": [2, 3, 4, 11, 15, 17], "qdiscard": 22, "qelib1": 21, "qgate": 22, "qhad": 22, "qind_to_squind": 0, "qinit": 22, "qir": [8, 11], "qiskit": [2, 3, 8, 10, 11, 12, 15], "qiskit_to_tk": [9, 10], "qmap": 19, "qmea": 22, "qmultinot": 22, "qnot": 22, "qprep": 22, "qpu": 11, "qreg": 4, "qregmap": 4, "qsharp": 2, "qswap": 22, "qterm": 22, "qtype": 29, "qu": [1, 2, 23], "quant": 3, "quantikz": [2, 4], "quantinuum": [1, 8, 11], "quantinuumbackend": 8, "quantomat": 2, "quantum": [1, 2, 3, 4, 8, 9, 10, 11, 15, 17, 20, 25, 27, 29], "quantumcircuit": [2, 9, 10], "quantumtyp": [11, 29], "qubit": [0, 1, 2, 3, 4, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29], "qubit0": 4, "qubit1": 4, "qubit2": 4, "qubit_0": 4, "qubit_1": 4, "qubit_2": 4, "qubit_cr": 4, "qubit_create_al": 4, "qubit_discard": 4, "qubit_discard_al": 4, "qubit_indic": 3, "qubit_is_cr": 4, "qubit_is_discard": 4, "qubit_map": 17, "qubit_readout": [2, 4], "qubit_subset": 27, "qubit_to_bit_map": [2, 4], "qubiterrorcontain": 2, "qubitmap": 2, "qubitoper": 2, "qubitpaulioper": [2, 11, 27], "qubitpaulistr": [2, 11, 16, 18, 24, 27], "qubitpaulistring1": 18, "qubitpaulistring2": 18, "qubitpaulitensor": [2, 11, 18, 23, 24], "qubitregist": [2, 4, 11, 26], "queri": 4, "quest": [8, 11], "questbackend": 8, "question": [9, 11], "queu": 1, "queue": [1, 2], "queue_posit": 1, "queued_tim": 1, "quickli": 9, "quimb": 2, "quipper": [2, 10, 11], "qujax": [8, 11], "qulac": [2, 8, 11], "qulacsbackend": 8, "qunprep": 22, "qvm": 2, "qw": 22, "r": 5, "radian": [3, 15, 29], "rais": [1, 2, 5, 17, 27, 29], "random": 2, "randomis": 24, "rang": [2, 3, 4, 8, 15, 27], "rangepred": [2, 15], "rangepredicateop": [2, 3, 11], "rangl": [3, 27], "rank": 14, "rate": [1, 2, 17, 19, 25], "rather": [2, 4, 17, 27], "raw": [10, 27], "read": [2, 3, 6, 20, 22, 23, 27, 28], "read_fil": 6, "readabl": [3, 4, 26, 29], "readi": 1, "readm": 12, "readonli": 2, "readout": [1, 3, 4, 10, 19, 27], "readout_count": [11, 27], "readout_error": 19, "readouterror": 19, "real": [1, 3, 8, 27], "realis": [17, 23, 27], "realli": 11, "rearrang": 27, "reason": 2, "rebas": [1, 2, 17, 25, 29], "rebase_pass": [1, 2], "rebase_to_mbqc": 29, "rebase_to_zx": 29, "rebasecustom": [2, 9, 11, 17], "rebasehq": 2, "rebaseibm": 2, "rebaseoqc": 2, "rebaseprojectq": 2, "rebasepyzx": 2, "rebasequil": 2, "rebasetket": [11, 17], "rebasetocirq": 25, "rebasetocliffordsingl": 25, "rebasetoionq": [2, 25], "rebasetoprojectq": 25, "rebasetopyzx": 25, "rebasetoqiskit": 2, "rebasetoquil": 25, "rebasetorzrx": 25, "rebasetotket": [2, 25], "rebaseufr": 2, "rebaseumd": 2, "rec": 17, "recent": [2, 12], "recogn": [2, 25], "recognis": [2, 4], "recommend": [2, 10, 11, 17, 23, 25], "record": [3, 10], "recurs": [2, 5, 7, 14, 17, 25, 29], "red": 29, "red_to_green": 29, "redesign": 2, "redirect": 25, "reduc": [2, 3, 4, 16, 17, 19, 25, 27, 29], "reduce_graphlike_form": 29, "reducesingl": [2, 25], "reduct": [2, 3, 17, 25, 27], "redund": [2, 17], "refactor": 2, "refer": [2, 4, 16, 27], "reference_st": 27, "reflect": [19, 27], "reg0_in": 4, "reg1_in": 4, "reg_eq": 5, "reg_geq": 5, "reg_gt": 5, "reg_in": 4, "reg_leq": 5, "reg_lt": 5, "reg_nam": 26, "reg_neq": 5, "reg_out": 4, "reg_posn": 3, "regadd": [3, 5], "regand": [3, 5], "regardless": [17, 29], "regdiv": [3, 5], "regeq": [3, 5], "reggeq": [3, 5], "reggt": [3, 5], "region": [3, 17], "regist": [1, 2, 3, 4, 5, 15, 17, 18, 20, 21, 23, 26, 27], "register_func": 27, "registerwis": 3, "regleq": [3, 5], "reglogicexp": [4, 5], "reglsh": [3, 5], "reglt": [3, 5], "regmul": [3, 5], "regneg": [3, 5], "regneq": [3, 5], "regnot": [3, 5], "regon": 3, "regor": [3, 5], "regpow": [3, 5], "regress": 2, "regrsh": [3, 5], "regsub": [3, 5], "regwiseop": 5, "regxor": [3, 5], "regzero": 3, "reimport": 21, "reject": [2, 17], "reject_dup": 4, "relabel": [2, 4, 17, 19], "relabel_classical_express": [4, 17], "relat": [1, 2, 9, 11, 29], "relax": 2, "releas": [11, 12, 17, 25], "relev": [1, 11, 17, 27, 29], "reli": 2, "reliabl": 2, "remain": [17, 19, 20, 25, 29], "remap": 17, "remedi": 12, "remot": [1, 8], "remov": [1, 2, 4, 7, 11, 15, 17, 18, 19, 25, 27, 29], "remove_blank_wir": [2, 4], "remove_interior_clifford": 29, "remove_interior_pauli": 29, "remove_redund": 17, "remove_vertex": 29, "remove_wir": 29, "removebarri": [2, 11, 17], "removediscard": [11, 17], "removeimplicitqubitpermut": [2, 11, 17], "removephaseop": [2, 11, 17], "removeredund": [2, 11, 17, 25], "renam": [2, 4, 5, 17], "rename_arg": 5, "rename_unit": [2, 4], "renamequbitspass": [2, 11, 17], "render": [2, 7, 27], "render_circuit_as_html": 7, "render_circuit_jupyt": [2, 7], "render_opt": 7, "reorder": [2, 17, 25], "repeat": [3, 17, 25, 27, 29], "repeatedli": [25, 29], "repeatpass": [2, 11, 17], "repeatuntilsatisfiedpass": [2, 11, 17], "repeatwithmetricpass": [2, 11, 17], "repl": 4, "replac": [2, 4, 9, 12, 15, 17, 25, 27, 29], "replace_implicit_wire_swap": [2, 4], "replace_swap": [2, 4], "replace_tk2_2cx": 2, "replacement_circuit": 17, "report": [1, 2, 11, 12], "repositori": [11, 12], "repres": [0, 1, 3, 4, 6, 8, 10, 11, 15, 18, 19, 21, 22, 23, 25, 27, 29], "represent": [0, 1, 2, 3, 4, 11, 16, 17, 18, 19, 20, 26, 27], "request": [1, 11], "request_id": 1, "requir": [1, 2, 4, 7, 10, 11, 12, 16, 17, 20, 24, 27, 29], "required_pred": 1, "res_dict": 1, "reset": [1, 2, 3, 4, 15, 17], "reshap": 4, "resourc": [2, 3, 4, 10, 11, 15, 29], "resource_data": [3, 4], "resource_data0": 4, "resource_data1": 4, "resourcebound": [2, 3, 4, 11], "resourcedata": [2, 3, 4, 11], "respect": [2, 4, 17, 18, 27], "respect_direct": 17, "respons": 17, "restor": 27, "restrict": 20, "result": [1, 2, 3, 4, 8, 9, 10, 12, 16, 17, 25, 27, 29], "result_typ": 8, "resultcach": 1, "resulthandl": [2, 11], "results_list": 27, "resynthesi": [2, 17], "resynthesis": [17, 25], "retain": 4, "retri": [1, 2], "retriev": [1, 2, 4, 16, 27], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "reus": [1, 2], "revers": 17, "revert": 2, "rewrit": [2, 11, 17, 25, 29], "rigett": 2, "rigetti": [2, 8], "right": [3, 4, 15, 27], "ring": 0, "ringarch": [0, 2, 11], "ringarchitectur": 0, "ringnod": 0, "rng": 1, "rotat": [2, 3, 4, 15, 16, 17, 25], "rotation_axi": 3, "round": [1, 2, 17, 25, 27], "round_angl": [2, 25], "round_to_int": 27, "roundangl": [2, 11, 17], "rout": [0, 1, 2, 3, 4, 11, 14, 17, 19, 25], "route_circuit": 14, "route_subcircuit": 14, "routin": [2, 10, 29], "routing_method": 14, "routingmethod": [2, 11, 14, 17], "routingmethodcircuit": [11, 14], "routingpass": [11, 17], "row": [0, 1, 2, 4, 7, 23, 26, 27], "rsh": 5, "rtype": 27, "rule": [15, 17, 25, 29], "run": [1, 2, 8, 10, 11, 12, 16, 17, 20, 22, 25, 27, 29], "run_circuit": [1, 2, 10], "running_tim": 1, "runtim": 2, "runtimeerror": [1, 27], "rv": 27, "rv_discret": 27, "rx": [3, 4, 15, 17, 25], "rxxyyzz": 2, "ry": [3, 4, 15, 17, 25], "rz": [2, 3, 4, 7, 9, 10, 15, 17, 24, 25], "safe": [2, 25], "safety_mod": 17, "safetymod": [11, 17], "same": [1, 2, 3, 4, 7, 12, 16, 17, 23, 25, 27, 29], "sampl": [2, 8, 17, 24, 25, 27], "sample_circuit": [2, 24], "sample_mean": 27, "sample_vari": 27, "satisfi": [1, 2, 17, 20, 25], "save": [2, 4, 6, 7, 21, 27], "save_dag": 27, "save_qubit_graph": 27, "save_render_opt": 7, "scalar": 29, "scale": [10, 27], "scenario": 2, "schema": 2, "scheme": 27, "scipi": [2, 12, 18, 27], "score": 17, "score_func": 17, "scratch": [2, 17], "scratch_reg_resize_pass": [2, 11, 17], "screen": 2, "script": 11, "sdg": [4, 15], "search": [2, 4, 11, 19], "second": [2, 4, 7, 15, 27], "section": [1, 5, 9, 10, 17, 20], "see": [1, 3, 4, 5, 9, 10, 11, 12, 15, 17, 19, 20, 25, 27], "seed": [1, 2, 17, 25], "segfault": 2, "select": [2, 3, 4, 17], "self": [0, 3, 4, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29], "self_loop_remov": 29, "semant": 29, "sensibl": 2, "sensit": 23, "sent": 1, "separ": [1, 2, 4, 8, 10, 11, 12, 25, 27], "separate_boundari": 29, "separate_class": [11, 25], "seq": 5, "sequenc": [0, 1, 2, 3, 4, 10, 11, 14, 15, 16, 17, 18, 20, 23, 25, 26, 27, 29], "sequencepass": [2, 11, 17], "sequenti": [4, 14, 18, 23, 27], "seri": [1, 2, 17], "serial": [1, 2, 6, 7, 27], "serialis": 2, "serializ": [0, 1, 2, 3, 4, 5, 16, 17, 18, 19, 20, 26, 27], "serv": 3, "server": 8, "servic": 8, "session": 3, "set": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 13, 15, 16, 17, 20, 21, 22, 24, 25, 27, 29], "set_level": [11, 13], "set_render_opt": 7, "set_valu": 5, "set_vertex_zxgen": 29, "set_wire_qtyp": 29, "set_wire_typ": 29, "setbit": 15, "setbitsop": [3, 11], "setof": 15, "sever": [2, 3, 7, 11, 17], "shallow": 11, "shape": 3, "share": [3, 4, 29], "shift": 3, "shortcut": [2, 10], "shorten": 7, "shorter": 2, "shot": [1, 2, 3, 8, 16, 27], "shot_tabl": 27, "should": [1, 2, 4, 9, 17, 21, 25, 27], "show": 10, "shown": [2, 8], "sigma_0": 3, "sigma_1": 3, "sigma_i": 3, "signatur": [2, 29], "signific": [1, 2, 18, 27], "significantli": 2, "similar": [12, 15, 17, 19, 25], "simmon": 25, "simpl": [2, 5, 17, 25, 27], "simpler": 2, "simplexbackend": 8, "simpli": [4, 11, 29], "simplif": [2, 17, 25, 27], "simplifi": [2, 17, 25, 27], "simplifyiniti": [2, 11, 17], "simplifyinitialnoclass": 17, "simplifymeasur": [11, 17], "simul": [1, 2, 10, 11, 23, 27], "simultan": [4, 14, 15], "sin": 15, "singl": [0, 1, 2, 3, 4, 7, 15, 17, 18, 19, 23, 25, 26, 27, 29], "singleq": 17, "singleton": [26, 27], "singli": [4, 21], "sivarajah": 25, "size": [3, 4, 17, 25, 26, 27], "skip": 28, "slack": 11, "sleep": 7, "slice": 2, "slow": [2, 27], "small": [2, 27], "smaller": [4, 17], "smallest": [4, 17, 25], "snake": [3, 16, 17, 25], "snippet": 10, "so": [1, 2, 9, 12, 17, 18, 23, 25, 27, 29], "softwar": [2, 8, 10, 11, 12], "solut": [17, 19, 25], "solv": [1, 11, 19], "some": [0, 1, 2, 3, 4, 7, 9, 11, 12, 14, 15, 16, 17, 20, 23, 24, 26, 27, 29], "someon": 11, "someth": 1, "sometim": 8, "soon": [11, 12], "sor": 3, "sort": 1, "sourc": [1, 2, 4, 5, 6, 7, 10, 17, 21, 22, 27, 28, 29], "space": 2, "spair": 3, "spam": [2, 11], "spamcorrect": [2, 27], "spars": [18, 27], "special": 17, "specialis": [0, 2, 8, 29], "specif": [1, 2, 3, 8, 10, 11, 17, 27, 29], "specifi": [1, 2, 3, 4, 9, 15, 17, 20, 23, 24, 25, 27, 29], "sped": 2, "speed": 2, "spent": [17, 25], "sphinx_autodoc_typehints_typ": 27, "spider": 29, "spider_fus": 29, "spuriou": 1, "sqrt": 15, "squar": [0, 25], "squaregrid": [0, 2, 11], "squash": [2, 17, 25], "squashcustom": [2, 11, 17], "squashhq": 2, "squashrzphasedx": [2, 11, 17], "squashtk1": [11, 17], "squashtotk1": 2, "squind_to_qind": 0, "stabil": [2, 23], "stabilis": [3, 18, 29], "stabiliserassertionbox": [2, 3, 4, 11], "stack": [2, 7, 11], "stage": 2, "stamp": 2, "standard": 28, "standardpass": 2, "star": 3, "start": [2, 11, 17, 20, 25], "stat": [2, 11], "state": [1, 2, 3, 4, 8, 10, 15, 17, 18, 27, 29], "state_circuit": 27, "state_expect": [18, 27], "statepreparationbox": [2, 3, 4, 11, 15], "statetupl": 27, "statevector": [1, 2, 3, 11, 18, 27], "static": [0, 3, 4, 15, 16, 17, 18, 19, 20, 25, 26, 27, 29], "statist": 8, "statu": [2, 11], "statusenum": 1, "steiner": 17, "step": [4, 17, 25, 27], "still": [2, 20], "stim": [8, 11], "stimbackend": 8, "stop": [2, 15, 17, 19], "storag": 1, "store": [1, 2, 4, 15, 27, 29], "storedresult": 1, "str": [0, 1, 3, 4, 5, 6, 7, 15, 17, 21, 22, 25, 26, 27, 28, 29], "straight": 2, "strat": [3, 16, 17], "strategi": [2, 3, 11, 15, 16, 17, 25, 27], "stream": [2, 21], "stream_in": 21, "stream_out": 21, "strict": [2, 17], "strict_check": [2, 17], "stricter": 2, "string": [1, 2, 3, 16, 18, 21, 23, 27, 29], "strip": 15, "structur": [1, 2, 3, 17, 27, 29], "style": [2, 3, 7, 23], "su": 2, "sub": [4, 5, 27], "sub_circ": 4, "subcirciuit": 25, "subcircuit": [2, 14, 15, 17, 24, 25], "subclass": 2, "subgraph": 19, "subject": 3, "submit": [1, 11], "submitted_tim": 1, "submodul": 2, "subregist": 2, "subroutin": 22, "subsequ": 4, "subset": [1, 27], "subsitut": 2, "subspac": 2, "substitut": [2, 3, 4, 14, 15, 17, 24, 25, 27, 29], "substitute_nam": 4, "subtract": 3, "success": [1, 25], "successfulli": 1, "suffici": 4, "suffix": 3, "suggest": 1, "suit": 27, "suitabl": [1, 2, 4, 27], "sum": [16, 27], "sum_i": 4, "sum_j": 27, "summari": [10, 17], "summaris": [2, 27], "superior": 10, "suppli": 2, "support": [1, 2, 3, 4, 10, 12, 14, 17, 21, 22, 25, 27], "supports_contextual_optimis": 1, "supports_count": 1, "supports_density_matrix": 1, "supports_expect": 1, "supports_fast_feedforward": 1, "supports_midcircuit_mea": 1, "supports_midcircuit_measur": 1, "supports_reset": 1, "supports_shot": 1, "supports_st": 1, "supports_unitari": 1, "sure": 3, "swap": [2, 3, 4, 11, 14, 15, 17, 19, 20, 25, 27], "switch": 2, "sx": [2, 4, 9, 15], "sxdg": [2, 4, 15], "sycamor": [2, 4, 15], "symbol": [2, 3, 4, 10, 11, 15, 17, 20, 21, 25, 29], "symbol_dict": 27, "symbol_map": [3, 4, 29], "symbol_substit": 2, "symbol_substitut": [2, 3, 4, 29], "symengin": 2, "symgatefunc": 27, "symgateregist": 27, "symmetr": 29, "sympi": [2, 3, 4, 17, 27, 29], "synth_strat": 25, "synthes": 2, "synthesi": [2, 3, 11, 14, 15, 17], "synthesis": [2, 3, 15, 17, 23, 25], "synthesis_strategi": 3, "synthesisehq": 2, "synthesiseibm": 2, "synthesiseoqc": 2, "synthesisepauligraph": 25, "synthesisetk": [2, 11, 17], "synthesisetket": [2, 11, 17], "synthesiseumd": [2, 11, 17], "system": [7, 10, 29], "system_them": 7, "systemat": 16, "t": [3, 4, 5, 6, 15, 17, 24, 25], "t0": [3, 27], "t1": [3, 27], "t_j": 3, "tab": 23, "tabl": [3, 4, 15, 23, 27], "tableau": 11, "tableaux": 2, "tag": 11, "tailor": [1, 2, 11], "take": [1, 2, 3, 4, 8, 10, 15, 16, 17, 25, 27], "taken": 9, "tale": 29, "target": [2, 3, 4, 9, 10, 17, 19, 25], "target_0": 4, "target_1": 4, "target_2qb_g": [2, 17, 25], "target_qubit": 4, "task": 11, "tdg": [2, 4, 15], "team": [11, 12], "techniqu": [11, 17], "telemetri": 2, "temp": 2, "tempfil": 7, "templat": 2, "temporari": 27, "tensor": [2, 3, 15, 16, 18, 29], "term": [2, 4, 9, 11, 15, 16, 18, 25, 27], "term_sequ": [11, 16], "termin": 15, "termsequencebox": [2, 3, 4, 11, 15, 25], "terra": 2, "test": [3, 11, 25], "tex": 4, "text": 21, "textbook": 2, "textio": 21, "textual": 2, "th": 27, "than": [2, 3, 4, 5, 11, 17, 20, 25, 27], "thank": 11, "thei": [2, 4, 15, 17, 18, 19, 25, 29], "them": [0, 2, 4, 10, 11, 16, 17, 25, 27, 29], "theme": 7, "theorem": [3, 23], "therefor": [1, 15], "theta": 15, "thi": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "think": 11, "third": [15, 17], "those": [10, 17, 29], "thread": [17, 25], "thread_timeout": [2, 17, 25], "three": [2, 3, 4, 9, 15, 17, 19, 25], "threequbitsquash": [2, 11, 17, 25], "threshold": [2, 27], "through": [1, 2, 3, 4, 8, 10, 15, 16, 25, 29], "throughout": 2, "throw": [2, 17, 23], "thu": [4, 27], "tie": [2, 17, 25], "time": [1, 2, 3, 4, 7, 16, 17, 19, 25, 27], "timeout": [1, 2, 19], "timestamp": 1, "tip": 29, "tk1": [2, 4, 9, 15, 17, 25], "tk1_replac": 17, "tk2": [2, 4, 9, 15, 17, 20, 25], "tk2_replac": 17, "tk_circ": 9, "tk_scratch_bit": 2, "tk_to_qiskit": 9, "tket": [2, 10, 11, 14, 15, 21, 22], "tketpass": 2, "to_circuit": [2, 23, 29], "to_dict": [0, 1, 2, 3, 4, 5, 6, 16, 17, 19, 20, 27], "to_doubled_diagram": 29, "to_graphlike_form": 29, "to_graphviz_str": [2, 29], "to_intlist": 27, "to_latex_fil": 4, "to_list": [18, 26, 27], "to_mbqc_diag": 29, "to_openfermion": 2, "to_readout": 27, "to_sparse_matrix": [2, 18, 27], "toffoli": [15, 25], "toffolibox": [2, 3, 4, 11, 15], "toffoliboxsynthstrat": [2, 3, 11], "togeth": [4, 15, 16, 17, 25, 29], "toggl": [1, 3], "tol": 27, "toler": 27, "too": 4, "tool": [2, 8, 10, 11, 15, 24, 27], "toolkit": 11, "top": 2, "topic": 11, "total": [3, 19, 27], "touch": 11, "toward": [2, 17, 25], "trace": [13, 25], "track": 2, "tracker": 12, "transfom": 17, "transform": [1, 2, 3, 4, 11, 15, 17, 24, 27, 29], "transient": 1, "transparent_bg": 7, "transpil": 10, "transpos": [2, 3, 4], "transposit": 3, "travers": 29, "treat": [2, 4, 27], "tree": [3, 5, 17, 25], "tri": [1, 19], "trial": [2, 17, 25], "triangl": [3, 29], "triangulargrid": 2, "trip": 2, "tripl": [17, 25], "triplet": 2, "tripli": 26, "trotter": 27, "trotteris": [2, 11, 27], "troubleshoot": [9, 11], "true": [1, 2, 3, 4, 7, 16, 17, 18, 20, 21, 25, 27, 28, 29], "truncat": 4, "truth": 15, "try": [2, 7, 9, 11, 12, 17, 25], "tune": 3, "tupl": [0, 1, 3, 5, 14, 18, 19, 24, 25, 27, 29], "turn": [1, 2, 3, 4, 15, 17, 25, 29], "tutori": [1, 2, 4, 10, 11, 15, 17, 19], "two": [0, 1, 2, 3, 4, 5, 8, 9, 15, 17, 18, 19, 20, 25, 27, 29], "two_qubit_gate_depth": [3, 4], "typ": 27, "type": [1, 2, 3, 4, 5, 6, 7, 9, 11, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29], "typevar": [5, 6, 27], "typic": [1, 14, 29], "u": [2, 4, 10, 11, 12, 15, 23, 29], "u1": [2, 4, 15, 25], "u2": [2, 3, 4, 15, 25], "u3": [2, 4, 15, 25], "u_port": 29, "ucc": 25, "uccsynthesi": 25, "ug": 23, "uid": [0, 2, 29], "um": 4, "unaryop": 5, "unassign": 2, "unbias": 27, "unchang": [2, 17], "uncomput": [2, 3, 15], "uncondit": 15, "unconjug": 29, "unconnect": 29, "uncorrel": 1, "under": [11, 27], "underli": [3, 17, 18, 27], "underscor": 2, "undirect": [0, 20, 29], "unhash": 2, "unifi": 4, "uniform": 2, "uniformli": [2, 3, 15, 24], "union": [1, 3, 4, 5, 7, 17, 21, 27, 29], "uniqu": [4, 16, 29], "unit": [1, 2, 4, 8, 26], "unit_id": [0, 3, 4, 11, 14, 17, 18, 19, 20, 23, 25, 29], "unitari": [1, 2, 3, 4, 11, 15, 23, 24, 25, 27, 29], "unitary1qbox": [3, 4, 11, 15], "unitary2qbox": [3, 4, 11, 15], "unitary3qbox": [2, 3, 4, 9, 11, 15], "unitarybox": 4, "unitaryrevtableau": [2, 11, 23], "unitarytableau": [2, 11, 23], "unitarytableaubox": [11, 23], "unitid": [0, 1, 2, 3, 4, 11, 14, 26, 29], "unittyp": [11, 26], "universalframerandomis": [11, 24], "unknown": 2, "unlik": 21, "unmeasur": [27, 29], "unmodifi": 17, "unnecessari": 2, "unord": [3, 15], "unparameteris": [23, 29], "unplac": [14, 19], "unsign": [3, 4, 17, 25, 27], "unsupport": 9, "until": [16, 17, 25, 29], "untouch": [4, 17, 25], "unus": [2, 4], "up": [2, 3, 4, 9, 10, 11, 15, 17, 23, 25, 27], "updat": [2, 6, 12, 23, 27, 29], "update_default_config_fil": 6, "update_pytket_config": 6, "upgrad": [10, 12], "upon": 3, "upper": [2, 3, 4, 19], "upper_triangl": 3, "uq": 23, "us": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 29], "usag": [14, 23], "use_clexpr": 21, "usefulli": 27, "user": [1, 2, 3, 4, 8, 9, 10, 15, 17, 19, 20, 27], "userdefinedpred": [11, 20], "userspac": 6, "usquashibm": 2, "usual": [3, 11], "utf": 21, "util": [1, 2, 11], "utilis": 2, "ux_": 23, "uz_": 23, "v": [4, 15, 25, 26, 29], "v_port": 29, "val": [1, 5], "valid": [0, 1, 2, 5, 17, 21, 29], "valid_check": 1, "valid_circuit": 1, "valid_oper": [0, 2], "valu": [0, 1, 2, 3, 4, 5, 6, 10, 15, 16, 17, 18, 25, 26, 27, 29], "valueerror": [1, 5, 27], "var": 5, "var_typ": 5, "variabl": [3, 4, 5, 15], "varianc": 27, "variant": 29, "variat": [8, 27], "variou": [1, 2, 27], "vdg": [4, 15], "vector": [1, 3, 4, 8, 24, 26, 27], "veri": 27, "verifi": [1, 16, 20], "version": [1, 2, 10, 11, 29], "vertex": [2, 29], "vertex0": 29, "vertex1": 29, "vertic": [2, 4, 16, 19, 29], "via": [1, 2, 3, 7, 8, 10, 16, 17, 27, 29], "viabil": 14, "viabl": 14, "view": [3, 7, 17, 27], "view_brows": [2, 7], "view_dag": 27, "view_qubit_graph": 27, "violat": 2, "visit": 11, "visual": 27, "visualis": [2, 4, 27], "vqe": 27, "w": 29, "wa": [1, 17, 19, 25], "wai": [4, 11, 12], "wait": [1, 7], "want": [2, 11], "warn": [2, 3, 13, 27], "wasm": [2, 3, 4, 11, 15, 21, 26], "wasm_fil": 21, "wasm_uid": [2, 3], "wasmfilehandl": [2, 11, 28], "wasmmodulehandl": 4, "wasmop": [3, 11], "wasmstat": [4, 11, 26], "wasmwir": 2, "we": [2, 9, 10, 11, 12, 17, 19, 21, 25, 27, 29], "webbrows": 7, "websit": 27, "weight": [16, 19, 27], "well": [1, 2, 4, 10, 12, 19], "were": [2, 4, 25, 27, 29], "weyl": [17, 25], "what": 19, "wheel": 12, "when": [1, 2, 3, 4, 9, 11, 14, 15, 17, 19, 21, 25, 27, 29], "whenev": 16, "where": [1, 2, 3, 4, 5, 7, 9, 11, 12, 15, 17, 19, 27, 29], "whether": [1, 2, 3, 4, 7, 14, 16, 17, 21, 25, 27], "which": [1, 2, 3, 4, 7, 8, 9, 10, 15, 16, 17, 19, 20, 22, 25, 27, 29], "while": [2, 16, 25], "while_repeat": 25, "whitespac": 17, "who": 12, "whole": [4, 14, 27], "whose": [1, 3, 4, 17, 23, 27], "wide": [9, 27], "width": [2, 3, 4, 7, 21, 27], "window": [2, 10, 11], "wire": [2, 3, 4, 7, 17, 20, 22, 24, 25, 29], "wire_at_port": 29, "wire_between": 29, "wiredclexpr": [3, 4, 11], "wires_between": 29, "wise": 5, "wish": [11, 27], "with_initial_reset": [2, 3], "within": [2, 3, 4, 7, 11, 15, 17, 25, 27, 29], "without": [1, 2, 4, 17, 18, 27, 29], "word": [17, 21], "work": [2, 10, 11, 17, 25], "workspac": 2, "worst": 16, "would": 2, "wrap": 2, "wrapper": [2, 3], "write": [1, 3, 4, 6, 7, 11, 21, 27], "write_config_fil": [6, 11], "write_fil": 6, "written": 21, "wrong": 2, "x": [0, 3, 4, 9, 10, 11, 12, 15, 17, 18, 23, 25, 27, 29], "x86_64": 2, "x_": 23, "xcirc": [17, 27], "xor": [2, 3, 4, 5], "xph": 23, "xspider": 29, "xx": [4, 23], "xxphase": [4, 15, 17], "xxphase3": [2, 3, 4, 15], "xy": 29, "xz": [23, 29], "y": [3, 4, 15, 18, 25, 27, 29], "yank": 2, "ye": [9, 12], "yet": [3, 27, 29], "yield": [1, 23, 29], "you": [1, 4, 7, 10, 11, 12, 15, 27], "your": [1, 7, 11, 12, 17, 21, 27], "yy": 4, "yyphas": [2, 4, 15, 17], "yz": 29, "z": [3, 4, 15, 18, 23, 25, 27, 29], "z_": 23, "zero": [2, 3, 4, 5, 17, 25, 27], "zh": 29, "zph": 23, "zspider": 29, "zx": [2, 7, 11, 17, 23], "zx_style": 7, "zxbox": [11, 29], "zxdiag": 29, "zxdiagram": [2, 11, 29], "zxgen": [11, 29], "zxgraphlikeoptimis": [2, 11, 17], "zxtype": [11, 29], "zxvert": [11, 29], "zxwire": [11, 29], "zxwiretyp": [11, 29], "zz": [4, 23], "zzmax": [2, 4, 15, 17, 25], "zzmax_fidel": [17, 25], "zzphase": [2, 4, 15, 17, 25], "zzphase_fidel": [2, 17, 25], "zzphasetorz": [2, 11, 17, 25], "\u03b1": 15}, "titles": ["pytket.architecture", "pytket.backends", "Changelog", "pytket.circuit", "pytket.circuit.Circuit", "pytket.circuit.logic_exp", "pytket.config", "pytket.circuit.display", "Extension packages", "TKET FAQs", "Getting Started", "pytket", "Installation Troubleshooting", "pytket.logging", "pytket.mapping", "pytket.circuit.OpType", "pytket.partition", "pytket.passes", "pytket.pauli", "pytket.placement", "pytket.predicates", "pytket.qasm", "pytket.quipper", "pytket.tableau", "pytket.tailoring", "pytket.transform", "pytket.unit_id", "pytket.utils", "pytket.wasm", "pytket.zx"], "titleterms": {"0": 2, "1": 2, "10": 2, "11": 2, "12": 2, "13": 2, "14": 2, "15": 2, "16": 2, "17": 2, "18": 2, "19": 2, "2": 2, "20": 2, "2018": 2, "2019": 2, "2020": 2, "2021": 2, "2022": 2, "2023": 2, "2024": [2, 11], "2025": 2, "21": 2, "22": 2, "23": 2, "24": 2, "25": 2, "26": 2, "27": 2, "28": 2, "29": 2, "2nd": 11, "3": 2, "30": 2, "31": 2, "32": 2, "33": 2, "34": 2, "35": 2, "36": 2, "37": 2, "38": 2, "39": 2, "4": 2, "40": 2, "5": 2, "6": 2, "7": 2, "8": 2, "9": 2, "access": 8, "action": 12, "ad": 11, "all": 12, "an": 12, "api": 11, "append": 4, "april": 2, "architectur": 0, "august": [2, 11], "backend": [1, 8], "backendinfo": 1, "backendresult": 1, "box": 4, "build": 12, "can": 12, "changelog": 2, "circuit": [3, 4, 5, 7, 15], "cite": 11, "class": 3, "clifford": 8, "cloud": 8, "conan": 12, "config": 6, "conveni": 4, "convers": 9, "could": 12, "decemb": 2, "densiti": 8, "displai": 7, "distribut": 27, "do": 12, "doc": 12, "emul": 8, "exampl": 7, "extens": [8, 11], "faq": [9, 12], "februari": 2, "found": 12, "from": 12, "gate": 4, "gener": 12, "get": [10, 12], "give": 12, "here": 12, "how": 11, "i": 12, "indic": 11, "instal": [11, 12], "instruct": 12, "issu": 11, "januari": 2, "juli": 2, "june": 2, "known": 11, "licenc": 11, "log": 13, "logic_exp": 5, "mai": 2, "map": 14, "march": 2, "matrix": 8, "mention": 12, "method": 4, "modul": 12, "my": 12, "novemb": 2, "octob": 2, "old": 12, "onli": 12, "optyp": 15, "other": 8, "overview": 11, "packag": 8, "partit": 16, "pass": 17, "pauli": 18, "pip": 12, "placement": 19, "predic": 20, "pytket": [0, 1, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "qasm": 21, "qiskit": 9, "qpu": 8, "quipper": 22, "ran": 12, "rebas": 9, "recommend": 12, "refer": 11, "resulthandl": 1, "script": 17, "septemb": 2, "simul": 8, "sourc": 12, "spam": 27, "start": 10, "stat": 27, "statevector": 8, "statu": 1, "still": 12, "support": 11, "symbol": 27, "synthesi": 9, "system": 12, "t": 12, "tabl": 11, "tableau": 23, "tailor": 24, "tket": [9, 12], "transform": 25, "tri": 12, "troubleshoot": 12, "type": 8, "unit_id": 26, "unitari": [8, 9], "us": 12, "usag": 7, "user": 11, "util": 27, "ve": 12, "version": 12, "wasm": 28, "what": 12, "when": 12, "why": 12, "window": 12, "without": 12, "won": 12, "work": 12, "zx": 29}})